package eu.numberfour.n4jsx.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import eu.numberfour.n4jsx.services.N4JSXGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalN4JSXParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Intersection", "Constructor", "Implements", "Instanceof", "Promisify", "Interface", "Protected", "Abstract", "Continue", "Debugger", "External", "Function", "Default", "Extends", "Finally", "Private", "Project", "Delete", "Export", "Import", "Public", "Return", "Static", "Switch", "Target", "Typeof", "Async", "Await", "Break", "Catch", "Class", "Const", "False", "Super", "Throw", "Union", "While", "Yield", "This", "Case", "Else", "Enum", "From", "Null", "This_1", "True", "Type", "Void", "With", "ExclamationMarkEqualsSignEqualsSign", "FullStopFullStopFullStop", "LessThanSignLessThanSignEqualsSign", "EqualsSignEqualsSignEqualsSign", "For", "Get", "Let", "New", "Out", "Set", "Try", "Var", "ExclamationMarkEqualsSign", "PercentSignEqualsSign", "AmpersandAmpersand", "AmpersandEqualsSign", "AsteriskEqualsSign", "PlusSignPlusSign", "PlusSignEqualsSign", "HyphenMinusHyphenMinus", "HyphenMinusEqualsSign", "SolidusEqualsSign", "LessThanSignLessThanSign", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "CommercialAtCommercialAt", "CircumflexAccentEqualsSign", "As", "Do", "If", "In", "Of", "VerticalLineEqualsSign", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "CommercialAt", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "LeftCurlyBracket", "VerticalLine", "RightCurlyBracket", "Tilde", "RULE_DECIMAL_DIGIT_FRAGMENT", "RULE_EXPONENT_PART", "RULE_DECIMAL_INTEGER_LITERAL_FRAGMENT", "RULE_DOUBLE", "RULE_INT_SUFFIX", "RULE_HEX_INT", "RULE_BINARY_INT", "RULE_OCTAL_INT", "RULE_LEGACY_OCTAL_INT", "RULE_IDENTIFIER_PART", "RULE_SCIENTIFIC_INT", "RULE_SIGNED_INT", "RULE_IDENTIFIER", "RULE_DOUBLE_STRING_CHAR", "RULE_SINGLE_STRING_CHAR", "RULE_STRING", "RULE_LINE_TERMINATOR_FRAGMENT", "RULE_LINE_TERMINATOR_SEQUENCE_FRAGMENT", "RULE_BACKSLASH_SEQUENCE", "RULE_REGEX_CHAR_OR_BRACKET", "RULE_REGEX_CHAR", "RULE_ACTUAL_REGEX_TAIL", "RULE_REGEX_START", "RULE_REGEX_TAIL", "RULE_TEMPLATE_LITERAL_CHAR", "RULE_TEMPLATE_HEAD", "RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL", "RULE_ACTUAL_TEMPLATE_END", "RULE_TEMPLATE_MIDDLE", "RULE_TEMPLATE_END", "RULE_TEMPLATE_CONTINUATION", "RULE_NO_LINE_TERMINATOR", "RULE_INCOMPLETE_ASYNC_ARROW", "RULE_STRUCTMODSUFFIX", "RULE_IDENTIFIER_START", "RULE_INT", "RULE_ML_COMMENT_FRAGMENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_EOL", "RULE_WHITESPACE_FRAGMENT", "RULE_WS", "RULE_HEX_DIGIT", "RULE_UNICODE_ESCAPE_FRAGMENT", "RULE_UNICODE_LETTER_FRAGMENT", "RULE_UNICODE_COMBINING_MARK_FRAGMENT", "RULE_UNICODE_DIGIT_FRAGMENT", "RULE_UNICODE_CONNECTOR_PUNCTUATION_FRAGMENT", "RULE_ZWNJ", "RULE_ZWJ", "RULE_DOT_DOT", "RULE_BOM", "RULE_UNICODE_SPACE_SEPARATOR_FRAGMENT", "RULE_SL_COMMENT_FRAGMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=21;
    public static final int Enum=45;
    public static final int RULE_REGEX_CHAR=134;
    public static final int Import=23;
    public static final int EqualsSignGreaterThanSign=78;
    public static final int Var=64;
    public static final int RULE_ACTUAL_TEMPLATE_END=141;
    public static final int Break=32;
    public static final int False=36;
    public static final int LessThanSign=102;
    public static final int LeftParenthesis=92;
    public static final int RULE_TEMPLATE_LITERAL_CHAR=138;
    public static final int Throw=38;
    public static final int Private=19;
    public static final int Extends=17;
    public static final int RULE_REGEX_TAIL=137;
    public static final int ExclamationMark=89;
    public static final int ExclamationMarkEqualsSignEqualsSign=53;
    public static final int GreaterThanSign=104;
    public static final int RULE_LINE_TERMINATOR_SEQUENCE_FRAGMENT=131;
    public static final int RULE_TEMPLATE_HEAD=139;
    public static final int RULE_STRUCTMODSUFFIX=147;
    public static final int RULE_EOL=153;
    public static final int RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL=140;
    public static final int Out=61;
    public static final int GreaterThanSignEqualsSign=79;
    public static final int RULE_ZWNJ=162;
    public static final int Project=20;
    public static final int EqualsSignEqualsSign=77;
    public static final int Switch=27;
    public static final int RULE_OCTAL_INT=121;
    public static final int VerticalLine=111;
    public static final int PlusSign=95;
    public static final int RULE_INT=149;
    public static final int Get=58;
    public static final int RULE_ML_COMMENT=151;
    public static final int LeftSquareBracket=107;
    public static final int LessThanSignLessThanSign=75;
    public static final int If=84;
    public static final int RULE_REGEX_START=136;
    public static final int Finally=18;
    public static final int Intersection=4;
    public static final int Set=62;
    public static final int RULE_UNICODE_ESCAPE_FRAGMENT=157;
    public static final int In=85;
    public static final int Catch=33;
    public static final int VerticalLineVerticalLine=88;
    public static final int RULE_SCIENTIFIC_INT=124;
    public static final int RULE_TEMPLATE_MIDDLE=142;
    public static final int RULE_INCOMPLETE_ASYNC_ARROW=146;
    public static final int RULE_EXPONENT_PART=115;
    public static final int Union=39;
    public static final int Case=43;
    public static final int RULE_REGEX_CHAR_OR_BRACKET=133;
    public static final int Comma=96;
    public static final int RULE_SL_COMMENT_FRAGMENT=167;
    public static final int Target=28;
    public static final int As=82;
    public static final int HyphenMinus=97;
    public static final int RULE_IDENTIFIER_PART=123;
    public static final int RULE_UNICODE_SPACE_SEPARATOR_FRAGMENT=166;
    public static final int Export=22;
    public static final int LessThanSignEqualsSign=76;
    public static final int CommercialAtCommercialAt=80;
    public static final int Solidus=99;
    public static final int RightCurlyBracket=112;
    public static final int PercentSignEqualsSign=66;
    public static final int RULE_HEX_INT=119;
    public static final int FullStop=98;
    public static final int Constructor=5;
    public static final int Abstract=11;
    public static final int Promisify=8;
    public static final int RULE_SIGNED_INT=125;
    public static final int Default=16;
    public static final int CommercialAt=106;
    public static final int Semicolon=101;
    public static final int RULE_LINE_TERMINATOR_FRAGMENT=130;
    public static final int Type=50;
    public static final int PlusSignPlusSign=70;
    public static final int QuestionMark=105;
    public static final int Else=44;
    public static final int RULE_HEX_DIGIT=156;
    public static final int RULE_UNICODE_CONNECTOR_PUNCTUATION_FRAGMENT=161;
    public static final int Yield=41;
    public static final int ExclamationMarkEqualsSign=65;
    public static final int Interface=9;
    public static final int RULE_TEMPLATE_CONTINUATION=144;
    public static final int HyphenMinusHyphenMinus=72;
    public static final int New=60;
    public static final int Null=47;
    public static final int AmpersandEqualsSign=68;
    public static final int Typeof=29;
    public static final int SolidusEqualsSign=74;
    public static final int True=49;
    public static final int FullStopFullStopFullStop=54;
    public static final int PercentSign=90;
    public static final int RULE_IDENTIFIER_START=148;
    public static final int Implements=6;
    public static final int RULE_WHITESPACE_FRAGMENT=154;
    public static final int Super=37;
    public static final int Async=30;
    public static final int This=42;
    public static final int Try=63;
    public static final int Ampersand=91;
    public static final int AsteriskEqualsSign=69;
    public static final int Void=51;
    public static final int VerticalLineEqualsSign=87;
    public static final int RightSquareBracket=108;
    public static final int RULE_BINARY_INT=120;
    public static final int Protected=10;
    public static final int Const=35;
    public static final int RULE_ACTUAL_REGEX_TAIL=135;
    public static final int For=57;
    public static final int RightParenthesis=93;
    public static final int RULE_UNICODE_COMBINING_MARK_FRAGMENT=159;
    public static final int Public=24;
    public static final int Do=83;
    public static final int RULE_LEGACY_OCTAL_INT=122;
    public static final int RULE_DOUBLE_STRING_CHAR=127;
    public static final int EqualsSignEqualsSignEqualsSign=56;
    public static final int RULE_TEMPLATE_END=143;
    public static final int This_1=48;
    public static final int RULE_NO_LINE_TERMINATOR=145;
    public static final int RULE_DOT_DOT=164;
    public static final int External=14;
    public static final int CircumflexAccentEqualsSign=81;
    public static final int Class=34;
    public static final int Static=26;
    public static final int Debugger=13;
    public static final int RULE_SINGLE_STRING_CHAR=128;
    public static final int LessThanSignLessThanSignEqualsSign=55;
    public static final int RULE_INT_SUFFIX=118;
    public static final int RULE_IDENTIFIER=126;
    public static final int RULE_ML_COMMENT_FRAGMENT=150;
    public static final int RULE_STRING=129;
    public static final int Continue=12;
    public static final int With=52;
    public static final int RULE_SL_COMMENT=152;
    public static final int Function=15;
    public static final int EqualsSign=103;
    public static final int RULE_ZWJ=163;
    public static final int RULE_UNICODE_DIGIT_FRAGMENT=160;
    public static final int AmpersandAmpersand=67;
    public static final int RULE_DOUBLE=117;
    public static final int Instanceof=7;
    public static final int HyphenMinusEqualsSign=73;
    public static final int Colon=100;
    public static final int RULE_BACKSLASH_SEQUENCE=132;
    public static final int EOF=-1;
    public static final int Asterisk=94;
    public static final int PlusSignEqualsSign=71;
    public static final int Return=25;
    public static final int RULE_WS=155;
    public static final int RULE_BOM=165;
    public static final int LeftCurlyBracket=110;
    public static final int Tilde=113;
    public static final int While=40;
    public static final int From=46;
    public static final int RULE_ANY_OTHER=168;
    public static final int CircumflexAccent=109;
    public static final int RULE_UNICODE_LETTER_FRAGMENT=158;
    public static final int RULE_DECIMAL_DIGIT_FRAGMENT=114;
    public static final int Of=86;
    public static final int RULE_DECIMAL_INTEGER_LITERAL_FRAGMENT=116;
    public static final int Let=59;
    public static final int Await=31;


        public InternalN4JSXParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalN4JSXParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalN4JSXParser.tokenNames; }
    public String getGrammarFileName() { return "InternalN4JSXParser.g"; }
    protected void setInRegularExpression() {}
    protected void setInTemplateSegment() {}
    protected boolean forcedRewind(int marker) { return true; } // overridden in subtype
    protected void promoteEOL() {} // overridden in subtype
    protected void addASIMessage() {} // overridden in subtype
    protected boolean hasDisallowedEOL() { return false; } // overridden in subtype


    	private N4JSXGrammarAccess grammarAccess;
    	 	
    	public InternalN4JSXParser(TokenStream input, N4JSXGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "IDLScript";	
    	} 
    	   	   	
    	@Override
    	protected N4JSXGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}
    public final EObject entryRuleIDLScript() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIDLScript = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDLScriptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDLScript=ruleIDLScript();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDLScript; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIDLScript() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_scriptElements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getIDLScriptAccess().getScriptAction_0(),
                          current);
                  
            }

            }
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==CommercialAtCommercialAt) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIDLScriptAccess().getAnnotationsScriptAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_annotations_1_0=ruleScriptAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIDLScriptRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.ScriptAnnotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=Intersection && LA2_0<=Implements)||(LA2_0>=Promisify && LA2_0<=Function)||(LA2_0>=Private && LA2_0<=Break)||(LA2_0>=Class && LA2_0<=This)||(LA2_0>=Enum && LA2_0<=With)||(LA2_0>=For && LA2_0<=Var)||LA2_0==PlusSignPlusSign||LA2_0==HyphenMinusHyphenMinus||LA2_0==SolidusEqualsSign||(LA2_0>=As && LA2_0<=If)||LA2_0==Of||LA2_0==ExclamationMark||LA2_0==LeftParenthesis||(LA2_0>=Asterisk && LA2_0<=PlusSign)||LA2_0==HyphenMinus||LA2_0==Solidus||(LA2_0>=Semicolon && LA2_0<=LessThanSign)||(LA2_0>=CommercialAt && LA2_0<=LeftSquareBracket)||LA2_0==LeftCurlyBracket||LA2_0==Tilde||LA2_0==RULE_DOUBLE||(LA2_0>=RULE_HEX_INT && LA2_0<=RULE_LEGACY_OCTAL_INT)||LA2_0==RULE_SCIENTIFIC_INT||LA2_0==RULE_IDENTIFIER||LA2_0==RULE_STRING||(LA2_0>=RULE_TEMPLATE_HEAD && LA2_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA2_0==RULE_INT) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIDLScriptAccess().getScriptElementsScriptElementParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_scriptElements_2_0=ruleScriptElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIDLScriptRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"scriptElements",
            	              		lv_scriptElements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ScriptElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;
        EObject this_ThisLiteral_0 = null;

        EObject this_SuperLiteral_1 = null;

        EObject this_IdentifierRef_2 = null;

        EObject this_JSXElement_3 = null;

        EObject this_ParameterizedCallExpression_4 = null;

        EObject this_Literal_5 = null;

        EObject this_ArrayLiteral_6 = null;

        EObject this_ObjectLiteral_7 = null;

        EObject this_ParenExpression_8 = null;

        EObject this_AnnotatedExpression_9 = null;

        EObject this_FunctionExpression_10 = null;

        EObject this_AsyncFunctionExpression_11 = null;

        EObject this_N4ClassExpression_12 = null;

        EObject this_TemplateLiteral_13 = null;


        enterRule(); 
        try { 
        	{
            int alt3=14;
            // REPLACEMENT rulePrimaryExpression.java.replacement START
            try {
                alt3 = dfa3.predict(input);
            } catch (NoViableAltException re) {
            	int as = input.LA(1);
            	if (as==Async) { alt3=3; }
            	else throw re;
            }
            // REPLACEMENT rulePrimaryExpression.java.replacement END
            switch (alt3) {
                case 1 : 
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisLiteral_0=ruleThisLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSuperLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperLiteral_1=ruleSuperLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SuperLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierRef_2=ruleIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IdentifierRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getJSXElementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXElement_3=ruleJSXElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXElement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParameterizedCallExpressionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedCallExpression_4=ruleParameterizedCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedCallExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_5=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Literal_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayLiteral_6=ruleArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getObjectLiteralParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectLiteral_7=ruleObjectLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectLiteral_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenExpression_8=ruleParenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParenExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAnnotatedExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExpression_9=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionExpression_10=ruleFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAsyncFunctionExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsyncFunctionExpression_11=ruleAsyncFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncFunctionExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getN4ClassExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassExpression_12=ruleN4ClassExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassExpression_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTemplateLiteralParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateLiteral_13=ruleTemplateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TemplateLiteral_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ThisLiteral_0 = null;

        EObject this_SuperLiteral_1 = null;

        EObject this_IdentifierRef_2 = null;

        EObject this_JSXElement_3 = null;

        EObject this_ParameterizedCallExpression_4 = null;

        EObject this_Literal_5 = null;

        EObject this_ArrayLiteral_6 = null;

        EObject this_ObjectLiteral_7 = null;

        EObject this_ParenExpression_8 = null;

        EObject this_AnnotatedExpression_9 = null;

        EObject this_FunctionExpression_10 = null;

        EObject this_AsyncFunctionExpression_11 = null;

        EObject this_N4ClassExpression_12 = null;

        EObject this_TemplateLiteral_13 = null;


         enterRule(); 
            
        try {
            {
            int alt4=14;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getThisLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisLiteral_0=ruleThisLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSuperLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SuperLiteral_1=ruleSuperLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SuperLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IdentifierRef_2=norm1_IdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IdentifierRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getJSXElementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXElement_3=ruleJSXElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXElement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParameterizedCallExpressionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedCallExpression_4=norm1_ParameterizedCallExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedCallExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_5=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Literal_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArrayLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayLiteral_6=norm1_ArrayLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getObjectLiteralParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectLiteral_7=norm1_ObjectLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectLiteral_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenExpressionParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenExpression_8=norm1_ParenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParenExpression_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAnnotatedExpressionParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExpression_9=norm1_AnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExpression_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionExpressionParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionExpression_10=ruleFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionExpression_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getAsyncFunctionExpressionParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AsyncFunctionExpression_11=ruleAsyncFunctionExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncFunctionExpression_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getN4ClassExpressionParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassExpression_12=norm1_N4ClassExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassExpression_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTemplateLiteralParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateLiteral_13=norm1_TemplateLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TemplateLiteral_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXElement=ruleJSXElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_jsxElementName_1_0 = null;

        EObject this_JSXAttributes_2 = null;

        EObject lv_jsxChildren_4_0 = null;

        EObject this_JSXClosingElement_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXElementAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXElementAccess().getJsxElementNameJSXElementNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_jsxElementName_1_0=ruleJSXElementName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXElementRule());
              	        }
                     		set(
                     			current, 
                     			"jsxElementName",
                      		lv_jsxElementName_1_0, 
                      		"eu.numberfour.n4jsx.N4JSX.JSXElementName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getJSXElementRule());
              		}
                      newCompositeNode(grammarAccess.getJSXElementAccess().getJSXAttributesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_7);
            this_JSXAttributes_2=ruleJSXAttributes(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_JSXAttributes_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==GreaterThanSign) ) {
                alt6=1;
            }
            else if ( (LA6_0==Solidus) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,GreaterThanSign,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getJSXElementAccess().getGreaterThanSignKeyword_3_0_0());
                          
                    }
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==LessThanSign) ) {
                            int LA5_1 = input.LA(2);

                            if ( ((LA5_1>=Intersection && LA5_1<=Implements)||(LA5_1>=Promisify && LA5_1<=Abstract)||LA5_1==External||(LA5_1>=Private && LA5_1<=Project)||LA5_1==Public||LA5_1==Static||LA5_1==Target||(LA5_1>=Async && LA5_1<=Await)||LA5_1==Union||(LA5_1>=Yield && LA5_1<=This)||LA5_1==From||LA5_1==Type||(LA5_1>=Get && LA5_1<=Let)||(LA5_1>=Out && LA5_1<=Set)||LA5_1==As||LA5_1==Of||LA5_1==RULE_IDENTIFIER) ) {
                                alt5=1;
                            }


                        }
                        else if ( (LA5_0==LeftCurlyBracket) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getJSXElementAccess().getJsxChildrenJSXChildParserRuleCall_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_jsxChildren_4_0=ruleJSXChild();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getJSXElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"jsxChildren",
                    	              		lv_jsxChildren_4_0, 
                    	              		"eu.numberfour.n4jsx.N4JSX.JSXChild");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getJSXElementRule());
                      		}
                              newCompositeNode(grammarAccess.getJSXElementAccess().getJSXClosingElementParserRuleCall_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXClosingElement_5=ruleJSXClosingElement(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXClosingElement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Solidus,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getJSXElementAccess().getSolidusKeyword_3_1_0());
                          
                    }
                    otherlv_7=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getJSXElementAccess().getGreaterThanSignKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXClosingElement(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_jsxClosingName_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXClosingElementAccess().getLessThanSignKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,Solidus,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJSXClosingElementAccess().getSolidusKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXClosingElementAccess().getJsxClosingNameJSXElementNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_9);
            lv_jsxClosingName_2_0=ruleJSXElementName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXClosingElementRule());
              	        }
                     		set(
                     			current, 
                     			"jsxClosingName",
                      		lv_jsxClosingName_2_0, 
                      		"eu.numberfour.n4jsx.N4JSX.JSXElementName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getJSXClosingElementAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXChild() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXChild = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXChildRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXChild=ruleJSXChild();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXChild; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXChild() throws RecognitionException {
        EObject current = null;

        EObject this_JSXElement_0 = null;

        EObject this_JSXExpression_1 = null;


         enterRule(); 
            
        try {
            {
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==LessThanSign) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftCurlyBracket) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJSXChildAccess().getJSXElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXElement_0=ruleJSXElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJSXChildAccess().getJSXExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXExpression_1=ruleJSXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXExpression=ruleJSXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXExpressionAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_12);
            lv_expression_1_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getJSXExpressionAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXElementName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXElementName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXElementNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXElementName=ruleJSXElementName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXElementName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXElementName() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXElementNameAccess().getExpressionJSXElementNameExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleJSXElementNameExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXElementNameRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4jsx.N4JSX.JSXElementNameExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXElementNameExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXElementNameExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXElementNameExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXElementNameExpression=ruleJSXElementNameExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXElementNameExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXElementNameExpression() throws RecognitionException {
        EObject current = null;

        EObject this_IdentifierRef_0 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getJSXElementNameExpressionAccess().getIdentifierRefParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_13);
            this_IdentifierRef_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_IdentifierRef_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==FullStop) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getJSXElementNameExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    if ( state.backtracking==0 ) {
            	       
            	      		if (current==null) {
            	      			current = createModelElement(grammarAccess.getJSXElementNameExpressionRule());
            	      		}
            	              newCompositeNode(grammarAccess.getJSXElementNameExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_1()); 
            	          
            	    }
            	    pushFollow(FOLLOW_13);
            	    this_ParameterizedPropertyAccessExpressionTail_2=ruleParameterizedPropertyAccessExpressionTail(current);

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current = this_ParameterizedPropertyAccessExpressionTail_2;
            	              afterParserOrEnumRuleCall();
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXAttributes(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_jsxAttributes_0_0 = null;


         enterRule(); 
            
        try {
            {
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( ((LA9_0>=Intersection && LA9_0<=With)||(LA9_0>=For && LA9_0<=Var)||(LA9_0>=As && LA9_0<=Of)||LA9_0==LeftCurlyBracket||LA9_0==RULE_IDENTIFIER) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getJSXAttributesAccess().getJsxAttributesJSXAttributeParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_14);
            	    lv_jsxAttributes_0_0=ruleJSXAttribute();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getJSXAttributesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"jsxAttributes",
            	              		lv_jsxAttributes_0_0, 
            	              		"eu.numberfour.n4jsx.N4JSX.JSXAttribute");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXAttribute = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXAttribute=ruleJSXAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXAttribute() throws RecognitionException {
        EObject current = null;

        EObject this_JSXSpreadAttribute_0 = null;

        EObject this_JSXPropertyAttribute_1 = null;


         enterRule(); 
            
        try {
            {
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==LeftCurlyBracket) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=Intersection && LA10_0<=With)||(LA10_0>=For && LA10_0<=Var)||(LA10_0>=As && LA10_0<=Of)||LA10_0==RULE_IDENTIFIER) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJSXAttributeAccess().getJSXSpreadAttributeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXSpreadAttribute_0=ruleJSXSpreadAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXSpreadAttribute_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getJSXAttributeAccess().getJSXPropertyAttributeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_JSXPropertyAttribute_1=ruleJSXPropertyAttribute();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_JSXPropertyAttribute_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXSpreadAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXSpreadAttribute = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXSpreadAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXSpreadAttribute=ruleJSXSpreadAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXSpreadAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXSpreadAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getJSXSpreadAttributeAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,FullStopFullStopFullStop,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getJSXSpreadAttributeAccess().getFullStopFullStopFullStopKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXSpreadAttributeAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_12);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getJSXSpreadAttributeRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getJSXSpreadAttributeAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleJSXPropertyAttribute() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJSXPropertyAttribute = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJSXPropertyAttributeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJSXPropertyAttribute=ruleJSXPropertyAttribute();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJSXPropertyAttribute; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleJSXPropertyAttribute() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_jsxAttributeValue_2_0 = null;

        EObject lv_jsxAttributeValue_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getJSXPropertyAttributeRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getJSXPropertyAttributeAccess().getPropertyIdentifiableElementCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==EqualsSign) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getJSXPropertyAttributeAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==RULE_STRING) ) {
                        alt11=1;
                    }
                    else if ( (LA11_0==LeftCurlyBracket) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 0, input);

                        throw nvae;
                    }
                    switch (alt11) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getJSXPropertyAttributeAccess().getJsxAttributeValueStringLiteralParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_jsxAttributeValue_2_0=ruleStringLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getJSXPropertyAttributeRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"jsxAttributeValue",
                                      		lv_jsxAttributeValue_2_0, 
                                      		"eu.numberfour.n4js.N4JS.StringLiteral");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_3, grammarAccess.getJSXPropertyAttributeAccess().getLeftCurlyBracketKeyword_1_1_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getJSXPropertyAttributeAccess().getJsxAttributeValueAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_12);
                            lv_jsxAttributeValue_4_0=ruleAssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getJSXPropertyAttributeRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"jsxAttributeValue",
                                      		lv_jsxAttributeValue_4_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getJSXPropertyAttributeAccess().getRightCurlyBracketKeyword_1_1_1_2());
                                  
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScriptElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScriptElement=ruleScriptElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScriptElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScriptElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedScriptElement_0 = null;

        EObject this_N4ClassDeclaration_1 = null;

        EObject this_N4InterfaceDeclaration_2 = null;

        EObject this_N4EnumDeclaration_3 = null;

        EObject this_ImportDeclaration_4 = null;

        EObject this_ExportDeclaration_5 = null;

        EObject this_RootStatement_6 = null;


         enterRule(); 
            
        try {
            {
            int alt13=7;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getAnnotatedScriptElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedScriptElement_0=ruleAnnotatedScriptElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedScriptElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4ClassDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassDeclaration_1=ruleN4ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4InterfaceDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4InterfaceDeclaration_2=ruleN4InterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4InterfaceDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getN4EnumDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4EnumDeclaration_3=ruleN4EnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4EnumDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getImportDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportDeclaration_4=ruleImportDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getExportDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportDeclaration_5=ruleExportDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getScriptElementAccess().getRootStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_6=ruleRootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedScriptElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedScriptElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedScriptElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedScriptElement=ruleAnnotatedScriptElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedScriptElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedScriptElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_11=null;
        Token otherlv_18=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        EObject this_AnnotationList_0 = null;

        EObject this_ExportDeclarationImpl_2 = null;

        EObject this_ImportDeclarationImpl_4 = null;

        Enumerator lv_declaredModifiers_6_0 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;

        Enumerator lv_declaredModifiers_10_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_12_0 = null;

        AntlrDatatypeRuleToken lv_name_13_0 = null;

        EObject this_TypeVariables_14 = null;

        EObject this_ClassExtendsClause_15 = null;

        Enumerator lv_declaredModifiers_17_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_19_0 = null;

        AntlrDatatypeRuleToken lv_name_20_0 = null;

        EObject this_TypeVariables_21 = null;

        EObject this_InterfaceImplementsList_22 = null;

        EObject this_Members_23 = null;

        Enumerator lv_declaredModifiers_25_0 = null;

        AntlrDatatypeRuleToken lv_name_27_0 = null;

        EObject lv_literals_29_0 = null;

        EObject lv_literals_31_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_18);
            this_AnnotationList_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }
            int alt26=5;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getExportDeclarationAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getExportDeclarationImplParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportDeclarationImpl_2=ruleExportDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportDeclarationImpl_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getImportDeclarationAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getImportDeclarationImplParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportDeclarationImpl_4=ruleImportDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportDeclarationImpl_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getFunctionDeclarationAnnotationListAction_1_2_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( ((LA14_0>=Protected && LA14_0<=Abstract)||LA14_0==External||(LA14_0>=Private && LA14_0<=Project)||LA14_0==Public||LA14_0==Static||LA14_0==Const) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_1_0_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_declaredModifiers_6_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_19);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getFunctionImplParserRuleCall_1_2_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=ruleFunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    int alt23=2;
                    alt23 = dfa23.predict(input);
                    switch (alt23) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedScriptElementAccess().getN4ClassDeclarationAnnotationListAction_1_3_0_0_0(),
                                          current);
                                  
                            }

                            }
                            loop15:
                            do {
                                int alt15=2;
                                int LA15_0 = input.LA(1);

                                if ( ((LA15_0>=Protected && LA15_0<=Abstract)||LA15_0==External||(LA15_0>=Private && LA15_0<=Project)||LA15_0==Public||LA15_0==Static||LA15_0==Const) ) {
                                    alt15=1;
                                }


                                switch (alt15) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_20);
                            	    lv_declaredModifiers_10_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_10_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop15;
                                }
                            } while (true);

                            otherlv_11=(Token)match(input,Class,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getAnnotatedScriptElementAccess().getClassKeyword_1_3_0_0_2());
                                  
                            }
                            int alt16=2;
                            int LA16_0 = input.LA(1);

                            if ( (LA16_0==Tilde) ) {
                                alt16=1;
                            }
                            switch (alt16) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_3_0_0_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_12_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_12_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_3_0_0_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_13_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_13_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt17=2;
                            int LA17_0 = input.LA(1);

                            if ( (LA17_0==LessThanSign) ) {
                                alt17=1;
                            }
                            switch (alt17) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypeVariablesParserRuleCall_1_3_0_0_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_14=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_14;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt18=2;
                            int LA18_0 = input.LA(1);

                            if ( (LA18_0==Implements||LA18_0==Extends) ) {
                                alt18=1;
                            }
                            switch (alt18) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getClassExtendsClauseParserRuleCall_1_3_0_0_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_ClassExtendsClause_15=ruleClassExtendsClause(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassExtendsClause_15;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedScriptElementAccess().getN4InterfaceDeclarationAnnotationListAction_1_3_0_1_0(),
                                          current);
                                  
                            }

                            }
                            loop19:
                            do {
                                int alt19=2;
                                int LA19_0 = input.LA(1);

                                if ( ((LA19_0>=Protected && LA19_0<=Abstract)||LA19_0==External||(LA19_0>=Private && LA19_0<=Project)||LA19_0==Public||LA19_0==Static||LA19_0==Const) ) {
                                    alt19=1;
                                }


                                switch (alt19) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_23);
                            	    lv_declaredModifiers_17_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_17_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop19;
                                }
                            } while (true);

                            otherlv_18=(Token)match(input,Interface,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_18, grammarAccess.getAnnotatedScriptElementAccess().getInterfaceKeyword_1_3_0_1_2());
                                  
                            }
                            int alt20=2;
                            int LA20_0 = input.LA(1);

                            if ( (LA20_0==Tilde) ) {
                                alt20=1;
                            }
                            switch (alt20) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_3_0_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_19_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_19_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_3_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_20_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_20_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt21=2;
                            int LA21_0 = input.LA(1);

                            if ( (LA21_0==LessThanSign) ) {
                                alt21=1;
                            }
                            switch (alt21) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getTypeVariablesParserRuleCall_1_3_0_1_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_21=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_21;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt22=2;
                            int LA22_0 = input.LA(1);

                            if ( (LA22_0==Implements||LA22_0==Extends) ) {
                                alt22=1;
                            }
                            switch (alt22) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getInterfaceImplementsListParserRuleCall_1_3_0_1_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_InterfaceImplementsList_22=ruleInterfaceImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_InterfaceImplementsList_22;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedScriptElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getMembersParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_23=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_23;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedScriptElementAccess().getN4EnumDeclarationAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( ((LA24_0>=Protected && LA24_0<=Abstract)||LA24_0==External||(LA24_0>=Private && LA24_0<=Project)||LA24_0==Public||LA24_0==Static||LA24_0==Const) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_declaredModifiers_25_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_25_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    otherlv_26=(Token)match(input,Enum,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getAnnotatedScriptElementAccess().getEnumKeyword_1_4_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getNameBindingIdentifierParserRuleCall_1_4_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_27_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_27_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getAnnotatedScriptElementAccess().getLeftCurlyBracketKeyword_1_4_4());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_4_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_literals_29_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_29_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==Comma) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    {
                    	    otherlv_30=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_30, grammarAccess.getAnnotatedScriptElementAccess().getCommaKeyword_1_4_6_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedScriptElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_4_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_literals_31_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedScriptElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_31_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);

                    otherlv_32=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_32, grammarAccess.getAnnotatedScriptElementAccess().getRightCurlyBracketKeyword_1_4_7());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeVariables(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeVars_1_0 = null;

        EObject lv_typeVars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypeVariablesAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeVariablesAccess().getTypeVarsTypeVariableParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_29);
            lv_typeVars_1_0=ruleTypeVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeVariablesRule());
              	        }
                     		add(
                     			current, 
                     			"typeVars",
                      		lv_typeVars_1_0, 
                      		"eu.numberfour.n4js.N4JS.TypeVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==Comma) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTypeVariablesAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeVariablesAccess().getTypeVarsTypeVariableParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_typeVars_3_0=ruleTypeVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeVariablesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeVars",
            	              		lv_typeVars_3_0, 
            	              		"eu.numberfour.n4js.N4JS.TypeVariable");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            otherlv_4=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypeVariablesAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportDeclaration=ruleExportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ExportDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportDeclarationAccess().getExportDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportDeclarationAccess().getExportDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ExportDeclarationImpl_1=ruleExportDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExportDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_wildcardExport_1_0=null;
        Token lv_defaultExport_8_0=null;
        EObject this_ExportFromClause_2 = null;

        EObject this_ExportClause_4 = null;

        EObject this_ExportFromClause_5 = null;

        EObject lv_exportedElement_7_0 = null;

        EObject lv_exportedElement_9_0 = null;

        EObject lv_defaultExportedExpression_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Export,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportDeclarationImplAccess().getExportKeyword_0());
                  
            }
            int alt30=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt30=1;
                }
                break;
            case LeftCurlyBracket:
                {
                alt30=2;
                }
                break;
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Function:
            case Private:
            case Project:
            case Public:
            case Static:
            case Async:
            case Class:
            case Const:
            case Enum:
            case Let:
            case Var:
            case CommercialAt:
                {
                alt30=3;
                }
                break;
            case Default:
                {
                alt30=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_wildcardExport_1_0=(Token)match(input,Asterisk,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_wildcardExport_1_0, grammarAccess.getExportDeclarationImplAccess().getWildcardExportAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "wildcardExport", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportFromClauseParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_32);
                    this_ExportFromClause_2=ruleExportFromClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportFromClause_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportClauseParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_33);
                    this_ExportClause_4=ruleExportClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportClause_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==From) && (synpred10_InternalN4JSXParser())) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                              		}
                                      newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportFromClauseParserRuleCall_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_32);
                            this_ExportFromClause_5=ruleExportFromClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ExportFromClause_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportedElementExportableElementParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_exportedElement_7_0=ruleExportableElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"exportedElement",
                              		lv_exportedElement_7_0, 
                              		"eu.numberfour.n4js.N4JS.ExportableElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    lv_defaultExport_8_0=(Token)match(input,Default,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_defaultExport_8_0, grammarAccess.getExportDeclarationImplAccess().getDefaultExportDefaultKeyword_1_3_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getExportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "defaultExport", true, "default");
                      	    
                    }

                    }


                    }
                    int alt29=2;
                    alt29 = dfa29.predict(input);
                    switch (alt29) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getExportedElementExportableElementParserRuleCall_1_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_exportedElement_9_0=ruleExportableElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"exportedElement",
                                      		lv_exportedElement_9_0, 
                                      		"eu.numberfour.n4js.N4JS.ExportableElement");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getDefaultExportedExpressionAssignmentExpressionParserRuleCall_1_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_32);
                            lv_defaultExportedExpression_10_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getExportDeclarationImplRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"defaultExportedExpression",
                                      		lv_defaultExportedExpression_10_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getExportDeclarationImplAccess().getSemiParserRuleCall_1_3_1_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_2);
                            ruleSemi();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportFromClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;

         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,From,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportFromClauseAccess().getFromKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getExportFromClauseRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportFromClauseAccess().getReexportedFromTModuleCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_namedExports_1_0 = null;

        EObject lv_namedExports_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExportClauseAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( ((LA33_0>=Intersection && LA33_0<=Implements)||(LA33_0>=Promisify && LA33_0<=Abstract)||LA33_0==External||(LA33_0>=Private && LA33_0<=Project)||LA33_0==Public||LA33_0==Static||LA33_0==Target||(LA33_0>=Async && LA33_0<=Await)||LA33_0==Union||(LA33_0>=Yield && LA33_0<=This)||LA33_0==From||LA33_0==Type||(LA33_0>=Get && LA33_0<=Let)||(LA33_0>=Out && LA33_0<=Set)||LA33_0==As||LA33_0==Of||LA33_0==RULE_IDENTIFIER) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportClauseAccess().getNamedExportsExportSpecifierParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_namedExports_1_0=ruleExportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportClauseRule());
                      	        }
                             		add(
                             			current, 
                             			"namedExports",
                              		lv_namedExports_1_0, 
                              		"eu.numberfour.n4js.N4JS.ExportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==Comma) ) {
                            int LA31_1 = input.LA(2);

                            if ( ((LA31_1>=Intersection && LA31_1<=Implements)||(LA31_1>=Promisify && LA31_1<=Abstract)||LA31_1==External||(LA31_1>=Private && LA31_1<=Project)||LA31_1==Public||LA31_1==Static||LA31_1==Target||(LA31_1>=Async && LA31_1<=Await)||LA31_1==Union||(LA31_1>=Yield && LA31_1<=This)||LA31_1==From||LA31_1==Type||(LA31_1>=Get && LA31_1<=Let)||(LA31_1>=Out && LA31_1<=Set)||LA31_1==As||LA31_1==Of||LA31_1==RULE_IDENTIFIER) ) {
                                alt31=1;
                            }


                        }


                        switch (alt31) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getExportClauseAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExportClauseAccess().getNamedExportsExportSpecifierParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_namedExports_3_0=ruleExportSpecifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExportClauseRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"namedExports",
                    	              		lv_namedExports_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.ExportSpecifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==Comma) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            {
                            otherlv_4=(Token)match(input,Comma,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getExportClauseAccess().getCommaKeyword_1_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getExportClauseAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportSpecifier=ruleExportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_element_0_0 = null;

        AntlrDatatypeRuleToken lv_alias_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportSpecifierAccess().getElementIdentifierRefParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_37);
            lv_element_0_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportSpecifierRule());
              	        }
                     		set(
                     			current, 
                     			"element",
                      		lv_element_0_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==As) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,As,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExportSpecifierAccess().getAsKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExportSpecifierAccess().getAliasIdentifierNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_alias_2_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExportSpecifierRule());
                      	        }
                             		set(
                             			current, 
                             			"alias",
                              		lv_alias_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportableElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportableElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportableElement=ruleExportableElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportableElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportableElement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedExportableElement_0 = null;

        EObject this_N4ClassDeclaration_1 = null;

        EObject this_N4InterfaceDeclaration_2 = null;

        EObject this_N4EnumDeclaration_3 = null;

        EObject this_ExportedFunctionDeclaration_4 = null;

        EObject this_ExportedVariableStatement_5 = null;


         enterRule(); 
            
        try {
            {
            int alt35=6;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getAnnotatedExportableElementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedExportableElement_0=ruleAnnotatedExportableElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedExportableElement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4ClassDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4ClassDeclaration_1=ruleN4ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4ClassDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4InterfaceDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4InterfaceDeclaration_2=ruleN4InterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4InterfaceDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getN4EnumDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4EnumDeclaration_3=ruleN4EnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4EnumDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getExportedFunctionDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedFunctionDeclaration_4=ruleExportedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedFunctionDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportableElementAccess().getExportedVariableStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableStatement_5=ruleExportedVariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedExportableElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExportableElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExportableElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedExportableElement=ruleAnnotatedExportableElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExportableElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedExportableElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_9=null;
        Token otherlv_14=null;
        Token otherlv_21=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        EObject this_AnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_AsyncNoTrailingLineBreak_3 = null;

        EObject this_FunctionImpl_4 = null;

        Enumerator lv_declaredModifiers_6_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_varDeclsOrBindings_10_0 = null;

        Enumerator lv_declaredModifiers_13_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_15_0 = null;

        AntlrDatatypeRuleToken lv_name_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_ClassExtendsClause_18 = null;

        Enumerator lv_declaredModifiers_20_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_22_0 = null;

        AntlrDatatypeRuleToken lv_name_23_0 = null;

        EObject this_TypeVariables_24 = null;

        EObject this_InterfaceImplementsList_25 = null;

        EObject this_Members_26 = null;

        Enumerator lv_declaredModifiers_28_0 = null;

        AntlrDatatypeRuleToken lv_name_30_0 = null;

        EObject lv_literals_32_0 = null;

        EObject lv_literals_34_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_39);
            this_AnnotationList_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }
            int alt50=4;
            alt50 = dfa50.predict(input);
            switch (alt50) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getFunctionDeclarationAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( ((LA36_0>=Protected && LA36_0<=Abstract)||LA36_0==External||(LA36_0>=Private && LA36_0<=Project)||LA36_0==Public||LA36_0==Static||LA36_0==Const) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_19);
                    this_AsyncNoTrailingLineBreak_3=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getFunctionImplParserRuleCall_1_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_4=ruleFunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getExportedVariableStatementAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }
                    loop37:
                    do {
                        int alt37=2;
                        alt37 = dfa37.predict(input);
                        switch (alt37) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_declaredModifiers_6_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_41);
                    lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varStmtKeyword",
                              		lv_varStmtKeyword_7_0, 
                              		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_1_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_42);
                    lv_varDeclsOrBindings_8_0=ruleExportedVariableDeclarationOrBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		add(
                             			current, 
                             			"varDeclsOrBindings",
                              		lv_varDeclsOrBindings_8_0, 
                              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==Comma) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    {
                    	    otherlv_9=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_9, grammarAccess.getAnnotatedExportableElementAccess().getCommaKeyword_1_1_4_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_1_1_4_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_varDeclsOrBindings_10_0=ruleExportedVariableDeclarationOrBinding();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"varDeclsOrBindings",
                    	              		lv_varDeclsOrBindings_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getSemiParserRuleCall_1_1_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt47=2;
                    alt47 = dfa47.predict(input);
                    switch (alt47) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedExportableElementAccess().getN4ClassDeclarationAnnotationListAction_1_2_0_0_0(),
                                          current);
                                  
                            }

                            }
                            loop39:
                            do {
                                int alt39=2;
                                int LA39_0 = input.LA(1);

                                if ( ((LA39_0>=Protected && LA39_0<=Abstract)||LA39_0==External||(LA39_0>=Private && LA39_0<=Project)||LA39_0==Public||LA39_0==Static||LA39_0==Const) ) {
                                    alt39=1;
                                }


                                switch (alt39) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_20);
                            	    lv_declaredModifiers_13_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_13_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop39;
                                }
                            } while (true);

                            otherlv_14=(Token)match(input,Class,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedExportableElementAccess().getClassKeyword_1_2_0_0_2());
                                  
                            }
                            int alt40=2;
                            int LA40_0 = input.LA(1);

                            if ( (LA40_0==Tilde) ) {
                                alt40=1;
                            }
                            switch (alt40) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_2_0_0_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_15_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_15_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_2_0_0_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_16_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_16_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt41=2;
                            int LA41_0 = input.LA(1);

                            if ( (LA41_0==LessThanSign) ) {
                                alt41=1;
                            }
                            switch (alt41) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypeVariablesParserRuleCall_1_2_0_0_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_17=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_17;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt42=2;
                            int LA42_0 = input.LA(1);

                            if ( (LA42_0==Implements||LA42_0==Extends) ) {
                                alt42=1;
                            }
                            switch (alt42) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getClassExtendsClauseParserRuleCall_1_2_0_0_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_ClassExtendsClause_18=ruleClassExtendsClause(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassExtendsClause_18;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAnnotatedExportableElementAccess().getN4InterfaceDeclarationAnnotationListAction_1_2_0_1_0(),
                                          current);
                                  
                            }

                            }
                            loop43:
                            do {
                                int alt43=2;
                                int LA43_0 = input.LA(1);

                                if ( ((LA43_0>=Protected && LA43_0<=Abstract)||LA43_0==External||(LA43_0>=Private && LA43_0<=Project)||LA43_0==Public||LA43_0==Static||LA43_0==Const) ) {
                                    alt43=1;
                                }


                                switch (alt43) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_23);
                            	    lv_declaredModifiers_20_0=ruleN4Modifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"declaredModifiers",
                            	              		lv_declaredModifiers_20_0, 
                            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop43;
                                }
                            } while (true);

                            otherlv_21=(Token)match(input,Interface,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_21, grammarAccess.getAnnotatedExportableElementAccess().getInterfaceKeyword_1_2_0_1_2());
                                  
                            }
                            int alt44=2;
                            int LA44_0 = input.LA(1);

                            if ( (LA44_0==Tilde) ) {
                                alt44=1;
                            }
                            switch (alt44) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_1_2_0_1_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_5);
                                    lv_typingStrategy_22_0=ruleTypingStrategyDefSiteOperator();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"typingStrategy",
                                              		lv_typingStrategy_22_0, 
                                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_2_0_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_23_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_23_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt45=2;
                            int LA45_0 = input.LA(1);

                            if ( (LA45_0==LessThanSign) ) {
                                alt45=1;
                            }
                            switch (alt45) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getTypeVariablesParserRuleCall_1_2_0_1_5()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_TypeVariables_24=ruleTypeVariables(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_TypeVariables_24;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }
                            int alt46=2;
                            int LA46_0 = input.LA(1);

                            if ( (LA46_0==Implements||LA46_0==Extends) ) {
                                alt46=1;
                            }
                            switch (alt46) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                                      		}
                                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getInterfaceImplementsListParserRuleCall_1_2_0_1_6()); 
                                          
                                    }
                                    pushFollow(FOLLOW_22);
                                    this_InterfaceImplementsList_25=ruleInterfaceImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_InterfaceImplementsList_25;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExportableElementRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getMembersParserRuleCall_1_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_26=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_26;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExportableElementAccess().getN4EnumDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( ((LA48_0>=Protected && LA48_0<=Abstract)||LA48_0==External||(LA48_0>=Private && LA48_0<=Project)||LA48_0==Public||LA48_0==Static||LA48_0==Const) ) {
                            alt48=1;
                        }


                        switch (alt48) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_declaredModifiers_28_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_28_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop48;
                        }
                    } while (true);

                    otherlv_29=(Token)match(input,Enum,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getAnnotatedExportableElementAccess().getEnumKeyword_1_3_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getNameBindingIdentifierParserRuleCall_1_3_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_30_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_30_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_31, grammarAccess.getAnnotatedExportableElementAccess().getLeftCurlyBracketKeyword_1_3_4());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_3_5_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_literals_32_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_32_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop49:
                    do {
                        int alt49=2;
                        int LA49_0 = input.LA(1);

                        if ( (LA49_0==Comma) ) {
                            alt49=1;
                        }


                        switch (alt49) {
                    	case 1 :
                    	    {
                    	    otherlv_33=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_33, grammarAccess.getAnnotatedExportableElementAccess().getCommaKeyword_1_3_6_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedExportableElementAccess().getLiteralsN4EnumLiteralParserRuleCall_1_3_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_literals_34_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedExportableElementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_34_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    otherlv_35=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_35, grammarAccess.getAnnotatedExportableElementAccess().getRightCurlyBracketKeyword_1_3_7());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportDeclaration=ruleImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_ImportDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getImportDeclarationAccess().getImportDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getImportDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getImportDeclarationAccess().getImportDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ImportDeclarationImpl_1=ruleImportDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ImportDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_importFrom_2_0=null;
        EObject this_ImportClause_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImportDeclarationImplAccess().getImportKeyword_0());
                  
            }
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( ((LA51_0>=Intersection && LA51_0<=Implements)||(LA51_0>=Promisify && LA51_0<=Abstract)||LA51_0==External||(LA51_0>=Private && LA51_0<=Project)||LA51_0==Public||LA51_0==Static||LA51_0==Target||(LA51_0>=Async && LA51_0<=Await)||LA51_0==Union||(LA51_0>=Yield && LA51_0<=This)||LA51_0==From||LA51_0==Type||(LA51_0>=Get && LA51_0<=Let)||(LA51_0>=Out && LA51_0<=Set)||LA51_0==As||LA51_0==Of||LA51_0==Asterisk||LA51_0==LeftCurlyBracket||LA51_0==RULE_IDENTIFIER) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getImportDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getImportClauseParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_31);
                    this_ImportClause_1=ruleImportClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportClause_1;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    lv_importFrom_2_0=(Token)match(input,From,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_importFrom_2_0, grammarAccess.getImportDeclarationImplAccess().getImportFromFromKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getImportDeclarationImplRule());
                      	        }
                             		setWithLastConsumed(current, "importFrom", true, "from");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getImportDeclarationImplRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getModuleTModuleCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getImportDeclarationImplAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_importSpecifiers_0_0 = null;

        EObject this_ImportSpecifiersExceptDefault_2 = null;

        EObject this_ImportSpecifiersExceptDefault_3 = null;


         enterRule(); 
            
        try {
            {
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=Intersection && LA53_0<=Implements)||(LA53_0>=Promisify && LA53_0<=Abstract)||LA53_0==External||(LA53_0>=Private && LA53_0<=Project)||LA53_0==Public||LA53_0==Static||LA53_0==Target||(LA53_0>=Async && LA53_0<=Await)||LA53_0==Union||(LA53_0>=Yield && LA53_0<=This)||LA53_0==From||LA53_0==Type||(LA53_0>=Get && LA53_0<=Let)||(LA53_0>=Out && LA53_0<=Set)||LA53_0==As||LA53_0==Of||LA53_0==RULE_IDENTIFIER) ) {
                alt53=1;
            }
            else if ( (LA53_0==Asterisk||LA53_0==LeftCurlyBracket) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersDefaultImportSpecifierParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_importSpecifiers_0_0=ruleDefaultImportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      	        }
                             		add(
                             			current, 
                             			"importSpecifiers",
                              		lv_importSpecifiers_0_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultImportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==Comma) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,Comma,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getImportClauseAccess().getCommaKeyword_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getImportClauseRule());
                              		}
                                      newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersExceptDefaultParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_2);
                            this_ImportSpecifiersExceptDefault_2=ruleImportSpecifiersExceptDefault(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ImportSpecifiersExceptDefault_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getImportClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getImportClauseAccess().getImportSpecifiersExceptDefaultParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ImportSpecifiersExceptDefault_3=ruleImportSpecifiersExceptDefault(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ImportSpecifiersExceptDefault_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleImportSpecifiersExceptDefault(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_importSpecifiers_0_0 = null;

        EObject lv_importSpecifiers_2_0 = null;

        EObject lv_importSpecifiers_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==Asterisk) ) {
                alt57=1;
            }
            else if ( (LA57_0==LeftCurlyBracket) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamespaceImportSpecifierParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_importSpecifiers_0_0=ruleNamespaceImportSpecifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                      	        }
                             		add(
                             			current, 
                             			"importSpecifiers",
                              		lv_importSpecifiers_0_0, 
                              		"eu.numberfour.n4js.N4JS.NamespaceImportSpecifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getImportSpecifiersExceptDefaultAccess().getLeftCurlyBracketKeyword_1_0());
                          
                    }
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( ((LA56_0>=Intersection && LA56_0<=With)||(LA56_0>=For && LA56_0<=Var)||(LA56_0>=As && LA56_0<=Of)||LA56_0==RULE_IDENTIFIER) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamedImportSpecifierParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_27);
                            lv_importSpecifiers_2_0=ruleNamedImportSpecifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"importSpecifiers",
                                      		lv_importSpecifiers_2_0, 
                                      		"eu.numberfour.n4js.N4JS.NamedImportSpecifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop54:
                            do {
                                int alt54=2;
                                int LA54_0 = input.LA(1);

                                if ( (LA54_0==Comma) ) {
                                    int LA54_1 = input.LA(2);

                                    if ( ((LA54_1>=Intersection && LA54_1<=With)||(LA54_1>=For && LA54_1<=Var)||(LA54_1>=As && LA54_1<=Of)||LA54_1==RULE_IDENTIFIER) ) {
                                        alt54=1;
                                    }


                                }


                                switch (alt54) {
                            	case 1 :
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_38); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getImportSpecifiersExceptDefaultAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getImportSpecifiersExceptDefaultAccess().getImportSpecifiersNamedImportSpecifierParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_27);
                            	    lv_importSpecifiers_4_0=ruleNamedImportSpecifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getImportSpecifiersExceptDefaultRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"importSpecifiers",
                            	              		lv_importSpecifiers_4_0, 
                            	              		"eu.numberfour.n4js.N4JS.NamedImportSpecifier");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop54;
                                }
                            } while (true);
                            int alt55=2;
                            int LA55_0 = input.LA(1);

                            if ( (LA55_0==Comma) ) {
                                alt55=1;
                            }
                            switch (alt55) {
                                case 1 :
                                    {
                                    otherlv_5=(Token)match(input,Comma,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_5, grammarAccess.getImportSpecifiersExceptDefaultAccess().getCommaKeyword_1_1_2());
                                          
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getImportSpecifiersExceptDefaultAccess().getRightCurlyBracketKeyword_1_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNamedImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedImportSpecifier=ruleNamedImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNamedImportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_alias_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getImportedElementTExportableElementCrossReference_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getImportedElementTExportableElementCrossReference_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_47);
                    ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getNamedImportSpecifierAccess().getAsKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getNamedImportSpecifierAccess().getAliasBindingIdentifierParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_alias_3_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getNamedImportSpecifierRule());
                      	        }
                             		set(
                             			current, 
                             			"alias",
                              		lv_alias_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDefaultImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultImportSpecifier=ruleDefaultImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDefaultImportSpecifier() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getDefaultImportSpecifierRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDefaultImportSpecifierAccess().getImportedElementTExportableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNamespaceImportSpecifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespaceImportSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceImportSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceImportSpecifier=ruleNamespaceImportSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceImportSpecifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNamespaceImportSpecifier() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_declaredDynamic_4_0=null;
        AntlrDatatypeRuleToken lv_alias_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNamespaceImportSpecifierAccess().getNamespaceImportSpecifierAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Asterisk,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNamespaceImportSpecifierAccess().getAsteriskKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,As,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getNamespaceImportSpecifierAccess().getAsKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getNamespaceImportSpecifierAccess().getAliasBindingIdentifierParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_48);
            lv_alias_3_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getNamespaceImportSpecifierRule());
              	        }
                     		set(
                     			current, 
                     			"alias",
                      		lv_alias_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==PlusSign) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    {
                    {
                    lv_declaredDynamic_4_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredDynamic_4_0, grammarAccess.getNamespaceImportSpecifierAccess().getDeclaredDynamicPlusSignKeyword_4_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getNamespaceImportSpecifierRule());
                      	        }
                             		setWithLastConsumed(current, "declaredDynamic", true, "+");
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleModuleSpecifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleModuleSpecifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleSpecifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModuleSpecifier=ruleModuleSpecifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleSpecifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleModuleSpecifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         enterRule(); 
            
        try {
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_STRING_0, grammarAccess.getModuleSpecifierAccess().getSTRINGTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDeclaration=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=Protected && LA60_0<=Abstract)||LA60_0==External||(LA60_0>=Private && LA60_0<=Project)||LA60_0==Public||LA60_0==Static||LA60_0==Const) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_19);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionImplParserRuleCall_0_0_3()); 
                  
            }
            pushFollow(FOLLOW_49);
            this_FunctionImpl_3=ruleFunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }


            }
            int alt61=2;
            alt61 = dfa61.predict(input);
            switch (alt61) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSemiParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionDeclaration() throws RecognitionException {
        EObject current = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionDeclarationAccess().getFunctionDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( ((LA62_0>=Protected && LA62_0<=Abstract)||LA62_0==External||(LA62_0>=Private && LA62_0<=Project)||LA62_0==Public||LA62_0==Static||LA62_0==Const) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_50);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionImplParserRuleCall_0_0_3()); 
                  
            }
            pushFollow(FOLLOW_49);
            this_FunctionImpl_3=norm3_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }


            }
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==Semicolon) ) {
                int LA63_1 = input.LA(2);

                if ( (synpred22_InternalN4JSXParser()) ) {
                    alt63=1;
                }
            }
            else if ( (LA63_0==EOF||LA63_0==RULE_ML_COMMENT||LA63_0==RULE_EOL) && (synpred22_InternalN4JSXParser())) {
                alt63=1;
            }
            else if ( (LA63_0==RightCurlyBracket) ) {
                int LA63_3 = input.LA(2);

                if ( (synpred22_InternalN4JSXParser()) ) {
                    alt63=1;
                }
            }
            switch (alt63) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getSemiParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAsyncNoTrailingLineBreak(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_declaredAsync_0_0=null;
        EObject this_NoLineTerminator_1 = null;


         enterRule(); 
            
        try {
            {
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==Async) ) {
                int LA64_1 = input.LA(2);

                if ( ((LA64_1>=Intersection && LA64_1<=With)||(LA64_1>=For && LA64_1<=Var)||(LA64_1>=As && LA64_1<=Of)||LA64_1==LeftSquareBracket||LA64_1==RULE_DOUBLE||LA64_1==RULE_HEX_INT||LA64_1==RULE_OCTAL_INT||LA64_1==RULE_SCIENTIFIC_INT||LA64_1==RULE_IDENTIFIER||LA64_1==RULE_STRING||LA64_1==RULE_NO_LINE_TERMINATOR||LA64_1==RULE_INT) ) {
                    alt64=1;
                }
            }
            switch (alt64) {
                case 1 :
                    {
                    {
                    {
                    lv_declaredAsync_0_0=(Token)match(input,Async,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_0_0, grammarAccess.getAsyncNoTrailingLineBreakAccess().getDeclaredAsyncAsyncKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getAsyncNoTrailingLineBreakRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAsyncNoTrailingLineBreakRule());
                      		}
                              newCompositeNode(grammarAccess.getAsyncNoTrailingLineBreakAccess().getNoLineTerminatorParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NoLineTerminator_1=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Asterisk) ) {
                alt65=1;
            }
            else if ( ((LA65_0>=Intersection && LA65_0<=Implements)||(LA65_0>=Promisify && LA65_0<=Abstract)||LA65_0==External||(LA65_0>=Private && LA65_0<=Project)||LA65_0==Public||LA65_0==Static||LA65_0==Target||(LA65_0>=Async && LA65_0<=Await)||LA65_0==Union||(LA65_0>=Yield && LA65_0<=This)||LA65_0==From||LA65_0==Type||(LA65_0>=Get && LA65_0<=Let)||(LA65_0>=Out && LA65_0<=Set)||LA65_0==As||LA65_0==Of||LA65_0==LeftParenthesis||LA65_0==LessThanSign||LA65_0==RULE_IDENTIFIER) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_2=norm2_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm1_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_4=ruleFunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=ruleFunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Asterisk) ) {
                alt66=1;
            }
            else if ( ((LA66_0>=Intersection && LA66_0<=Implements)||(LA66_0>=Promisify && LA66_0<=Abstract)||LA66_0==External||(LA66_0>=Private && LA66_0<=Project)||LA66_0==Public||LA66_0==Static||LA66_0==Target||(LA66_0>=Async && LA66_0<=Await)||LA66_0==Union||LA66_0==This||LA66_0==From||LA66_0==Type||(LA66_0>=Get && LA66_0<=Let)||(LA66_0>=Out && LA66_0<=Set)||LA66_0==As||LA66_0==Of||LA66_0==LeftParenthesis||LA66_0==LessThanSign||LA66_0==RULE_IDENTIFIER) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_2=norm3_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm1_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_4=norm1_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=ruleFunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_FunctionImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token lv_generator_1_0=null;
        EObject this_FunctionHeader_2 = null;

        EObject this_FunctionBody_3 = null;

        EObject this_FunctionHeader_4 = null;

        EObject this_FunctionBody_5 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFunctionImplAccess().getFunctionKeyword_0());
                  
            }
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Asterisk) ) {
                alt67=1;
            }
            else if ( ((LA67_0>=Intersection && LA67_0<=Implements)||(LA67_0>=Promisify && LA67_0<=Abstract)||LA67_0==External||(LA67_0>=Private && LA67_0<=Project)||LA67_0==Public||LA67_0==Static||LA67_0==Target||(LA67_0>=Async && LA67_0<=Await)||LA67_0==Union||(LA67_0>=Yield && LA67_0<=This)||LA67_0==From||LA67_0==Type||(LA67_0>=Get && LA67_0<=Let)||(LA67_0>=Out && LA67_0<=Set)||LA67_0==As||LA67_0==Of||LA67_0==LeftParenthesis||LA67_0==LessThanSign||LA67_0==RULE_IDENTIFIER) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_1_0=(Token)match(input,Asterisk,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_1_0, grammarAccess.getFunctionImplAccess().getGeneratorAsteriskKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getFunctionImplRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_2=norm3_FunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_3=norm3_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionHeaderParserRuleCall_1_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_FunctionHeader_4=ruleFunctionHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionHeader_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionImplAccess().getFunctionBodyParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionBody_5=norm2_FunctionBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LessThanSign) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_52);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=Intersection && LA69_0<=Implements)||(LA69_0>=Promisify && LA69_0<=Abstract)||LA69_0==External||(LA69_0>=Private && LA69_0<=Project)||LA69_0==Public||LA69_0==Static||LA69_0==Target||(LA69_0>=Async && LA69_0<=Await)||LA69_0==Union||(LA69_0>=Yield && LA69_0<=This)||LA69_0==From||LA69_0==Type||(LA69_0>=Get && LA69_0<=Let)||(LA69_0>=Out && LA69_0<=Set)||LA69_0==As||LA69_0==Of||LA69_0==RULE_IDENTIFIER) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==Colon) && (synpred23_InternalN4JSXParser())) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==LessThanSign) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_52);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=Intersection && LA72_0<=Implements)||(LA72_0>=Promisify && LA72_0<=Abstract)||LA72_0==External||(LA72_0>=Private && LA72_0<=Project)||LA72_0==Public||LA72_0==Static||LA72_0==Target||(LA72_0>=Async && LA72_0<=Await)||LA72_0==Union||LA72_0==This||LA72_0==From||LA72_0==Type||(LA72_0>=Get && LA72_0<=Let)||(LA72_0>=Out && LA72_0<=Set)||LA72_0==As||LA72_0==Of||LA72_0==RULE_IDENTIFIER) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Colon) && (synpred24_InternalN4JSXParser())) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==LessThanSign) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( ((LA75_0>=Intersection && LA75_0<=Implements)||(LA75_0>=Promisify && LA75_0<=Abstract)||LA75_0==External||(LA75_0>=Private && LA75_0<=Project)||LA75_0==Public||LA75_0==Static||LA75_0==Target||(LA75_0>=Async && LA75_0<=Await)||LA75_0==Union||(LA75_0>=Yield && LA75_0<=This)||LA75_0==From||LA75_0==Type||(LA75_0>=Get && LA75_0<=Let)||(LA75_0>=Out && LA75_0<=Set)||LA75_0==As||LA75_0==Of||LA75_0==RULE_IDENTIFIER) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==Colon) && (synpred25_InternalN4JSXParser())) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject this_TypeVariables_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_StrictFormalParameters_2 = null;

        EObject lv_returnTypeRef_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==LessThanSign) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFunctionHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getFunctionHeaderAccess().getTypeVariablesParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_53);
                    this_TypeVariables_0=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=Intersection && LA78_0<=Implements)||(LA78_0>=Promisify && LA78_0<=Abstract)||LA78_0==External||(LA78_0>=Private && LA78_0<=Project)||LA78_0==Public||LA78_0==Static||LA78_0==Target||(LA78_0>=Async && LA78_0<=Await)||LA78_0==Union||LA78_0==This||LA78_0==From||LA78_0==Type||(LA78_0>=Get && LA78_0<=Let)||(LA78_0>=Out && LA78_0<=Set)||LA78_0==As||LA78_0==Of||LA78_0==RULE_IDENTIFIER) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getNameBindingIdentifierParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionHeaderRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionHeaderAccess().getStrictFormalParametersParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_54);
            this_StrictFormalParameters_2=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_2;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==Colon) && (synpred26_InternalN4JSXParser())) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    {
                    {
                    otherlv_3=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionHeaderAccess().getColonKeyword_3_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionHeaderAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_0_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_0_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_0_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_0_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_FunctionBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_body_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBodyBlockParserRuleCall_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_0_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedFunctionDeclaration=ruleExportedFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionDeclaration_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExportedFunctionDeclarationAccess().getFunctionDeclarationParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionDeclaration_0=ruleFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionDeclaration_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedFunctionDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedFunctionDeclaration=ruleAnnotatedFunctionDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedFunctionDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_annotationList_0_0 = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAnnotationListAnnotationListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_19);
            lv_annotationList_0_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"annotationList",
                      		lv_annotationList_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( ((LA82_0>=Protected && LA82_0<=Abstract)||LA82_0==External||(LA82_0>=Private && LA82_0<=Project)||LA82_0==Public||LA82_0==Static||LA82_0==Const) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_19);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getFunctionImplParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_3=ruleFunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedFunctionDeclaration() throws RecognitionException {
        EObject current = null;

        EObject lv_annotationList_0_0 = null;

        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_AsyncNoTrailingLineBreak_2 = null;

        EObject this_FunctionImpl_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAnnotationListAnnotationListParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_19);
            lv_annotationList_0_0=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"annotationList",
                      		lv_annotationList_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( ((LA83_0>=Protected && LA83_0<=Abstract)||LA83_0==External||(LA83_0>=Private && LA83_0<=Project)||LA83_0==Public||LA83_0==Static||LA83_0==Const) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotatedFunctionDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_50);
            this_AsyncNoTrailingLineBreak_2=ruleAsyncNoTrailingLineBreak(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AsyncNoTrailingLineBreak_2;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAnnotatedFunctionDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getAnnotatedFunctionDeclarationAccess().getFunctionImplParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_3=norm3_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_3;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionExpression=ruleFunctionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionExpressionAccess().getFunctionImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionImpl_1=norm6_FunctionImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAsyncFunctionExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsyncFunctionExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAsyncFunctionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAsyncFunctionExpression=ruleAsyncFunctionExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAsyncFunctionExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAsyncFunctionExpression() throws RecognitionException {
        EObject current = null;

        Token lv_declaredAsync_0_0=null;
        Token otherlv_2=null;
        EObject this_NoLineTerminator_1 = null;

        EObject this_FunctionHeader_3 = null;

        EObject this_FunctionBody_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            lv_declaredAsync_0_0=(Token)match(input,Async,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_declaredAsync_0_0, grammarAccess.getAsyncFunctionExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              	        }
                     		setWithLastConsumed(current, "declaredAsync", true, "async");
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_57);
            this_NoLineTerminator_1=ruleNoLineTerminator(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_NoLineTerminator_1;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,Function,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAsyncFunctionExpressionAccess().getFunctionKeyword_0_0_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getFunctionHeaderParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_25);
            this_FunctionHeader_3=ruleFunctionHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionHeader_3;
                      afterParserOrEnumRuleCall();
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getAsyncFunctionExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getAsyncFunctionExpressionAccess().getFunctionBodyParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FunctionBody_4=norm2_FunctionBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FunctionBody_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrowExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrowExpression=ruleArrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt93=4;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==LeftParenthesis) && (synpred39_InternalN4JSXParser())) {
                alt93=1;
            }
            else if ( (LA93_0==Async) ) {
                int LA93_2 = input.LA(2);

                if ( (LA93_2==EqualsSignGreaterThanSign) ) {
                    alt93=4;
                }
                else if ( (LA93_2==RULE_NO_LINE_TERMINATOR) && (synpred40_InternalN4JSXParser())) {
                    alt93=2;
                }
                else if ( (LA93_2==LeftParenthesis) && (synpred40_InternalN4JSXParser())) {
                    alt93=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 93, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA93_0==Asterisk) && (synpred41_InternalN4JSXParser())) {
                alt93=3;
            }
            else if ( ((LA93_0>=Intersection && LA93_0<=Implements)||(LA93_0>=Promisify && LA93_0<=Abstract)||LA93_0==External||(LA93_0>=Private && LA93_0<=Project)||LA93_0==Public||LA93_0==Static||LA93_0==Target||LA93_0==Await||LA93_0==Union||(LA93_0>=Yield && LA93_0<=This)||LA93_0==From||LA93_0==Type||(LA93_0>=Get && LA93_0<=Let)||(LA93_0>=Out && LA93_0<=Set)||LA93_0==As||LA93_0==Of||LA93_0==RULE_IDENTIFIER) ) {
                alt93=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }
            switch (alt93) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( ((LA85_0>=Intersection && LA85_0<=Implements)||(LA85_0>=Promisify && LA85_0<=Abstract)||LA85_0==External||(LA85_0>=Private && LA85_0<=Project)||LA85_0==Public||LA85_0==Static||LA85_0==Target||(LA85_0>=Async && LA85_0<=Await)||LA85_0==Union||(LA85_0>=Yield && LA85_0<=This)||LA85_0==From||LA85_0==This_1||(LA85_0>=Type && LA85_0<=Void)||LA85_0==FullStopFullStopFullStop||(LA85_0>=Get && LA85_0<=Let)||(LA85_0>=Out && LA85_0<=Set)||LA85_0==As||LA85_0==Of||(LA85_0>=QuestionMark && LA85_0<=LeftSquareBracket)||LA85_0==LeftCurlyBracket||LA85_0==Tilde||LA85_0==RULE_IDENTIFIER) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop84:
                            do {
                                int alt84=2;
                                int LA84_0 = input.LA(1);

                                if ( (LA84_0==Comma) ) {
                                    alt84=1;
                                }


                                switch (alt84) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop84;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==Colon) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( ((LA88_0>=Intersection && LA88_0<=Implements)||(LA88_0>=Promisify && LA88_0<=Abstract)||LA88_0==External||(LA88_0>=Private && LA88_0<=Project)||LA88_0==Public||LA88_0==Static||LA88_0==Target||(LA88_0>=Async && LA88_0<=Await)||LA88_0==Union||(LA88_0>=Yield && LA88_0<=This)||LA88_0==From||LA88_0==This_1||(LA88_0>=Type && LA88_0<=Void)||LA88_0==FullStopFullStopFullStop||(LA88_0>=Get && LA88_0<=Let)||(LA88_0>=Out && LA88_0<=Set)||LA88_0==As||LA88_0==Of||(LA88_0>=QuestionMark && LA88_0<=LeftSquareBracket)||LA88_0==LeftCurlyBracket||LA88_0==Tilde||LA88_0==RULE_IDENTIFIER) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop87:
                            do {
                                int alt87=2;
                                int LA87_0 = input.LA(1);

                                if ( (LA87_0==Comma) ) {
                                    alt87=1;
                                }


                                switch (alt87) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop87;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==Colon) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( ((LA91_0>=Intersection && LA91_0<=Implements)||(LA91_0>=Promisify && LA91_0<=Abstract)||LA91_0==External||(LA91_0>=Private && LA91_0<=Project)||LA91_0==Public||LA91_0==Static||LA91_0==Target||(LA91_0>=Async && LA91_0<=Await)||LA91_0==Union||(LA91_0>=Yield && LA91_0<=This)||LA91_0==From||LA91_0==This_1||(LA91_0>=Type && LA91_0<=Void)||LA91_0==FullStopFullStopFullStop||(LA91_0>=Get && LA91_0<=Let)||(LA91_0>=Out && LA91_0<=Set)||LA91_0==As||LA91_0==Of||(LA91_0>=QuestionMark && LA91_0<=LeftSquareBracket)||LA91_0==LeftCurlyBracket||LA91_0==Tilde||LA91_0==RULE_IDENTIFIER) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_19_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop90:
                            do {
                                int alt90=2;
                                int LA90_0 = input.LA(1);

                                if ( (LA90_0==Comma) ) {
                                    alt90=1;
                                }


                                switch (alt90) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_21_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop90;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==Colon) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_25_0=ruleBindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt94=2;
            alt94 = dfa94.predict(input);
            switch (alt94) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_12);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm2_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt104=4;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==LeftParenthesis) && (synpred47_InternalN4JSXParser())) {
                alt104=1;
            }
            else if ( (LA104_0==Async) ) {
                int LA104_2 = input.LA(2);

                if ( (LA104_2==EqualsSignGreaterThanSign) ) {
                    alt104=4;
                }
                else if ( (LA104_2==RULE_NO_LINE_TERMINATOR) && (synpred48_InternalN4JSXParser())) {
                    alt104=2;
                }
                else if ( (LA104_2==LeftParenthesis) && (synpred48_InternalN4JSXParser())) {
                    alt104=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 104, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA104_0==Asterisk) && (synpred49_InternalN4JSXParser())) {
                alt104=3;
            }
            else if ( ((LA104_0>=Intersection && LA104_0<=Implements)||(LA104_0>=Promisify && LA104_0<=Abstract)||LA104_0==External||(LA104_0>=Private && LA104_0<=Project)||LA104_0==Public||LA104_0==Static||LA104_0==Target||LA104_0==Await||LA104_0==Union||(LA104_0>=Yield && LA104_0<=This)||LA104_0==From||LA104_0==Type||(LA104_0>=Get && LA104_0<=Let)||(LA104_0>=Out && LA104_0<=Set)||LA104_0==As||LA104_0==Of||LA104_0==RULE_IDENTIFIER) ) {
                alt104=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( ((LA96_0>=Intersection && LA96_0<=Implements)||(LA96_0>=Promisify && LA96_0<=Abstract)||LA96_0==External||(LA96_0>=Private && LA96_0<=Project)||LA96_0==Public||LA96_0==Static||LA96_0==Target||(LA96_0>=Async && LA96_0<=Await)||LA96_0==Union||(LA96_0>=Yield && LA96_0<=This)||LA96_0==From||LA96_0==This_1||(LA96_0>=Type && LA96_0<=Void)||LA96_0==FullStopFullStopFullStop||(LA96_0>=Get && LA96_0<=Let)||(LA96_0>=Out && LA96_0<=Set)||LA96_0==As||LA96_0==Of||(LA96_0>=QuestionMark && LA96_0<=LeftSquareBracket)||LA96_0==LeftCurlyBracket||LA96_0==Tilde||LA96_0==RULE_IDENTIFIER) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop95:
                            do {
                                int alt95=2;
                                int LA95_0 = input.LA(1);

                                if ( (LA95_0==Comma) ) {
                                    alt95=1;
                                }


                                switch (alt95) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop95;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==Colon) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( ((LA99_0>=Intersection && LA99_0<=Implements)||(LA99_0>=Promisify && LA99_0<=Abstract)||LA99_0==External||(LA99_0>=Private && LA99_0<=Project)||LA99_0==Public||LA99_0==Static||LA99_0==Target||(LA99_0>=Async && LA99_0<=Await)||LA99_0==Union||(LA99_0>=Yield && LA99_0<=This)||LA99_0==From||LA99_0==This_1||(LA99_0>=Type && LA99_0<=Void)||LA99_0==FullStopFullStopFullStop||(LA99_0>=Get && LA99_0<=Let)||(LA99_0>=Out && LA99_0<=Set)||LA99_0==As||LA99_0==Of||(LA99_0>=QuestionMark && LA99_0<=LeftSquareBracket)||LA99_0==LeftCurlyBracket||LA99_0==Tilde||LA99_0==RULE_IDENTIFIER) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop98:
                            do {
                                int alt98=2;
                                int LA98_0 = input.LA(1);

                                if ( (LA98_0==Comma) ) {
                                    alt98=1;
                                }


                                switch (alt98) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop98;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==Colon) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( ((LA102_0>=Intersection && LA102_0<=Implements)||(LA102_0>=Promisify && LA102_0<=Abstract)||LA102_0==External||(LA102_0>=Private && LA102_0<=Project)||LA102_0==Public||LA102_0==Static||LA102_0==Target||(LA102_0>=Async && LA102_0<=Await)||LA102_0==Union||(LA102_0>=Yield && LA102_0<=This)||LA102_0==From||LA102_0==This_1||(LA102_0>=Type && LA102_0<=Void)||LA102_0==FullStopFullStopFullStop||(LA102_0>=Get && LA102_0<=Let)||(LA102_0>=Out && LA102_0<=Set)||LA102_0==As||LA102_0==Of||(LA102_0>=QuestionMark && LA102_0<=LeftSquareBracket)||LA102_0==LeftCurlyBracket||LA102_0==Tilde||LA102_0==RULE_IDENTIFIER) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_19_0=ruleFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==Comma) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_21_0=ruleFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==Colon) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_25_0=ruleBindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt105=2;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_12);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm3_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt115=4;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==LeftParenthesis) && (synpred55_InternalN4JSXParser())) {
                alt115=1;
            }
            else if ( (LA115_0==Async) ) {
                int LA115_2 = input.LA(2);

                if ( (LA115_2==EqualsSignGreaterThanSign) ) {
                    alt115=4;
                }
                else if ( (LA115_2==RULE_NO_LINE_TERMINATOR) && (synpred56_InternalN4JSXParser())) {
                    alt115=2;
                }
                else if ( (LA115_2==LeftParenthesis) && (synpred56_InternalN4JSXParser())) {
                    alt115=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 115, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA115_0==Asterisk) && (synpred57_InternalN4JSXParser())) {
                alt115=3;
            }
            else if ( ((LA115_0>=Intersection && LA115_0<=Implements)||(LA115_0>=Promisify && LA115_0<=Abstract)||LA115_0==External||(LA115_0>=Private && LA115_0<=Project)||LA115_0==Public||LA115_0==Static||LA115_0==Target||LA115_0==Await||LA115_0==Union||LA115_0==This||LA115_0==From||LA115_0==Type||(LA115_0>=Get && LA115_0<=Let)||(LA115_0>=Out && LA115_0<=Set)||LA115_0==As||LA115_0==Of||LA115_0==RULE_IDENTIFIER) ) {
                alt115=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( ((LA107_0>=Intersection && LA107_0<=Implements)||(LA107_0>=Promisify && LA107_0<=Abstract)||LA107_0==External||(LA107_0>=Private && LA107_0<=Project)||LA107_0==Public||LA107_0==Static||LA107_0==Target||(LA107_0>=Async && LA107_0<=Await)||LA107_0==Union||LA107_0==This||LA107_0==From||LA107_0==This_1||(LA107_0>=Type && LA107_0<=Void)||LA107_0==FullStopFullStopFullStop||(LA107_0>=Get && LA107_0<=Let)||(LA107_0>=Out && LA107_0<=Set)||LA107_0==As||LA107_0==Of||(LA107_0>=QuestionMark && LA107_0<=LeftSquareBracket)||LA107_0==LeftCurlyBracket||LA107_0==Tilde||LA107_0==RULE_IDENTIFIER) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop106:
                            do {
                                int alt106=2;
                                int LA106_0 = input.LA(1);

                                if ( (LA106_0==Comma) ) {
                                    alt106=1;
                                }


                                switch (alt106) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop106;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==Colon) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( ((LA110_0>=Intersection && LA110_0<=Implements)||(LA110_0>=Promisify && LA110_0<=Abstract)||LA110_0==External||(LA110_0>=Private && LA110_0<=Project)||LA110_0==Public||LA110_0==Static||LA110_0==Target||(LA110_0>=Async && LA110_0<=Await)||LA110_0==Union||LA110_0==This||LA110_0==From||LA110_0==This_1||(LA110_0>=Type && LA110_0<=Void)||LA110_0==FullStopFullStopFullStop||(LA110_0>=Get && LA110_0<=Let)||(LA110_0>=Out && LA110_0<=Set)||LA110_0==As||LA110_0==Of||(LA110_0>=QuestionMark && LA110_0<=LeftSquareBracket)||LA110_0==LeftCurlyBracket||LA110_0==Tilde||LA110_0==RULE_IDENTIFIER) ) {
                        alt110=1;
                    }
                    switch (alt110) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop109:
                            do {
                                int alt109=2;
                                int LA109_0 = input.LA(1);

                                if ( (LA109_0==Comma) ) {
                                    alt109=1;
                                }


                                switch (alt109) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop109;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Colon) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( ((LA113_0>=Intersection && LA113_0<=Implements)||(LA113_0>=Promisify && LA113_0<=Abstract)||LA113_0==External||(LA113_0>=Private && LA113_0<=Project)||LA113_0==Public||LA113_0==Static||LA113_0==Target||(LA113_0>=Async && LA113_0<=Await)||LA113_0==Union||LA113_0==This||LA113_0==From||LA113_0==This_1||(LA113_0>=Type && LA113_0<=Void)||LA113_0==FullStopFullStopFullStop||(LA113_0>=Get && LA113_0<=Let)||(LA113_0>=Out && LA113_0<=Set)||LA113_0==As||LA113_0==Of||(LA113_0>=QuestionMark && LA113_0<=LeftSquareBracket)||LA113_0==LeftCurlyBracket||LA113_0==Tilde||LA113_0==RULE_IDENTIFIER) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_19_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop112:
                            do {
                                int alt112=2;
                                int LA112_0 = input.LA(1);

                                if ( (LA112_0==Comma) ) {
                                    alt112=1;
                                }


                                switch (alt112) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_21_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop112;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==Colon) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_25_0=norm1_BindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt116=2;
            alt116 = dfa116.predict(input);
            switch (alt116) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_12);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm2_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ArrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_declaredAsync_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_generator_16_0=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token lv_hasBracesAroundBody_27_0=null;
        Token otherlv_29=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;

        EObject lv_returnTypeRef_6_0 = null;

        EObject this_NoLineTerminator_8 = null;

        EObject lv_fpars_10_0 = null;

        EObject lv_fpars_12_0 = null;

        EObject lv_returnTypeRef_15_0 = null;

        EObject this_NoLineTerminator_17 = null;

        EObject lv_fpars_19_0 = null;

        EObject lv_fpars_21_0 = null;

        EObject lv_returnTypeRef_24_0 = null;

        EObject lv_fpars_25_0 = null;

        EObject lv_body_28_0 = null;

        EObject lv_body_30_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            int alt126=4;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==LeftParenthesis) && (synpred63_InternalN4JSXParser())) {
                alt126=1;
            }
            else if ( (LA126_0==Async) ) {
                int LA126_2 = input.LA(2);

                if ( (LA126_2==RULE_NO_LINE_TERMINATOR) && (synpred64_InternalN4JSXParser())) {
                    alt126=2;
                }
                else if ( (LA126_2==LeftParenthesis) && (synpred64_InternalN4JSXParser())) {
                    alt126=2;
                }
                else if ( (LA126_2==EqualsSignGreaterThanSign) ) {
                    alt126=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 126, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA126_0==Asterisk) && (synpred65_InternalN4JSXParser())) {
                alt126=3;
            }
            else if ( ((LA126_0>=Intersection && LA126_0<=Implements)||(LA126_0>=Promisify && LA126_0<=Abstract)||LA126_0==External||(LA126_0>=Private && LA126_0<=Project)||LA126_0==Public||LA126_0==Static||LA126_0==Target||LA126_0==Await||LA126_0==Union||LA126_0==This||LA126_0==From||LA126_0==Type||(LA126_0>=Get && LA126_0<=Let)||(LA126_0>=Out && LA126_0<=Set)||LA126_0==As||LA126_0==Of||LA126_0==RULE_IDENTIFIER) ) {
                alt126=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    {
                    {
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_0_0());
                          
                    }

                    }
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( ((LA118_0>=Intersection && LA118_0<=Implements)||(LA118_0>=Promisify && LA118_0<=Abstract)||LA118_0==External||(LA118_0>=Private && LA118_0<=Project)||LA118_0==Public||LA118_0==Static||LA118_0==Target||(LA118_0>=Async && LA118_0<=Await)||LA118_0==Union||LA118_0==This||LA118_0==From||LA118_0==This_1||(LA118_0>=Type && LA118_0<=Void)||LA118_0==FullStopFullStopFullStop||(LA118_0>=Get && LA118_0<=Let)||(LA118_0>=Out && LA118_0<=Set)||LA118_0==As||LA118_0==Of||(LA118_0>=QuestionMark && LA118_0<=LeftSquareBracket)||LA118_0==LeftCurlyBracket||LA118_0==Tilde||LA118_0==RULE_IDENTIFIER) ) {
                        alt118=1;
                    }
                    switch (alt118) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_1_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_1_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop117:
                            do {
                                int alt117=2;
                                int LA117_0 = input.LA(1);

                                if ( (LA117_0==Comma) ) {
                                    alt117=1;
                                }


                                switch (alt117) {
                            	case 1 :
                            	    {
                            	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_2, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_0_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_0_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_3_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_3_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop117;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_0_2());
                          
                    }
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==Colon) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_0_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_0_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_6_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_6_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_declaredAsync_7_0=(Token)match(input,Async,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredAsync_7_0, grammarAccess.getArrowExpressionAccess().getDeclaredAsyncAsyncKeyword_0_0_0_1_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "declaredAsync", true, "async");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_8=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_8;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_1_0_0_2());
                          
                    }

                    }


                    }
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( ((LA121_0>=Intersection && LA121_0<=Implements)||(LA121_0>=Promisify && LA121_0<=Abstract)||LA121_0==External||(LA121_0>=Private && LA121_0<=Project)||LA121_0==Public||LA121_0==Static||LA121_0==Target||(LA121_0>=Async && LA121_0<=Await)||LA121_0==Union||LA121_0==This||LA121_0==From||LA121_0==This_1||(LA121_0>=Type && LA121_0<=Void)||LA121_0==FullStopFullStopFullStop||(LA121_0>=Get && LA121_0<=Let)||(LA121_0>=Out && LA121_0<=Set)||LA121_0==As||LA121_0==Of||(LA121_0>=QuestionMark && LA121_0<=LeftSquareBracket)||LA121_0==LeftCurlyBracket||LA121_0==Tilde||LA121_0==RULE_IDENTIFIER) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_10_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_10_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop120:
                            do {
                                int alt120=2;
                                int LA120_0 = input.LA(1);

                                if ( (LA120_0==Comma) ) {
                                    alt120=1;
                                }


                                switch (alt120) {
                            	case 1 :
                            	    {
                            	    otherlv_11=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_11, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_12_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_12_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop120;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_1_2());
                          
                    }
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==Colon) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_1_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_1_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_15_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_15_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    {
                    lv_generator_16_0=(Token)match(input,Asterisk,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_16_0, grammarAccess.getArrowExpressionAccess().getGeneratorAsteriskKeyword_0_0_0_2_0_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArrowExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getArrowExpressionAccess().getNoLineTerminatorParserRuleCall_0_0_0_2_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_64);
                    this_NoLineTerminator_17=ruleNoLineTerminator(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NoLineTerminator_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getArrowExpressionAccess().getLeftParenthesisKeyword_0_0_0_2_0_0_2());
                          
                    }

                    }


                    }
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( ((LA124_0>=Intersection && LA124_0<=Implements)||(LA124_0>=Promisify && LA124_0<=Abstract)||LA124_0==External||(LA124_0>=Private && LA124_0<=Project)||LA124_0==Public||LA124_0==Static||LA124_0==Target||(LA124_0>=Async && LA124_0<=Await)||LA124_0==Union||LA124_0==This||LA124_0==From||LA124_0==This_1||(LA124_0>=Type && LA124_0<=Void)||LA124_0==FullStopFullStopFullStop||(LA124_0>=Get && LA124_0<=Let)||(LA124_0>=Out && LA124_0<=Set)||LA124_0==As||LA124_0==Of||(LA124_0>=QuestionMark && LA124_0<=LeftSquareBracket)||LA124_0==LeftCurlyBracket||LA124_0==Tilde||LA124_0==RULE_IDENTIFIER) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_fpars_19_0=norm1_FormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"fpars",
                                      		lv_fpars_19_0, 
                                      		"eu.numberfour.n4js.N4JS.FormalParameter");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop123:
                            do {
                                int alt123=2;
                                int LA123_0 = input.LA(1);

                                if ( (LA123_0==Comma) ) {
                                    alt123=1;
                                }


                                switch (alt123) {
                            	case 1 :
                            	    {
                            	    otherlv_20=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_20, grammarAccess.getArrowExpressionAccess().getCommaKeyword_0_0_0_2_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsFormalParameterParserRuleCall_0_0_0_2_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_fpars_21_0=norm1_FormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"fpars",
                            	              		lv_fpars_21_0, 
                            	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop123;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_22=(Token)match(input,RightParenthesis,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getArrowExpressionAccess().getRightParenthesisKeyword_0_0_0_2_2());
                          
                    }
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==Colon) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            {
                            otherlv_23=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_23, grammarAccess.getArrowExpressionAccess().getColonKeyword_0_0_0_2_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_0_0_0_2_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_62);
                            lv_returnTypeRef_24_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_24_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getFparsBindingIdentifierAsFormalParameterParserRuleCall_0_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_62);
                    lv_fpars_25_0=norm1_BindingIdentifierAsFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_25_0, 
                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_26=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_26, grammarAccess.getArrowExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_1());
                  
            }

            }


            }
            int alt127=2;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_hasBracesAroundBody_27_0=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_hasBracesAroundBody_27_0, grammarAccess.getArrowExpressionAccess().getHasBracesAroundBodyLeftCurlyBracketKeyword_1_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrowExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "hasBracesAroundBody", true, "{");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyBlockMinusBracesParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_12);
                    lv_body_28_0=norm1_BlockMinusBraces();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_28_0, 
                              		"eu.numberfour.n4js.N4JS.BlockMinusBraces");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_29=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_29, grammarAccess.getArrowExpressionAccess().getRightCurlyBracketKeyword_1_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrowExpressionAccess().getBodyExpressionDisguisedAsBlockParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_30_0=norm3_ExpressionDisguisedAsBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrowExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_30_0, 
                              		"eu.numberfour.n4js.N4JS.ExpressionDisguisedAsBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStrictFormalParameters(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStrictFormalParametersAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=Intersection && LA129_0<=Implements)||(LA129_0>=Promisify && LA129_0<=Abstract)||LA129_0==External||(LA129_0>=Private && LA129_0<=Project)||LA129_0==Public||LA129_0==Static||LA129_0==Target||(LA129_0>=Async && LA129_0<=Await)||LA129_0==Union||(LA129_0>=Yield && LA129_0<=This)||LA129_0==From||LA129_0==This_1||(LA129_0>=Type && LA129_0<=Void)||LA129_0==FullStopFullStopFullStop||(LA129_0>=Get && LA129_0<=Let)||(LA129_0>=Out && LA129_0<=Set)||LA129_0==As||LA129_0==Of||(LA129_0>=QuestionMark && LA129_0<=LeftSquareBracket)||LA129_0==LeftCurlyBracket||LA129_0==Tilde||LA129_0==RULE_IDENTIFIER) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_fpars_1_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_1_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop128:
                    do {
                        int alt128=2;
                        int LA128_0 = input.LA(1);

                        if ( (LA128_0==Comma) ) {
                            alt128=1;
                        }


                        switch (alt128) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getStrictFormalParametersAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_fpars_3_0=ruleFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop128;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStrictFormalParametersAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_StrictFormalParameters(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_fpars_1_0 = null;

        EObject lv_fpars_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStrictFormalParametersAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( ((LA131_0>=Intersection && LA131_0<=Implements)||(LA131_0>=Promisify && LA131_0<=Abstract)||LA131_0==External||(LA131_0>=Private && LA131_0<=Project)||LA131_0==Public||LA131_0==Static||LA131_0==Target||(LA131_0>=Async && LA131_0<=Await)||LA131_0==Union||LA131_0==This||LA131_0==From||LA131_0==This_1||(LA131_0>=Type && LA131_0<=Void)||LA131_0==FullStopFullStopFullStop||(LA131_0>=Get && LA131_0<=Let)||(LA131_0>=Out && LA131_0<=Set)||LA131_0==As||LA131_0==Of||(LA131_0>=QuestionMark && LA131_0<=LeftSquareBracket)||LA131_0==LeftCurlyBracket||LA131_0==Tilde||LA131_0==RULE_IDENTIFIER) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_59);
                    lv_fpars_1_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_1_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==Comma) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Comma,FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getStrictFormalParametersAccess().getCommaKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStrictFormalParametersAccess().getFparsFormalParameterParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_fpars_3_0=norm1_FormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStrictFormalParametersRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_3_0, 
                    	              		"eu.numberfour.n4js.N4JS.FormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStrictFormalParametersAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingIdentifierAsFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifierAsFormalParameter=ruleBindingIdentifierAsFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifierAsFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingIdentifierAsFormalParameter() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsFormalParameterAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BlockMinusBraces() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockMinusBracesAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( ((LA132_0>=Intersection && LA132_0<=Implements)||(LA132_0>=Promisify && LA132_0<=Function)||(LA132_0>=Private && LA132_0<=Delete)||(LA132_0>=Public && LA132_0<=Break)||(LA132_0>=Class && LA132_0<=This)||(LA132_0>=From && LA132_0<=With)||(LA132_0>=For && LA132_0<=Var)||LA132_0==PlusSignPlusSign||LA132_0==HyphenMinusHyphenMinus||LA132_0==SolidusEqualsSign||(LA132_0>=As && LA132_0<=If)||LA132_0==Of||LA132_0==ExclamationMark||LA132_0==LeftParenthesis||(LA132_0>=Asterisk && LA132_0<=PlusSign)||LA132_0==HyphenMinus||LA132_0==Solidus||(LA132_0>=Semicolon && LA132_0<=LessThanSign)||(LA132_0>=CommercialAt && LA132_0<=LeftSquareBracket)||LA132_0==LeftCurlyBracket||LA132_0==Tilde||LA132_0==RULE_DOUBLE||(LA132_0>=RULE_HEX_INT && LA132_0<=RULE_LEGACY_OCTAL_INT)||LA132_0==RULE_SCIENTIFIC_INT||LA132_0==RULE_IDENTIFIER||LA132_0==RULE_STRING||(LA132_0>=RULE_TEMPLATE_HEAD && LA132_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA132_0==RULE_INT) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockMinusBracesAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_1_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockMinusBracesRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionDisguisedAsBlockAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockAccess().getStatementsAssignmentExpressionStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statements_1_0=norm2_AssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionDisguisedAsBlockRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpressionStatement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ExpressionDisguisedAsBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionDisguisedAsBlockAccess().getBlockAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionDisguisedAsBlockAccess().getStatementsAssignmentExpressionStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statements_1_0=norm3_AssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionDisguisedAsBlockRule());
              	        }
                     		add(
                     			current, 
                     			"statements",
                      		lv_statements_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpressionStatement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpressionStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpressionStatement=ruleAssignmentExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AssignmentExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAssignmentExpressionStatementAccess().getExpressionAssignmentExpressionParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_0_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_ExpressionAnnotationList_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject this_ClassExtendsClause_4 = null;

        EObject this_Members_5 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_ExpressionAnnotationList_0=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpressionAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Class) ) {
                alt135=1;
            }
            else if ( (LA135_0==Function||LA135_0==Async) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getN4ClassExpressionAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Class,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAnnotatedExpressionAccess().getClassKeyword_1_0_1());
                          
                    }
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( ((LA133_0>=Intersection && LA133_0<=Constructor)||(LA133_0>=Promisify && LA133_0<=Abstract)||LA133_0==External||(LA133_0>=Private && LA133_0<=Project)||LA133_0==Public||LA133_0==Static||LA133_0==Target||(LA133_0>=Async && LA133_0<=Await)||LA133_0==Union||(LA133_0>=Yield && LA133_0<=This)||LA133_0==From||LA133_0==Type||(LA133_0>=Get && LA133_0<=Let)||(LA133_0>=Out && LA133_0<=Set)||LA133_0==As||LA133_0==Of||LA133_0==RULE_IDENTIFIER) ) {
                        alt133=1;
                    }
                    else if ( (LA133_0==Implements) ) {
                        int LA133_2 = input.LA(2);

                        if ( (LA133_2==Implements||LA133_2==Extends||LA133_2==LeftCurlyBracket) ) {
                            alt133=1;
                        }
                    }
                    switch (alt133) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getNameBindingIdentifierParserRuleCall_1_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_22);
                            lv_name_3_0=ruleBindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_3_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( (LA134_0==Implements||LA134_0==Extends) ) {
                        alt134=1;
                    }
                    switch (alt134) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getClassExtendsClauseParserRuleCall_1_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_22);
                            this_ClassExtendsClause_4=ruleClassExtendsClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ClassExtendsClause_4;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getMembersParserRuleCall_1_0_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_5=ruleMembers(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getFunctionExpressionAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_57);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getFunctionImplParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=norm6_FunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_ExpressionAnnotationList_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject this_ClassExtendsClause_4 = null;

        EObject this_Members_5 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject this_FunctionImpl_8 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_66);
            this_ExpressionAnnotationList_0=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ExpressionAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==Class) ) {
                alt138=1;
            }
            else if ( (LA138_0==Function||LA138_0==Async) ) {
                alt138=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getN4ClassExpressionAnnotationListAction_1_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Class,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getAnnotatedExpressionAccess().getClassKeyword_1_0_1());
                          
                    }
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( ((LA136_0>=Intersection && LA136_0<=Constructor)||(LA136_0>=Promisify && LA136_0<=Abstract)||LA136_0==External||(LA136_0>=Private && LA136_0<=Project)||LA136_0==Public||LA136_0==Static||LA136_0==Target||(LA136_0>=Async && LA136_0<=Await)||LA136_0==Union||LA136_0==This||LA136_0==From||LA136_0==Type||(LA136_0>=Get && LA136_0<=Let)||(LA136_0>=Out && LA136_0<=Set)||LA136_0==As||LA136_0==Of||LA136_0==RULE_IDENTIFIER) ) {
                        alt136=1;
                    }
                    else if ( (LA136_0==Implements) ) {
                        int LA136_2 = input.LA(2);

                        if ( (LA136_2==Implements||LA136_2==Extends||LA136_2==LeftCurlyBracket) ) {
                            alt136=1;
                        }
                    }
                    switch (alt136) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getNameBindingIdentifierParserRuleCall_1_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_68);
                            lv_name_3_0=norm1_BindingIdentifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"name",
                                      		lv_name_3_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==Implements||LA137_0==Extends) ) {
                        alt137=1;
                    }
                    switch (alt137) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getClassExtendsClauseParserRuleCall_1_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_68);
                            this_ClassExtendsClause_4=norm1_ClassExtendsClause(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ClassExtendsClause_4;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getMembersParserRuleCall_1_0_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Members_5=norm1_Members(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Members_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedExpressionAccess().getFunctionExpressionAnnotationListAction_1_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_57);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getFunctionImplParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionImpl_8=norm6_FunctionImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionImpl_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeVariable = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeVariable=ruleTypeVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeVariable() throws RecognitionException {
        EObject current = null;

        Token lv_declaredCovariant_0_0=null;
        Token lv_declaredContravariant_1_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declaredUpperBound_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt139=3;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Out) ) {
                alt139=1;
            }
            else if ( (LA139_0==In) ) {
                alt139=2;
            }
            switch (alt139) {
                case 1 :
                    {
                    {
                    {
                    lv_declaredCovariant_0_0=(Token)match(input,Out,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredCovariant_0_0, grammarAccess.getTypeVariableAccess().getDeclaredCovariantOutKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeVariableRule());
                      	        }
                             		setWithLastConsumed(current, "declaredCovariant", true, "out");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_declaredContravariant_1_0=(Token)match(input,In,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_declaredContravariant_1_0, grammarAccess.getTypeVariableAccess().getDeclaredContravariantInKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeVariableRule());
                      	        }
                             		setWithLastConsumed(current, "declaredContravariant", true, "in");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeVariableAccess().getNameIdentifierOrThisParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_name_2_0=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeVariableRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierOrThis");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==Extends) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,Extends,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypeVariableAccess().getExtendsKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundTypeRefParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormalParameter=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject this_BindingElementFragment_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalParameterAccess().getFormalParameterAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFormalParameterRule());
              		}
                      newCompositeNode(grammarAccess.getFormalParameterAccess().getBindingElementFragmentParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_BindingElementFragment_1=ruleBindingElementFragment(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BindingElementFragment_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FormalParameter() throws RecognitionException {
        EObject current = null;

        EObject this_BindingElementFragment_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFormalParameterAccess().getFormalParameterAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFormalParameterRule());
              		}
                      newCompositeNode(grammarAccess.getFormalParameterAccess().getBindingElementFragmentParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_BindingElementFragment_1=norm1_BindingElementFragment(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BindingElementFragment_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingElementFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_variadic_3_0=null;
        Token otherlv_6=null;
        EObject lv_bindingPattern_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject this_BogusTypeRefFragment_2 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_ColonSepTypeRef_5 = null;

        EObject lv_initializer_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBindingPatternBindingPatternParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_bindingPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    loop141:
                    do {
                        int alt141=2;
                        int LA141_0 = input.LA(1);

                        if ( (LA141_0==CommercialAt) ) {
                            alt141=1;
                        }


                        switch (alt141) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getAnnotationsAnnotationParserRuleCall_0_1_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_1_0, 
                    	              		"eu.numberfour.n4js.N4JS.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop141;
                        }
                    } while (true);
                    int alt142=2;
                    alt142 = dfa142.predict(input);
                    switch (alt142) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBogusTypeRefFragmentParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_71);
                            this_BogusTypeRefFragment_2=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==FullStopFullStopFullStop) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            {
                            {
                            lv_variadic_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_variadic_3_0, grammarAccess.getBindingElementFragmentAccess().getVariadicFullStopFullStopFullStopKeyword_0_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              	        }
                                     		setWithLastConsumed(current, "variadic", true, "...");
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getNameBindingIdentifierParserRuleCall_0_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_72);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==Colon) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getColonSepTypeRefParserRuleCall_0_1_4()); 
                                  
                            }
                            pushFollow(FOLLOW_16);
                            this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ColonSepTypeRef_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==EqualsSign) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getBindingElementFragmentAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getInitializerAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_7_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"initializer",
                              		lv_initializer_7_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingElementFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token lv_variadic_3_0=null;
        Token otherlv_6=null;
        EObject lv_bindingPattern_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject this_BogusTypeRefFragment_2 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_ColonSepTypeRef_5 = null;

        EObject lv_initializer_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt151=2;
            alt151 = dfa151.predict(input);
            switch (alt151) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBindingPatternBindingPatternParserRuleCall_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_bindingPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    loop147:
                    do {
                        int alt147=2;
                        int LA147_0 = input.LA(1);

                        if ( (LA147_0==CommercialAt) ) {
                            alt147=1;
                        }


                        switch (alt147) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getAnnotationsAnnotationParserRuleCall_0_1_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"annotations",
                    	              		lv_annotations_1_0, 
                    	              		"eu.numberfour.n4js.N4JS.Annotation");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop147;
                        }
                    } while (true);
                    int alt148=2;
                    alt148 = dfa148.predict(input);
                    switch (alt148) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getBogusTypeRefFragmentParserRuleCall_0_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_71);
                            this_BogusTypeRefFragment_2=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_2;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==FullStopFullStopFullStop) ) {
                        alt149=1;
                    }
                    switch (alt149) {
                        case 1 :
                            {
                            {
                            lv_variadic_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_variadic_3_0, grammarAccess.getBindingElementFragmentAccess().getVariadicFullStopFullStopFullStopKeyword_0_1_2_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              	        }
                                     		setWithLastConsumed(current, "variadic", true, "...");
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getNameBindingIdentifierParserRuleCall_0_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_72);
                    lv_name_4_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==Colon) ) {
                        alt150=1;
                    }
                    switch (alt150) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getBindingElementFragmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getColonSepTypeRefParserRuleCall_0_1_4()); 
                                  
                            }
                            pushFollow(FOLLOW_16);
                            this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ColonSepTypeRef_5;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==EqualsSign) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    {
                    otherlv_6=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getBindingElementFragmentAccess().getEqualsSignKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementFragmentAccess().getInitializerAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_initializer_7_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementFragmentRule());
                      	        }
                             		set(
                             			current, 
                             			"initializer",
                              		lv_initializer_7_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleColonSepTypeRef(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject lv_declaredTypeRef_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getColonSepTypeRefAccess().getColonKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getColonSepTypeRefAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_declaredTypeRef_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getColonSepTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"declaredTypeRef",
                      		lv_declaredTypeRef_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBogusTypeRefFragment(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject lv_bogusTypeRef_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBogusTypeRefFragmentAccess().getBogusTypeRefBogusTypeRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_bogusTypeRef_0_0=ruleBogusTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBogusTypeRefFragmentRule());
              	        }
                     		set(
                     			current, 
                     			"bogusTypeRef",
                      		lv_bogusTypeRef_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BogusTypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockAccess().getBlockAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0_0_1());
                  
            }

            }


            }
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( ((LA153_0>=Intersection && LA153_0<=Implements)||(LA153_0>=Promisify && LA153_0<=Function)||(LA153_0>=Private && LA153_0<=Delete)||(LA153_0>=Public && LA153_0<=Break)||(LA153_0>=Class && LA153_0<=This)||(LA153_0>=From && LA153_0<=With)||(LA153_0>=For && LA153_0<=Var)||LA153_0==PlusSignPlusSign||LA153_0==HyphenMinusHyphenMinus||LA153_0==SolidusEqualsSign||(LA153_0>=As && LA153_0<=If)||LA153_0==Of||LA153_0==ExclamationMark||LA153_0==LeftParenthesis||(LA153_0>=Asterisk && LA153_0<=PlusSign)||LA153_0==HyphenMinus||LA153_0==Solidus||(LA153_0>=Semicolon && LA153_0<=LessThanSign)||(LA153_0>=CommercialAt && LA153_0<=LeftSquareBracket)||LA153_0==LeftCurlyBracket||LA153_0==Tilde||LA153_0==RULE_DOUBLE||(LA153_0>=RULE_HEX_INT && LA153_0<=RULE_LEGACY_OCTAL_INT)||LA153_0==RULE_SCIENTIFIC_INT||LA153_0==RULE_IDENTIFIER||LA153_0==RULE_STRING||(LA153_0>=RULE_TEMPLATE_HEAD && LA153_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA153_0==RULE_INT) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_statements_2_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Block() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBlockAccess().getBlockAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0_0_1());
                  
            }

            }


            }
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( ((LA154_0>=Intersection && LA154_0<=Implements)||(LA154_0>=Promisify && LA154_0<=Function)||(LA154_0>=Private && LA154_0<=Delete)||(LA154_0>=Public && LA154_0<=Break)||(LA154_0>=Class && LA154_0<=This)||(LA154_0>=From && LA154_0<=With)||(LA154_0>=For && LA154_0<=Var)||LA154_0==PlusSignPlusSign||LA154_0==HyphenMinusHyphenMinus||LA154_0==SolidusEqualsSign||(LA154_0>=As && LA154_0<=If)||LA154_0==Of||LA154_0==ExclamationMark||LA154_0==LeftParenthesis||(LA154_0>=Asterisk && LA154_0<=PlusSign)||LA154_0==HyphenMinus||LA154_0==Solidus||(LA154_0>=Semicolon && LA154_0<=LessThanSign)||(LA154_0>=CommercialAt && LA154_0<=LeftSquareBracket)||LA154_0==LeftCurlyBracket||LA154_0==Tilde||LA154_0==RULE_DOUBLE||(LA154_0>=RULE_HEX_INT && LA154_0<=RULE_LEGACY_OCTAL_INT)||LA154_0==RULE_SCIENTIFIC_INT||LA154_0==RULE_IDENTIFIER||LA154_0==RULE_STRING||(LA154_0>=RULE_TEMPLATE_HEAD && LA154_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA154_0==RULE_INT) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_statements_2_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBlockRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            otherlv_3=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRootStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRootStatement=ruleRootStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRootStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_FunctionDeclaration_1 = null;

        EObject this_VariableStatement_2 = null;

        EObject this_EmptyStatement_3 = null;

        EObject this_LabelledStatement_4 = null;

        EObject this_ExpressionStatement_5 = null;

        EObject this_IfStatement_6 = null;

        EObject this_IterationStatement_7 = null;

        EObject this_ContinueStatement_8 = null;

        EObject this_BreakStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_WithStatement_11 = null;

        EObject this_SwitchStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryStatement_14 = null;

        EObject this_DebuggerStatement_15 = null;


         enterRule(); 
            
        try {
            {
            int alt155=16;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBlockParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Block_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=ruleFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getVariableStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableStatement_2=norm1_VariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getEmptyStatementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_3=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EmptyStatement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getLabelledStatementParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LabelledStatement_4=ruleLabelledStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LabelledStatement_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getExpressionStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_5=ruleExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExpressionStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIfStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_6=ruleIfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIterationStatementParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IterationStatement_7=ruleIterationStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IterationStatement_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getContinueStatementParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ContinueStatement_8=ruleContinueStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ContinueStatement_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBreakStatementParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BreakStatement_9=ruleBreakStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BreakStatement_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getReturnStatementParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_10=ruleReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReturnStatement_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getWithStatementParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WithStatement_11=ruleWithStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WithStatement_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getSwitchStatementParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SwitchStatement_12=ruleSwitchStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SwitchStatement_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getThrowStatementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThrowStatement_13=ruleThrowStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThrowStatement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getTryStatementParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TryStatement_14=ruleTryStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TryStatement_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getDebuggerStatementParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DebuggerStatement_15=ruleDebuggerStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DebuggerStatement_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_RootStatement() throws RecognitionException {
        EObject current = null;

        EObject this_Block_0 = null;

        EObject this_FunctionDeclaration_1 = null;

        EObject this_VariableStatement_2 = null;

        EObject this_EmptyStatement_3 = null;

        EObject this_LabelledStatement_4 = null;

        EObject this_ExpressionStatement_5 = null;

        EObject this_IfStatement_6 = null;

        EObject this_IterationStatement_7 = null;

        EObject this_ContinueStatement_8 = null;

        EObject this_BreakStatement_9 = null;

        EObject this_ReturnStatement_10 = null;

        EObject this_WithStatement_11 = null;

        EObject this_SwitchStatement_12 = null;

        EObject this_ThrowStatement_13 = null;

        EObject this_TryStatement_14 = null;

        EObject this_DebuggerStatement_15 = null;


         enterRule(); 
            
        try {
            {
            int alt156=16;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBlockParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Block_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Block_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getFunctionDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionDeclaration_1=norm1_FunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getVariableStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableStatement_2=norm3_VariableStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getEmptyStatementParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EmptyStatement_3=ruleEmptyStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_EmptyStatement_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getLabelledStatementParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LabelledStatement_4=norm1_LabelledStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LabelledStatement_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getExpressionStatementParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionStatement_5=norm1_ExpressionStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExpressionStatement_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIfStatementParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IfStatement_6=norm1_IfStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IfStatement_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getIterationStatementParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IterationStatement_7=norm1_IterationStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IterationStatement_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getContinueStatementParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ContinueStatement_8=norm1_ContinueStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ContinueStatement_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getBreakStatementParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BreakStatement_9=norm1_BreakStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BreakStatement_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getReturnStatementParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReturnStatement_10=norm1_ReturnStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ReturnStatement_10;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getWithStatementParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WithStatement_11=norm1_WithStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WithStatement_11;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getSwitchStatementParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SwitchStatement_12=norm1_SwitchStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_SwitchStatement_12;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getThrowStatementParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThrowStatement_13=norm1_ThrowStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThrowStatement_13;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getTryStatementParserRuleCall_14()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TryStatement_14=norm1_TryStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TryStatement_14;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getRootStatementAccess().getDebuggerStatementParserRuleCall_15()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DebuggerStatement_15=ruleDebuggerStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DebuggerStatement_15;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedFunctionDeclaration_0 = null;

        EObject this_RootStatement_1 = null;


         enterRule(); 
            
        try {
            {
            int alt157=2;
            alt157 = dfa157.predict(input);
            switch (alt157) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAnnotatedFunctionDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedFunctionDeclaration_0=ruleAnnotatedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedFunctionDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRootStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_1=ruleRootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Statement() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedFunctionDeclaration_0 = null;

        EObject this_RootStatement_1 = null;


         enterRule(); 
            
        try {
            {
            int alt158=2;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getAnnotatedFunctionDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedFunctionDeclaration_0=norm1_AnnotatedFunctionDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedFunctionDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getStatementAccess().getRootStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RootStatement_1=norm1_RootStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RootStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Enumerator lv_varStmtKeyword_1_0 = null;

        EObject lv_varDeclsOrBindings_2_0 = null;

        EObject lv_varDeclsOrBindings_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableStatementAccess().getVariableStatementAction_0_0_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_0_0_1_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_varStmtKeyword_1_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_1_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_42);
            lv_varDeclsOrBindings_2_0=norm1_VariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==Comma) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getVariableStatementAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_varDeclsOrBindings_4_0=norm1_VariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_4_0, 
            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getVariableStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Enumerator lv_varStmtKeyword_1_0 = null;

        EObject lv_varDeclsOrBindings_2_0 = null;

        EObject lv_varDeclsOrBindings_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableStatementAccess().getVariableStatementAction_0_0_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_0_0_1_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_varStmtKeyword_1_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_1_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_42);
            lv_varDeclsOrBindings_2_0=norm3_VariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==Comma) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    {
            	    otherlv_3=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getVariableStatementAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_varDeclsOrBindings_4_0=norm3_VariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_4_0, 
            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getVariableStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableStatement=ruleExportedVariableStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        Enumerator lv_varStmtKeyword_2_0 = null;

        EObject lv_varDeclsOrBindings_3_0 = null;

        EObject lv_varDeclsOrBindings_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableStatementAccess().getExportedVariableStatementAction_0(),
                          current);
                  
            }

            }
            loop161:
            do {
                int alt161=2;
                alt161 = dfa161.predict(input);
                switch (alt161) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop161;
                }
            } while (true);
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_varStmtKeyword_2_0=ruleVariableStatementKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
              	        }
                     		set(
                     			current, 
                     			"varStmtKeyword",
                      		lv_varStmtKeyword_2_0, 
                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_42);
            lv_varDeclsOrBindings_3_0=ruleExportedVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
              	        }
                     		add(
                     			current, 
                     			"varDeclsOrBindings",
                      		lv_varDeclsOrBindings_3_0, 
                      		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==Comma) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getExportedVariableStatementAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getVarDeclsOrBindingsExportedVariableDeclarationOrBindingParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_42);
            	    lv_varDeclsOrBindings_5_0=ruleExportedVariableDeclarationOrBinding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExportedVariableStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"varDeclsOrBindings",
            	              		lv_varDeclsOrBindings_5_0, 
            	              		"eu.numberfour.n4js.N4JS.ExportedVariableDeclarationOrBinding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExportedVariableStatementAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationOrBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationOrBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableDeclarationOrBinding=ruleVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationOrBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==LeftCurlyBracket) && (synpred83_InternalN4JSXParser())) {
                alt163=1;
            }
            else if ( (LA163_0==LeftSquareBracket) && (synpred83_InternalN4JSXParser())) {
                alt163=1;
            }
            else if ( ((LA163_0>=Intersection && LA163_0<=Implements)||(LA163_0>=Promisify && LA163_0<=Abstract)||LA163_0==External||(LA163_0>=Private && LA163_0<=Project)||LA163_0==Public||LA163_0==Static||LA163_0==Target||(LA163_0>=Async && LA163_0<=Await)||LA163_0==Union||(LA163_0>=Yield && LA163_0<=This)||LA163_0==From||LA163_0==Type||(LA163_0>=Get && LA163_0<=Let)||(LA163_0>=Out && LA163_0<=Set)||LA163_0==As||LA163_0==Of||LA163_0==CommercialAt||LA163_0==RULE_IDENTIFIER) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=ruleVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm4_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==LeftCurlyBracket) && (synpred84_InternalN4JSXParser())) {
                alt164=1;
            }
            else if ( (LA164_0==LeftSquareBracket) && (synpred84_InternalN4JSXParser())) {
                alt164=1;
            }
            else if ( ((LA164_0>=Intersection && LA164_0<=Implements)||(LA164_0>=Promisify && LA164_0<=Abstract)||LA164_0==External||(LA164_0>=Private && LA164_0<=Project)||LA164_0==Public||LA164_0==Static||LA164_0==Target||(LA164_0>=Async && LA164_0<=Await)||LA164_0==Union||(LA164_0>=Yield && LA164_0<=This)||LA164_0==From||LA164_0==Type||(LA164_0>=Get && LA164_0<=Let)||(LA164_0>=Out && LA164_0<=Set)||LA164_0==As||LA164_0==Of||LA164_0==CommercialAt||LA164_0==RULE_IDENTIFIER) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm1_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==LeftCurlyBracket) && (synpred85_InternalN4JSXParser())) {
                alt165=1;
            }
            else if ( (LA165_0==LeftSquareBracket) && (synpred85_InternalN4JSXParser())) {
                alt165=1;
            }
            else if ( ((LA165_0>=Intersection && LA165_0<=Implements)||(LA165_0>=Promisify && LA165_0<=Abstract)||LA165_0==External||(LA165_0>=Private && LA165_0<=Project)||LA165_0==Public||LA165_0==Static||LA165_0==Target||(LA165_0>=Async && LA165_0<=Await)||LA165_0==Union||LA165_0==This||LA165_0==From||LA165_0==Type||(LA165_0>=Get && LA165_0<=Let)||(LA165_0>=Out && LA165_0<=Set)||LA165_0==As||LA165_0==Of||LA165_0==CommercialAt||LA165_0==RULE_IDENTIFIER) ) {
                alt165=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;
            }
            switch (alt165) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm2_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm6_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==LeftCurlyBracket) && (synpred86_InternalN4JSXParser())) {
                alt166=1;
            }
            else if ( (LA166_0==LeftSquareBracket) && (synpred86_InternalN4JSXParser())) {
                alt166=1;
            }
            else if ( ((LA166_0>=Intersection && LA166_0<=Implements)||(LA166_0>=Promisify && LA166_0<=Abstract)||LA166_0==External||(LA166_0>=Private && LA166_0<=Project)||LA166_0==Public||LA166_0==Static||LA166_0==Target||(LA166_0>=Async && LA166_0<=Await)||LA166_0==Union||LA166_0==This||LA166_0==From||LA166_0==Type||(LA166_0>=Get && LA166_0<=Let)||(LA166_0>=Out && LA166_0<=Set)||LA166_0==As||LA166_0==Of||LA166_0==CommercialAt||LA166_0==RULE_IDENTIFIER) ) {
                alt166=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;
            }
            switch (alt166) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm3_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==LeftCurlyBracket) && (synpred87_InternalN4JSXParser())) {
                alt167=1;
            }
            else if ( (LA167_0==LeftSquareBracket) && (synpred87_InternalN4JSXParser())) {
                alt167=1;
            }
            else if ( ((LA167_0>=Intersection && LA167_0<=Implements)||(LA167_0>=Promisify && LA167_0<=Abstract)||LA167_0==External||(LA167_0>=Private && LA167_0<=Project)||LA167_0==Public||LA167_0==Static||LA167_0==Target||(LA167_0>=Async && LA167_0<=Await)||LA167_0==Union||(LA167_0>=Yield && LA167_0<=This)||LA167_0==From||LA167_0==Type||(LA167_0>=Get && LA167_0<=Let)||(LA167_0>=Out && LA167_0<=Set)||LA167_0==As||LA167_0==Of||LA167_0==CommercialAt||LA167_0==RULE_IDENTIFIER) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm4_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm4_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_VariableBinding_0 = null;

        EObject this_VariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==LeftCurlyBracket) && (synpred88_InternalN4JSXParser())) {
                alt168=1;
            }
            else if ( (LA168_0==LeftSquareBracket) && (synpred88_InternalN4JSXParser())) {
                alt168=1;
            }
            else if ( ((LA168_0>=Intersection && LA168_0<=Implements)||(LA168_0>=Promisify && LA168_0<=Abstract)||LA168_0==External||(LA168_0>=Private && LA168_0<=Project)||LA168_0==Public||LA168_0==Static||LA168_0==Target||(LA168_0>=Async && LA168_0<=Await)||LA168_0==Union||LA168_0==This||LA168_0==From||LA168_0==Type||(LA168_0>=Get && LA168_0<=Let)||(LA168_0>=Out && LA168_0<=Set)||LA168_0==As||LA168_0==Of||LA168_0==CommercialAt||LA168_0==RULE_IDENTIFIER) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBinding_0=norm6_VariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getVariableDeclarationOrBindingAccess().getVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableDeclaration_1=norm6_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_VariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleVariableBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableBinding=ruleVariableBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_1_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==EqualsSign) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==EqualsSign) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==EqualsSign) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==EqualsSign) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getVariableBindingAccess().getEqualsSignKeyword_1_0_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableBindingRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm1_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm3_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm4_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm5_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm6_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm7_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleVariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop173:
            do {
                int alt173=2;
                alt173 = dfa173.predict(input);
                switch (alt173) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==EqualsSign) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop175:
            do {
                int alt175=2;
                alt175 = dfa175.predict(input);
                switch (alt175) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==EqualsSign) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop177:
            do {
                int alt177=2;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==EqualsSign) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop179:
            do {
                int alt179=2;
                alt179 = dfa179.predict(input);
                switch (alt179) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_1_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==EqualsSign) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm4_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop181:
            do {
                int alt181=2;
                alt181 = dfa181.predict(input);
                switch (alt181) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_72);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==Colon) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==EqualsSign) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm5_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop184:
            do {
                int alt184=2;
                alt184 = dfa184.predict(input);
                switch (alt184) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_72);
            lv_name_1_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==Colon) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==EqualsSign) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm6_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop187:
            do {
                int alt187=2;
                alt187 = dfa187.predict(input);
                switch (alt187) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_72);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==Colon) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==EqualsSign) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm7_VariableDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop190:
            do {
                int alt190=2;
                alt190 = dfa190.predict(input);
                switch (alt190) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getAnnotationsAnnotationParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_0_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_72);
            lv_name_1_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==Colon) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getVariableDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getColonSepTypeRefParserRuleCall_1_0_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_16);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==EqualsSign) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    {
                    otherlv_3=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getVariableDeclarationImplAccess().getEqualsSignKeyword_1_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getVariableDeclarationImplAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_4_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getVariableDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableDeclarationOrBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableDeclarationOrBinding=ruleExportedVariableDeclarationOrBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableDeclarationOrBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_ExportedVariableBinding_0 = null;

        EObject this_ExportedVariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==LeftCurlyBracket) && (synpred105_InternalN4JSXParser())) {
                alt193=1;
            }
            else if ( (LA193_0==LeftSquareBracket) && (synpred105_InternalN4JSXParser())) {
                alt193=1;
            }
            else if ( ((LA193_0>=Intersection && LA193_0<=Implements)||(LA193_0>=Promisify && LA193_0<=Abstract)||LA193_0==External||(LA193_0>=Private && LA193_0<=Project)||LA193_0==Public||LA193_0==Static||LA193_0==Target||(LA193_0>=Async && LA193_0<=Await)||LA193_0==Union||(LA193_0>=Yield && LA193_0<=This)||LA193_0==From||LA193_0==Type||(LA193_0>=Get && LA193_0<=Let)||(LA193_0>=Out && LA193_0<=Set)||LA193_0==As||LA193_0==Of||LA193_0==CommercialAt||LA193_0==RULE_IDENTIFIER) ) {
                alt193=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 193, 0, input);

                throw nvae;
            }
            switch (alt193) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableBinding_0=ruleExportedVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableDeclaration_1=ruleExportedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableDeclarationOrBinding() throws RecognitionException {
        EObject current = null;

        EObject this_ExportedVariableBinding_0 = null;

        EObject this_ExportedVariableDeclaration_1 = null;


         enterRule(); 
            
        try {
            {
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==LeftCurlyBracket) && (synpred106_InternalN4JSXParser())) {
                alt194=1;
            }
            else if ( (LA194_0==LeftSquareBracket) && (synpred106_InternalN4JSXParser())) {
                alt194=1;
            }
            else if ( ((LA194_0>=Intersection && LA194_0<=Implements)||(LA194_0>=Promisify && LA194_0<=Abstract)||LA194_0==External||(LA194_0>=Private && LA194_0<=Project)||LA194_0==Public||LA194_0==Static||LA194_0==Target||(LA194_0>=Async && LA194_0<=Await)||LA194_0==Union||LA194_0==This||LA194_0==From||LA194_0==Type||(LA194_0>=Get && LA194_0<=Let)||(LA194_0>=Out && LA194_0<=Set)||LA194_0==As||LA194_0==Of||LA194_0==CommercialAt||LA194_0==RULE_IDENTIFIER) ) {
                alt194=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 194, 0, input);

                throw nvae;
            }
            switch (alt194) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableBindingParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableBinding_0=norm1_ExportedVariableBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableBinding_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportedVariableDeclarationOrBindingAccess().getExportedVariableDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExportedVariableDeclaration_1=norm1_ExportedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ExportedVariableDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableBinding=ruleExportedVariableBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_pattern_0_0=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportedVariableBindingAccess().getEqualsSignKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableBinding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pattern_0_0 = null;

        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getPatternBindingPatternParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_73);
            lv_pattern_0_0=norm1_BindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"pattern",
                      		lv_pattern_0_0, 
                      		"eu.numberfour.n4js.N4JS.BindingPattern");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExportedVariableBindingAccess().getEqualsSignKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExportedVariableBindingAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExportedVariableBindingRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportedVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportedVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportedVariableDeclaration=ruleExportedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportedVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableDeclarationAccess().getExportedVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportedVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportedVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm5_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExportedVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExportedVariableDeclarationAccess().getExportedVariableDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getExportedVariableDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getExportedVariableDeclarationAccess().getVariableDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_VariableDeclarationImpl_1=norm7_VariableDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_VariableDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleEmptyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmptyStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmptyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmptyStatement=ruleEmptyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmptyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleEmptyStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionStatement=ruleExpressionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_0_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionStatementAccess().getSemiParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ExpressionStatement() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_0_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionStatementAccess().getSemiParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIfStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIfStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIfStatement=ruleIfStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIfStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_ifStmt_4_0 = null;

        EObject lv_elseStmt_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,If,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfStmtStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_77);
            lv_ifStmt_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifStmt",
                      		lv_ifStmt_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==Else) ) {
                int LA195_1 = input.LA(2);

                if ( (synpred109_InternalN4JSXParser()) ) {
                    alt195=1;
                }
            }
            switch (alt195) {
                case 1 :
                    {
                    {
                    otherlv_5=(Token)match(input,Else,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStmtStatementParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStmt_6_0=ruleStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStmt",
                              		lv_elseStmt_6_0, 
                              		"eu.numberfour.n4js.N4JS.Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IfStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expression_2_0 = null;

        EObject lv_ifStmt_4_0 = null;

        EObject lv_elseStmt_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,If,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIfStatementAccess().getIfStmtStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_77);
            lv_ifStmt_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
              	        }
                     		set(
                     			current, 
                     			"ifStmt",
                      		lv_ifStmt_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==Else) ) {
                int LA196_1 = input.LA(2);

                if ( (synpred110_InternalN4JSXParser()) ) {
                    alt196=1;
                }
            }
            switch (alt196) {
                case 1 :
                    {
                    {
                    otherlv_5=(Token)match(input,Else,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseStmtStatementParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_elseStmt_6_0=norm1_Statement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getIfStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"elseStmt",
                              		lv_elseStmt_6_0, 
                              		"eu.numberfour.n4js.N4JS.Statement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIterationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterationStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterationStatement=ruleIterationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIterationStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DoStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;


         enterRule(); 
            
        try {
            {
            int alt197=3;
            switch ( input.LA(1) ) {
            case Do:
                {
                alt197=1;
                }
                break;
            case While:
                {
                alt197=2;
                }
                break;
            case For:
                {
                alt197=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }

            switch (alt197) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoStatement_0=ruleDoStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoStatement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=ruleWhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WhileStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=ruleForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ForStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IterationStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DoStatement_0 = null;

        EObject this_WhileStatement_1 = null;

        EObject this_ForStatement_2 = null;


         enterRule(); 
            
        try {
            {
            int alt198=3;
            switch ( input.LA(1) ) {
            case Do:
                {
                alt198=1;
                }
                break;
            case While:
                {
                alt198=2;
                }
                break;
            case For:
                {
                alt198=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }

            switch (alt198) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getDoStatementParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoStatement_0=norm1_DoStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoStatement_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WhileStatement_1=norm1_WhileStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WhileStatement_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ForStatement_2=norm1_ForStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ForStatement_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDoStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoStatement=ruleDoStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDoStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Do,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_statement_1_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_1_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_4_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
                  
            }
            int alt199=2;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDoStatementAccess().getSemiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_DoStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_statement_1_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Do,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_statement_1_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_1_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDoStatementAccess().getExpressionExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_4_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDoStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
                  
            }
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==Semicolon) ) {
                int LA200_1 = input.LA(2);

                if ( (synpred112_InternalN4JSXParser()) ) {
                    alt200=1;
                }
            }
            else if ( (LA200_0==EOF||LA200_0==RULE_ML_COMMENT||LA200_0==RULE_EOL) && (synpred112_InternalN4JSXParser())) {
                alt200=1;
            }
            else if ( (LA200_0==RightCurlyBracket) ) {
                int LA200_3 = input.LA(2);

                if ( (synpred112_InternalN4JSXParser()) ) {
                    alt200=1;
                }
            }
            switch (alt200) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDoStatementAccess().getSemiParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    ruleSemi();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWhileStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhileStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhileStatement=ruleWhileStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhileStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_WhileStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,While,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWhileStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleForStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForStatement=ruleForStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_forIn_4_0=null;
        Token otherlv_6=null;
        Token lv_forIn_9_0=null;
        Token lv_forOf_10_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token lv_forIn_19_0=null;
        Token lv_forOf_21_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token lv_forIn_28_0=null;
        Token lv_forOf_30_0=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_initExpr_3_0 = null;

        EObject lv_expression_5_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_expression_11_0 = null;

        EObject lv_varDeclsOrBindings_12_0 = null;

        EObject lv_varDeclsOrBindings_14_0 = null;

        EObject lv_expression_16_0 = null;

        EObject lv_updateExpr_18_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_initExpr_23_0 = null;

        EObject lv_expression_25_0 = null;

        EObject lv_updateExpr_27_0 = null;

        EObject lv_expression_29_0 = null;

        EObject lv_expression_31_0 = null;

        EObject lv_expression_33_0 = null;

        EObject lv_updateExpr_35_0 = null;

        EObject lv_statement_37_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getForStatementAccess().getForStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
                  
            }
            int alt218=2;
            alt218 = dfa218.predict(input);
            switch (alt218) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprLetIdentifierRefParserRuleCall_3_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_80);
                    lv_initExpr_3_0=ruleLetIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"initExpr",
                              		lv_initExpr_3_0, 
                              		"eu.numberfour.n4js.N4JS.LetIdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    lv_forIn_4_0=(Token)match(input,In,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_forIn_4_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_0_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getForStatementRule());
                      	        }
                             		setWithLastConsumed(current, "forIn", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_expression_5_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_0_0_3());
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt217=3;
                    alt217 = dfa217.predict(input);
                    switch (alt217) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_3_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"varStmtKeyword",
                                      		lv_varStmtKeyword_7_0, 
                                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt209=2;
                            alt209 = dfa209.predict(input);
                            switch (alt209) {
                                case 1 :
                                    {
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsBindingIdentifierAsVariableDeclarationParserRuleCall_3_1_0_0_1_0_0_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_81);
                                    lv_varDeclsOrBindings_8_0=ruleBindingIdentifierAsVariableDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_8_0, 
                                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsVariableDeclaration");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt201=2;
                                    int LA201_0 = input.LA(1);

                                    if ( (LA201_0==In) ) {
                                        alt201=1;
                                    }
                                    else if ( (LA201_0==Of) ) {
                                        alt201=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 201, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt201) {
                                        case 1 :
                                            {
                                            {
                                            {
                                            lv_forIn_9_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_9_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_0_0_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            lv_forOf_10_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_10_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_0_0_1_1_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }
                                    int alt202=2;
                                    alt202 = dfa202.predict(input);
                                    switch (alt202) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_0_0_2_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_11_0=norm1_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_11_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_83);
                                    lv_varDeclsOrBindings_12_0=norm4_VariableDeclarationOrBinding();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_12_0, 
                                              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt208=3;
                                    switch ( input.LA(1) ) {
                                    case Comma:
                                    case Semicolon:
                                        {
                                        alt208=1;
                                        }
                                        break;
                                    case In:
                                        {
                                        alt208=2;
                                        }
                                        break;
                                    case Of:
                                        {
                                        alt208=3;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 208, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt208) {
                                        case 1 :
                                            {
                                            {
                                            loop203:
                                            do {
                                                int alt203=2;
                                                int LA203_0 = input.LA(1);

                                                if ( (LA203_0==Comma) ) {
                                                    alt203=1;
                                                }


                                                switch (alt203) {
                                            	case 1 :
                                            	    {
                                            	    otherlv_13=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	          	newLeafNode(otherlv_13, grammarAccess.getForStatementAccess().getCommaKeyword_3_1_0_0_1_1_1_0_0_0());
                                            	          
                                            	    }
                                            	    {
                                            	    {
                                            	    if ( state.backtracking==0 ) {
                                            	       
                                            	      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_1_0_0_1_0()); 
                                            	      	    
                                            	    }
                                            	    pushFollow(FOLLOW_84);
                                            	    lv_varDeclsOrBindings_14_0=ruleVariableDeclarationOrBinding();

                                            	    state._fsp--;
                                            	    if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	      	        if (current==null) {
                                            	      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                            	      	        }
                                            	             		add(
                                            	             			current, 
                                            	             			"varDeclsOrBindings",
                                            	              		lv_varDeclsOrBindings_14_0, 
                                            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                            	      	        afterParserOrEnumRuleCall();
                                            	      	    
                                            	    }

                                            	    }


                                            	    }


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop203;
                                                }
                                            } while (true);

                                            otherlv_15=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_1());
                                                  
                                            }
                                            int alt204=2;
                                            int LA204_0 = input.LA(1);

                                            if ( ((LA204_0>=Intersection && LA204_0<=Implements)||(LA204_0>=Promisify && LA204_0<=Abstract)||(LA204_0>=External && LA204_0<=Function)||(LA204_0>=Private && LA204_0<=Delete)||LA204_0==Public||LA204_0==Static||(LA204_0>=Target && LA204_0<=Await)||LA204_0==Class||(LA204_0>=False && LA204_0<=Super)||LA204_0==Union||(LA204_0>=Yield && LA204_0<=This)||(LA204_0>=From && LA204_0<=Void)||(LA204_0>=Get && LA204_0<=Set)||LA204_0==PlusSignPlusSign||LA204_0==HyphenMinusHyphenMinus||LA204_0==SolidusEqualsSign||LA204_0==As||LA204_0==Of||LA204_0==ExclamationMark||LA204_0==LeftParenthesis||(LA204_0>=Asterisk && LA204_0<=PlusSign)||LA204_0==HyphenMinus||LA204_0==Solidus||LA204_0==LessThanSign||(LA204_0>=CommercialAt && LA204_0<=LeftSquareBracket)||LA204_0==LeftCurlyBracket||LA204_0==Tilde||LA204_0==RULE_DOUBLE||(LA204_0>=RULE_HEX_INT && LA204_0<=RULE_LEGACY_OCTAL_INT)||LA204_0==RULE_SCIENTIFIC_INT||LA204_0==RULE_IDENTIFIER||LA204_0==RULE_STRING||(LA204_0>=RULE_TEMPLATE_HEAD && LA204_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA204_0==RULE_INT) ) {
                                                alt204=1;
                                            }
                                            switch (alt204) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_0_2_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_86);
                                                    lv_expression_16_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_16_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }

                                            otherlv_17=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_17, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_3());
                                                  
                                            }
                                            int alt205=2;
                                            int LA205_0 = input.LA(1);

                                            if ( ((LA205_0>=Intersection && LA205_0<=Implements)||(LA205_0>=Promisify && LA205_0<=Abstract)||(LA205_0>=External && LA205_0<=Function)||(LA205_0>=Private && LA205_0<=Delete)||LA205_0==Public||LA205_0==Static||(LA205_0>=Target && LA205_0<=Await)||LA205_0==Class||(LA205_0>=False && LA205_0<=Super)||LA205_0==Union||(LA205_0>=Yield && LA205_0<=This)||(LA205_0>=From && LA205_0<=Void)||(LA205_0>=Get && LA205_0<=Set)||LA205_0==PlusSignPlusSign||LA205_0==HyphenMinusHyphenMinus||LA205_0==SolidusEqualsSign||LA205_0==As||LA205_0==Of||LA205_0==ExclamationMark||LA205_0==LeftParenthesis||(LA205_0>=Asterisk && LA205_0<=PlusSign)||LA205_0==HyphenMinus||LA205_0==Solidus||LA205_0==LessThanSign||(LA205_0>=CommercialAt && LA205_0<=LeftSquareBracket)||LA205_0==LeftCurlyBracket||LA205_0==Tilde||LA205_0==RULE_DOUBLE||(LA205_0>=RULE_HEX_INT && LA205_0<=RULE_LEGACY_OCTAL_INT)||LA205_0==RULE_SCIENTIFIC_INT||LA205_0==RULE_IDENTIFIER||LA205_0==RULE_STRING||(LA205_0>=RULE_TEMPLATE_HEAD && LA205_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA205_0==RULE_INT) ) {
                                                alt205=1;
                                            }
                                            switch (alt205) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_0_1_1_1_0_4_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_updateExpr_18_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"updateExpr",
                                                              		lv_updateExpr_18_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forIn_19_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_19_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_1_1_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }
                                            int alt206=2;
                                            int LA206_0 = input.LA(1);

                                            if ( ((LA206_0>=Intersection && LA206_0<=Implements)||(LA206_0>=Promisify && LA206_0<=Abstract)||(LA206_0>=External && LA206_0<=Function)||(LA206_0>=Private && LA206_0<=Delete)||LA206_0==Public||LA206_0==Static||(LA206_0>=Target && LA206_0<=Await)||LA206_0==Class||(LA206_0>=False && LA206_0<=Super)||LA206_0==Union||(LA206_0>=Yield && LA206_0<=This)||(LA206_0>=From && LA206_0<=Void)||(LA206_0>=Get && LA206_0<=Set)||LA206_0==PlusSignPlusSign||LA206_0==HyphenMinusHyphenMinus||LA206_0==SolidusEqualsSign||LA206_0==As||LA206_0==Of||LA206_0==ExclamationMark||LA206_0==LeftParenthesis||(LA206_0>=Asterisk && LA206_0<=PlusSign)||LA206_0==HyphenMinus||LA206_0==Solidus||LA206_0==LessThanSign||(LA206_0>=CommercialAt && LA206_0<=LeftSquareBracket)||LA206_0==LeftCurlyBracket||LA206_0==Tilde||LA206_0==RULE_DOUBLE||(LA206_0>=RULE_HEX_INT && LA206_0<=RULE_LEGACY_OCTAL_INT)||LA206_0==RULE_SCIENTIFIC_INT||LA206_0==RULE_IDENTIFIER||LA206_0==RULE_STRING||(LA206_0>=RULE_TEMPLATE_HEAD && LA206_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA206_0==RULE_INT) ) {
                                                alt206=1;
                                            }
                                            switch (alt206) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_1_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_20_0=norm1_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_20_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 3 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forOf_21_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_21_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_1_1_2_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }
                                            int alt207=2;
                                            int LA207_0 = input.LA(1);

                                            if ( ((LA207_0>=Intersection && LA207_0<=Implements)||(LA207_0>=Promisify && LA207_0<=Abstract)||(LA207_0>=External && LA207_0<=Function)||(LA207_0>=Private && LA207_0<=Delete)||LA207_0==Public||LA207_0==Static||(LA207_0>=Target && LA207_0<=Await)||LA207_0==Class||(LA207_0>=False && LA207_0<=Super)||LA207_0==Union||(LA207_0>=Yield && LA207_0<=This)||(LA207_0>=From && LA207_0<=Void)||(LA207_0>=Get && LA207_0<=Set)||LA207_0==PlusSignPlusSign||LA207_0==HyphenMinusHyphenMinus||LA207_0==SolidusEqualsSign||LA207_0==As||LA207_0==Of||LA207_0==ExclamationMark||LA207_0==LeftParenthesis||(LA207_0>=Asterisk && LA207_0<=PlusSign)||LA207_0==HyphenMinus||LA207_0==Solidus||LA207_0==LessThanSign||(LA207_0>=CommercialAt && LA207_0<=LeftSquareBracket)||LA207_0==LeftCurlyBracket||LA207_0==Tilde||LA207_0==RULE_DOUBLE||(LA207_0>=RULE_HEX_INT && LA207_0<=RULE_LEGACY_OCTAL_INT)||LA207_0==RULE_SCIENTIFIC_INT||LA207_0==RULE_IDENTIFIER||LA207_0==RULE_STRING||(LA207_0>=RULE_TEMPLATE_HEAD && LA207_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA207_0==RULE_INT) ) {
                                                alt207=1;
                                            }
                                            switch (alt207) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_1_1_2_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_22_0=norm1_AssignmentExpression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_22_0, 
                                                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprExpressionParserRuleCall_3_1_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_87);
                            lv_initExpr_23_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initExpr",
                                      		lv_initExpr_23_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt214=3;
                            switch ( input.LA(1) ) {
                            case Semicolon:
                                {
                                alt214=1;
                                }
                                break;
                            case In:
                                {
                                alt214=2;
                                }
                                break;
                            case Of:
                                {
                                alt214=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 214, 0, input);

                                throw nvae;
                            }

                            switch (alt214) {
                                case 1 :
                                    {
                                    {
                                    otherlv_24=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_24, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_0());
                                          
                                    }
                                    int alt210=2;
                                    int LA210_0 = input.LA(1);

                                    if ( ((LA210_0>=Intersection && LA210_0<=Implements)||(LA210_0>=Promisify && LA210_0<=Abstract)||(LA210_0>=External && LA210_0<=Function)||(LA210_0>=Private && LA210_0<=Delete)||LA210_0==Public||LA210_0==Static||(LA210_0>=Target && LA210_0<=Await)||LA210_0==Class||(LA210_0>=False && LA210_0<=Super)||LA210_0==Union||(LA210_0>=Yield && LA210_0<=This)||(LA210_0>=From && LA210_0<=Void)||(LA210_0>=Get && LA210_0<=Set)||LA210_0==PlusSignPlusSign||LA210_0==HyphenMinusHyphenMinus||LA210_0==SolidusEqualsSign||LA210_0==As||LA210_0==Of||LA210_0==ExclamationMark||LA210_0==LeftParenthesis||(LA210_0>=Asterisk && LA210_0<=PlusSign)||LA210_0==HyphenMinus||LA210_0==Solidus||LA210_0==LessThanSign||(LA210_0>=CommercialAt && LA210_0<=LeftSquareBracket)||LA210_0==LeftCurlyBracket||LA210_0==Tilde||LA210_0==RULE_DOUBLE||(LA210_0>=RULE_HEX_INT && LA210_0<=RULE_LEGACY_OCTAL_INT)||LA210_0==RULE_SCIENTIFIC_INT||LA210_0==RULE_IDENTIFIER||LA210_0==RULE_STRING||(LA210_0>=RULE_TEMPLATE_HEAD && LA210_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA210_0==RULE_INT) ) {
                                        alt210=1;
                                    }
                                    switch (alt210) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_0_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_86);
                                            lv_expression_25_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_25_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }

                                    otherlv_26=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_26, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_2());
                                          
                                    }
                                    int alt211=2;
                                    int LA211_0 = input.LA(1);

                                    if ( ((LA211_0>=Intersection && LA211_0<=Implements)||(LA211_0>=Promisify && LA211_0<=Abstract)||(LA211_0>=External && LA211_0<=Function)||(LA211_0>=Private && LA211_0<=Delete)||LA211_0==Public||LA211_0==Static||(LA211_0>=Target && LA211_0<=Await)||LA211_0==Class||(LA211_0>=False && LA211_0<=Super)||LA211_0==Union||(LA211_0>=Yield && LA211_0<=This)||(LA211_0>=From && LA211_0<=Void)||(LA211_0>=Get && LA211_0<=Set)||LA211_0==PlusSignPlusSign||LA211_0==HyphenMinusHyphenMinus||LA211_0==SolidusEqualsSign||LA211_0==As||LA211_0==Of||LA211_0==ExclamationMark||LA211_0==LeftParenthesis||(LA211_0>=Asterisk && LA211_0<=PlusSign)||LA211_0==HyphenMinus||LA211_0==Solidus||LA211_0==LessThanSign||(LA211_0>=CommercialAt && LA211_0<=LeftSquareBracket)||LA211_0==LeftCurlyBracket||LA211_0==Tilde||LA211_0==RULE_DOUBLE||(LA211_0>=RULE_HEX_INT && LA211_0<=RULE_LEGACY_OCTAL_INT)||LA211_0==RULE_SCIENTIFIC_INT||LA211_0==RULE_IDENTIFIER||LA211_0==RULE_STRING||(LA211_0>=RULE_TEMPLATE_HEAD && LA211_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA211_0==RULE_INT) ) {
                                        alt211=1;
                                    }
                                    switch (alt211) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_1_1_0_3_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_updateExpr_27_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"updateExpr",
                                                      		lv_updateExpr_27_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forIn_28_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forIn_28_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_1_1_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forIn", true, "in");
                                      	    
                                    }

                                    }


                                    }
                                    int alt212=2;
                                    int LA212_0 = input.LA(1);

                                    if ( ((LA212_0>=Intersection && LA212_0<=Implements)||(LA212_0>=Promisify && LA212_0<=Abstract)||(LA212_0>=External && LA212_0<=Function)||(LA212_0>=Private && LA212_0<=Delete)||LA212_0==Public||LA212_0==Static||(LA212_0>=Target && LA212_0<=Await)||LA212_0==Class||(LA212_0>=False && LA212_0<=Super)||LA212_0==Union||(LA212_0>=Yield && LA212_0<=This)||(LA212_0>=From && LA212_0<=Void)||(LA212_0>=Get && LA212_0<=Set)||LA212_0==PlusSignPlusSign||LA212_0==HyphenMinusHyphenMinus||LA212_0==SolidusEqualsSign||LA212_0==As||LA212_0==Of||LA212_0==ExclamationMark||LA212_0==LeftParenthesis||(LA212_0>=Asterisk && LA212_0<=PlusSign)||LA212_0==HyphenMinus||LA212_0==Solidus||LA212_0==LessThanSign||(LA212_0>=CommercialAt && LA212_0<=LeftSquareBracket)||LA212_0==LeftCurlyBracket||LA212_0==Tilde||LA212_0==RULE_DOUBLE||(LA212_0>=RULE_HEX_INT && LA212_0<=RULE_LEGACY_OCTAL_INT)||LA212_0==RULE_SCIENTIFIC_INT||LA212_0==RULE_IDENTIFIER||LA212_0==RULE_STRING||(LA212_0>=RULE_TEMPLATE_HEAD && LA212_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA212_0==RULE_INT) ) {
                                        alt212=1;
                                    }
                                    switch (alt212) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_1_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_29_0=norm1_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_29_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forOf_30_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forOf_30_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_1_1_2_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forOf", true, "of");
                                      	    
                                    }

                                    }


                                    }
                                    int alt213=2;
                                    int LA213_0 = input.LA(1);

                                    if ( ((LA213_0>=Intersection && LA213_0<=Implements)||(LA213_0>=Promisify && LA213_0<=Abstract)||(LA213_0>=External && LA213_0<=Function)||(LA213_0>=Private && LA213_0<=Delete)||LA213_0==Public||LA213_0==Static||(LA213_0>=Target && LA213_0<=Await)||LA213_0==Class||(LA213_0>=False && LA213_0<=Super)||LA213_0==Union||(LA213_0>=Yield && LA213_0<=This)||(LA213_0>=From && LA213_0<=Void)||(LA213_0>=Get && LA213_0<=Set)||LA213_0==PlusSignPlusSign||LA213_0==HyphenMinusHyphenMinus||LA213_0==SolidusEqualsSign||LA213_0==As||LA213_0==Of||LA213_0==ExclamationMark||LA213_0==LeftParenthesis||(LA213_0>=Asterisk && LA213_0<=PlusSign)||LA213_0==HyphenMinus||LA213_0==Solidus||LA213_0==LessThanSign||(LA213_0>=CommercialAt && LA213_0<=LeftSquareBracket)||LA213_0==LeftCurlyBracket||LA213_0==Tilde||LA213_0==RULE_DOUBLE||(LA213_0>=RULE_HEX_INT && LA213_0<=RULE_LEGACY_OCTAL_INT)||LA213_0==RULE_SCIENTIFIC_INT||LA213_0==RULE_IDENTIFIER||LA213_0==RULE_STRING||(LA213_0>=RULE_TEMPLATE_HEAD && LA213_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA213_0==RULE_INT) ) {
                                        alt213=1;
                                    }
                                    switch (alt213) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_1_1_2_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_31_0=norm1_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_31_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            otherlv_32=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_32, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_0());
                                  
                            }
                            int alt215=2;
                            int LA215_0 = input.LA(1);

                            if ( ((LA215_0>=Intersection && LA215_0<=Implements)||(LA215_0>=Promisify && LA215_0<=Abstract)||(LA215_0>=External && LA215_0<=Function)||(LA215_0>=Private && LA215_0<=Delete)||LA215_0==Public||LA215_0==Static||(LA215_0>=Target && LA215_0<=Await)||LA215_0==Class||(LA215_0>=False && LA215_0<=Super)||LA215_0==Union||(LA215_0>=Yield && LA215_0<=This)||(LA215_0>=From && LA215_0<=Void)||(LA215_0>=Get && LA215_0<=Set)||LA215_0==PlusSignPlusSign||LA215_0==HyphenMinusHyphenMinus||LA215_0==SolidusEqualsSign||LA215_0==As||LA215_0==Of||LA215_0==ExclamationMark||LA215_0==LeftParenthesis||(LA215_0>=Asterisk && LA215_0<=PlusSign)||LA215_0==HyphenMinus||LA215_0==Solidus||LA215_0==LessThanSign||(LA215_0>=CommercialAt && LA215_0<=LeftSquareBracket)||LA215_0==LeftCurlyBracket||LA215_0==Tilde||LA215_0==RULE_DOUBLE||(LA215_0>=RULE_HEX_INT && LA215_0<=RULE_LEGACY_OCTAL_INT)||LA215_0==RULE_SCIENTIFIC_INT||LA215_0==RULE_IDENTIFIER||LA215_0==RULE_STRING||(LA215_0>=RULE_TEMPLATE_HEAD && LA215_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA215_0==RULE_INT) ) {
                                alt215=1;
                            }
                            switch (alt215) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_expression_33_0=norm1_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"expression",
                                              		lv_expression_33_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_34=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_34, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_2());
                                  
                            }
                            int alt216=2;
                            int LA216_0 = input.LA(1);

                            if ( ((LA216_0>=Intersection && LA216_0<=Implements)||(LA216_0>=Promisify && LA216_0<=Abstract)||(LA216_0>=External && LA216_0<=Function)||(LA216_0>=Private && LA216_0<=Delete)||LA216_0==Public||LA216_0==Static||(LA216_0>=Target && LA216_0<=Await)||LA216_0==Class||(LA216_0>=False && LA216_0<=Super)||LA216_0==Union||(LA216_0>=Yield && LA216_0<=This)||(LA216_0>=From && LA216_0<=Void)||(LA216_0>=Get && LA216_0<=Set)||LA216_0==PlusSignPlusSign||LA216_0==HyphenMinusHyphenMinus||LA216_0==SolidusEqualsSign||LA216_0==As||LA216_0==Of||LA216_0==ExclamationMark||LA216_0==LeftParenthesis||(LA216_0>=Asterisk && LA216_0<=PlusSign)||LA216_0==HyphenMinus||LA216_0==Solidus||LA216_0==LessThanSign||(LA216_0>=CommercialAt && LA216_0<=LeftSquareBracket)||LA216_0==LeftCurlyBracket||LA216_0==Tilde||LA216_0==RULE_DOUBLE||(LA216_0>=RULE_HEX_INT && LA216_0<=RULE_LEGACY_OCTAL_INT)||LA216_0==RULE_SCIENTIFIC_INT||LA216_0==RULE_IDENTIFIER||LA216_0==RULE_STRING||(LA216_0>=RULE_TEMPLATE_HEAD && LA216_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA216_0==RULE_INT) ) {
                                alt216=1;
                            }
                            switch (alt216) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_2_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_75);
                                    lv_updateExpr_35_0=norm1_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"updateExpr",
                                              		lv_updateExpr_35_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_36=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_37_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_37_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ForStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_forIn_4_0=null;
        Token otherlv_6=null;
        Token lv_forIn_9_0=null;
        Token lv_forOf_10_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token lv_forIn_19_0=null;
        Token lv_forOf_21_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token lv_forIn_28_0=null;
        Token lv_forOf_30_0=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        EObject lv_initExpr_3_0 = null;

        EObject lv_expression_5_0 = null;

        Enumerator lv_varStmtKeyword_7_0 = null;

        EObject lv_varDeclsOrBindings_8_0 = null;

        EObject lv_expression_11_0 = null;

        EObject lv_varDeclsOrBindings_12_0 = null;

        EObject lv_varDeclsOrBindings_14_0 = null;

        EObject lv_expression_16_0 = null;

        EObject lv_updateExpr_18_0 = null;

        EObject lv_expression_20_0 = null;

        EObject lv_expression_22_0 = null;

        EObject lv_initExpr_23_0 = null;

        EObject lv_expression_25_0 = null;

        EObject lv_updateExpr_27_0 = null;

        EObject lv_expression_29_0 = null;

        EObject lv_expression_31_0 = null;

        EObject lv_expression_33_0 = null;

        EObject lv_updateExpr_35_0 = null;

        EObject lv_statement_37_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getForStatementAccess().getForStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,For,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
                  
            }
            int alt236=2;
            alt236 = dfa236.predict(input);
            switch (alt236) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprLetIdentifierRefParserRuleCall_3_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_80);
                    lv_initExpr_3_0=ruleLetIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"initExpr",
                              		lv_initExpr_3_0, 
                              		"eu.numberfour.n4js.N4JS.LetIdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    lv_forIn_4_0=(Token)match(input,In,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_forIn_4_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_0_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getForStatementRule());
                      	        }
                             		setWithLastConsumed(current, "forIn", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_expression_5_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_0_0_3());
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt235=3;
                    alt235 = dfa235.predict(input);
                    switch (alt235) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getVarStmtKeywordVariableStatementKeywordEnumRuleCall_3_1_0_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_41);
                            lv_varStmtKeyword_7_0=ruleVariableStatementKeyword();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"varStmtKeyword",
                                      		lv_varStmtKeyword_7_0, 
                                      		"eu.numberfour.n4js.N4JS.VariableStatementKeyword");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt227=2;
                            alt227 = dfa227.predict(input);
                            switch (alt227) {
                                case 1 :
                                    {
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsBindingIdentifierAsVariableDeclarationParserRuleCall_3_1_0_0_1_0_0_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_81);
                                    lv_varDeclsOrBindings_8_0=norm2_BindingIdentifierAsVariableDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_8_0, 
                                              		"eu.numberfour.n4js.N4JS.BindingIdentifierAsVariableDeclaration");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt219=2;
                                    int LA219_0 = input.LA(1);

                                    if ( (LA219_0==In) ) {
                                        alt219=1;
                                    }
                                    else if ( (LA219_0==Of) ) {
                                        alt219=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 219, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt219) {
                                        case 1 :
                                            {
                                            {
                                            {
                                            lv_forIn_9_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_9_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_0_0_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            lv_forOf_10_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_10_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_0_0_1_1_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }
                                    int alt220=2;
                                    alt220 = dfa220.predict(input);
                                    switch (alt220) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_0_0_2_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_11_0=norm3_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_11_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_83);
                                    lv_varDeclsOrBindings_12_0=norm6_VariableDeclarationOrBinding();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		add(
                                             			current, 
                                             			"varDeclsOrBindings",
                                              		lv_varDeclsOrBindings_12_0, 
                                              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    int alt226=3;
                                    switch ( input.LA(1) ) {
                                    case Comma:
                                    case Semicolon:
                                        {
                                        alt226=1;
                                        }
                                        break;
                                    case In:
                                        {
                                        alt226=2;
                                        }
                                        break;
                                    case Of:
                                        {
                                        alt226=3;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 226, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt226) {
                                        case 1 :
                                            {
                                            {
                                            loop221:
                                            do {
                                                int alt221=2;
                                                int LA221_0 = input.LA(1);

                                                if ( (LA221_0==Comma) ) {
                                                    alt221=1;
                                                }


                                                switch (alt221) {
                                            	case 1 :
                                            	    {
                                            	    otherlv_13=(Token)match(input,Comma,FOLLOW_41); if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	          	newLeafNode(otherlv_13, grammarAccess.getForStatementAccess().getCommaKeyword_3_1_0_0_1_1_1_0_0_0());
                                            	          
                                            	    }
                                            	    {
                                            	    {
                                            	    if ( state.backtracking==0 ) {
                                            	       
                                            	      	        newCompositeNode(grammarAccess.getForStatementAccess().getVarDeclsOrBindingsVariableDeclarationOrBindingParserRuleCall_3_1_0_0_1_1_1_0_0_1_0()); 
                                            	      	    
                                            	    }
                                            	    pushFollow(FOLLOW_84);
                                            	    lv_varDeclsOrBindings_14_0=norm2_VariableDeclarationOrBinding();

                                            	    state._fsp--;
                                            	    if (state.failed) return current;
                                            	    if ( state.backtracking==0 ) {

                                            	      	        if (current==null) {
                                            	      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                            	      	        }
                                            	             		add(
                                            	             			current, 
                                            	             			"varDeclsOrBindings",
                                            	              		lv_varDeclsOrBindings_14_0, 
                                            	              		"eu.numberfour.n4js.N4JS.VariableDeclarationOrBinding");
                                            	      	        afterParserOrEnumRuleCall();
                                            	      	    
                                            	    }

                                            	    }


                                            	    }


                                            	    }
                                            	    break;

                                            	default :
                                            	    break loop221;
                                                }
                                            } while (true);

                                            otherlv_15=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_15, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_1());
                                                  
                                            }
                                            int alt222=2;
                                            int LA222_0 = input.LA(1);

                                            if ( ((LA222_0>=Intersection && LA222_0<=Implements)||(LA222_0>=Promisify && LA222_0<=Abstract)||(LA222_0>=External && LA222_0<=Function)||(LA222_0>=Private && LA222_0<=Delete)||LA222_0==Public||LA222_0==Static||(LA222_0>=Target && LA222_0<=Await)||LA222_0==Class||(LA222_0>=False && LA222_0<=Super)||LA222_0==Union||(LA222_0>=Yield && LA222_0<=This)||(LA222_0>=From && LA222_0<=Void)||(LA222_0>=Get && LA222_0<=Set)||LA222_0==PlusSignPlusSign||LA222_0==HyphenMinusHyphenMinus||LA222_0==SolidusEqualsSign||LA222_0==As||LA222_0==Of||LA222_0==ExclamationMark||LA222_0==LeftParenthesis||(LA222_0>=Asterisk && LA222_0<=PlusSign)||LA222_0==HyphenMinus||LA222_0==Solidus||LA222_0==LessThanSign||(LA222_0>=CommercialAt && LA222_0<=LeftSquareBracket)||LA222_0==LeftCurlyBracket||LA222_0==Tilde||LA222_0==RULE_DOUBLE||(LA222_0>=RULE_HEX_INT && LA222_0<=RULE_LEGACY_OCTAL_INT)||LA222_0==RULE_SCIENTIFIC_INT||LA222_0==RULE_IDENTIFIER||LA222_0==RULE_STRING||(LA222_0>=RULE_TEMPLATE_HEAD && LA222_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA222_0==RULE_INT) ) {
                                                alt222=1;
                                            }
                                            switch (alt222) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_0_2_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_86);
                                                    lv_expression_16_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_16_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }

                                            otherlv_17=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_17, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_0_1_1_1_0_3());
                                                  
                                            }
                                            int alt223=2;
                                            int LA223_0 = input.LA(1);

                                            if ( ((LA223_0>=Intersection && LA223_0<=Implements)||(LA223_0>=Promisify && LA223_0<=Abstract)||(LA223_0>=External && LA223_0<=Function)||(LA223_0>=Private && LA223_0<=Delete)||LA223_0==Public||LA223_0==Static||(LA223_0>=Target && LA223_0<=Await)||LA223_0==Class||(LA223_0>=False && LA223_0<=Super)||LA223_0==Union||(LA223_0>=Yield && LA223_0<=This)||(LA223_0>=From && LA223_0<=Void)||(LA223_0>=Get && LA223_0<=Set)||LA223_0==PlusSignPlusSign||LA223_0==HyphenMinusHyphenMinus||LA223_0==SolidusEqualsSign||LA223_0==As||LA223_0==Of||LA223_0==ExclamationMark||LA223_0==LeftParenthesis||(LA223_0>=Asterisk && LA223_0<=PlusSign)||LA223_0==HyphenMinus||LA223_0==Solidus||LA223_0==LessThanSign||(LA223_0>=CommercialAt && LA223_0<=LeftSquareBracket)||LA223_0==LeftCurlyBracket||LA223_0==Tilde||LA223_0==RULE_DOUBLE||(LA223_0>=RULE_HEX_INT && LA223_0<=RULE_LEGACY_OCTAL_INT)||LA223_0==RULE_SCIENTIFIC_INT||LA223_0==RULE_IDENTIFIER||LA223_0==RULE_STRING||(LA223_0>=RULE_TEMPLATE_HEAD && LA223_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA223_0==RULE_INT) ) {
                                                alt223=1;
                                            }
                                            switch (alt223) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_0_1_1_1_0_4_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_updateExpr_18_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"updateExpr",
                                                              		lv_updateExpr_18_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forIn_19_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forIn_19_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_0_1_1_1_1_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forIn", true, "in");
                                              	    
                                            }

                                            }


                                            }
                                            int alt224=2;
                                            int LA224_0 = input.LA(1);

                                            if ( ((LA224_0>=Intersection && LA224_0<=Implements)||(LA224_0>=Promisify && LA224_0<=Abstract)||(LA224_0>=External && LA224_0<=Function)||(LA224_0>=Private && LA224_0<=Delete)||LA224_0==Public||LA224_0==Static||(LA224_0>=Target && LA224_0<=Await)||LA224_0==Class||(LA224_0>=False && LA224_0<=Super)||LA224_0==Union||(LA224_0>=Yield && LA224_0<=This)||(LA224_0>=From && LA224_0<=Void)||(LA224_0>=Get && LA224_0<=Set)||LA224_0==PlusSignPlusSign||LA224_0==HyphenMinusHyphenMinus||LA224_0==SolidusEqualsSign||LA224_0==As||LA224_0==Of||LA224_0==ExclamationMark||LA224_0==LeftParenthesis||(LA224_0>=Asterisk && LA224_0<=PlusSign)||LA224_0==HyphenMinus||LA224_0==Solidus||LA224_0==LessThanSign||(LA224_0>=CommercialAt && LA224_0<=LeftSquareBracket)||LA224_0==LeftCurlyBracket||LA224_0==Tilde||LA224_0==RULE_DOUBLE||(LA224_0>=RULE_HEX_INT && LA224_0<=RULE_LEGACY_OCTAL_INT)||LA224_0==RULE_SCIENTIFIC_INT||LA224_0==RULE_IDENTIFIER||LA224_0==RULE_STRING||(LA224_0>=RULE_TEMPLATE_HEAD && LA224_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA224_0==RULE_INT) ) {
                                                alt224=1;
                                            }
                                            switch (alt224) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_0_1_1_1_1_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_20_0=norm3_Expression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_20_0, 
                                                              		"eu.numberfour.n4js.N4JS.Expression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;
                                        case 3 :
                                            {
                                            {
                                            {
                                            {
                                            lv_forOf_21_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                      newLeafNode(lv_forOf_21_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_0_1_1_1_2_0_0());
                                                  
                                            }
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElement(grammarAccess.getForStatementRule());
                                              	        }
                                                     		setWithLastConsumed(current, "forOf", true, "of");
                                              	    
                                            }

                                            }


                                            }
                                            int alt225=2;
                                            int LA225_0 = input.LA(1);

                                            if ( ((LA225_0>=Intersection && LA225_0<=Implements)||(LA225_0>=Promisify && LA225_0<=Abstract)||(LA225_0>=External && LA225_0<=Function)||(LA225_0>=Private && LA225_0<=Delete)||LA225_0==Public||LA225_0==Static||(LA225_0>=Target && LA225_0<=Await)||LA225_0==Class||(LA225_0>=False && LA225_0<=Super)||LA225_0==Union||(LA225_0>=Yield && LA225_0<=This)||(LA225_0>=From && LA225_0<=Void)||(LA225_0>=Get && LA225_0<=Set)||LA225_0==PlusSignPlusSign||LA225_0==HyphenMinusHyphenMinus||LA225_0==SolidusEqualsSign||LA225_0==As||LA225_0==Of||LA225_0==ExclamationMark||LA225_0==LeftParenthesis||(LA225_0>=Asterisk && LA225_0<=PlusSign)||LA225_0==HyphenMinus||LA225_0==Solidus||LA225_0==LessThanSign||(LA225_0>=CommercialAt && LA225_0<=LeftSquareBracket)||LA225_0==LeftCurlyBracket||LA225_0==Tilde||LA225_0==RULE_DOUBLE||(LA225_0>=RULE_HEX_INT && LA225_0<=RULE_LEGACY_OCTAL_INT)||LA225_0==RULE_SCIENTIFIC_INT||LA225_0==RULE_IDENTIFIER||LA225_0==RULE_STRING||(LA225_0>=RULE_TEMPLATE_HEAD && LA225_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA225_0==RULE_INT) ) {
                                                alt225=1;
                                            }
                                            switch (alt225) {
                                                case 1 :
                                                    {
                                                    {
                                                    if ( state.backtracking==0 ) {
                                                       
                                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_0_1_1_1_2_1_0()); 
                                                      	    
                                                    }
                                                    pushFollow(FOLLOW_75);
                                                    lv_expression_22_0=norm3_AssignmentExpression();

                                                    state._fsp--;
                                                    if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      	        if (current==null) {
                                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                                      	        }
                                                             		set(
                                                             			current, 
                                                             			"expression",
                                                              		lv_expression_22_0, 
                                                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                                      	        afterParserOrEnumRuleCall();
                                                      	    
                                                    }

                                                    }


                                                    }
                                                    break;

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getForStatementAccess().getInitExprExpressionParserRuleCall_3_1_0_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_87);
                            lv_initExpr_23_0=norm2_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"initExpr",
                                      		lv_initExpr_23_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt232=3;
                            switch ( input.LA(1) ) {
                            case Semicolon:
                                {
                                alt232=1;
                                }
                                break;
                            case In:
                                {
                                alt232=2;
                                }
                                break;
                            case Of:
                                {
                                alt232=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 232, 0, input);

                                throw nvae;
                            }

                            switch (alt232) {
                                case 1 :
                                    {
                                    {
                                    otherlv_24=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_24, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_0());
                                          
                                    }
                                    int alt228=2;
                                    int LA228_0 = input.LA(1);

                                    if ( ((LA228_0>=Intersection && LA228_0<=Implements)||(LA228_0>=Promisify && LA228_0<=Abstract)||(LA228_0>=External && LA228_0<=Function)||(LA228_0>=Private && LA228_0<=Delete)||LA228_0==Public||LA228_0==Static||(LA228_0>=Target && LA228_0<=Await)||LA228_0==Class||(LA228_0>=False && LA228_0<=Super)||LA228_0==Union||(LA228_0>=Yield && LA228_0<=This)||(LA228_0>=From && LA228_0<=Void)||(LA228_0>=Get && LA228_0<=Set)||LA228_0==PlusSignPlusSign||LA228_0==HyphenMinusHyphenMinus||LA228_0==SolidusEqualsSign||LA228_0==As||LA228_0==Of||LA228_0==ExclamationMark||LA228_0==LeftParenthesis||(LA228_0>=Asterisk && LA228_0<=PlusSign)||LA228_0==HyphenMinus||LA228_0==Solidus||LA228_0==LessThanSign||(LA228_0>=CommercialAt && LA228_0<=LeftSquareBracket)||LA228_0==LeftCurlyBracket||LA228_0==Tilde||LA228_0==RULE_DOUBLE||(LA228_0>=RULE_HEX_INT && LA228_0<=RULE_LEGACY_OCTAL_INT)||LA228_0==RULE_SCIENTIFIC_INT||LA228_0==RULE_IDENTIFIER||LA228_0==RULE_STRING||(LA228_0>=RULE_TEMPLATE_HEAD && LA228_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA228_0==RULE_INT) ) {
                                        alt228=1;
                                    }
                                    switch (alt228) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_0_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_86);
                                            lv_expression_25_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_25_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }

                                    otherlv_26=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_26, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_1_1_0_2());
                                          
                                    }
                                    int alt229=2;
                                    int LA229_0 = input.LA(1);

                                    if ( ((LA229_0>=Intersection && LA229_0<=Implements)||(LA229_0>=Promisify && LA229_0<=Abstract)||(LA229_0>=External && LA229_0<=Function)||(LA229_0>=Private && LA229_0<=Delete)||LA229_0==Public||LA229_0==Static||(LA229_0>=Target && LA229_0<=Await)||LA229_0==Class||(LA229_0>=False && LA229_0<=Super)||LA229_0==Union||(LA229_0>=Yield && LA229_0<=This)||(LA229_0>=From && LA229_0<=Void)||(LA229_0>=Get && LA229_0<=Set)||LA229_0==PlusSignPlusSign||LA229_0==HyphenMinusHyphenMinus||LA229_0==SolidusEqualsSign||LA229_0==As||LA229_0==Of||LA229_0==ExclamationMark||LA229_0==LeftParenthesis||(LA229_0>=Asterisk && LA229_0<=PlusSign)||LA229_0==HyphenMinus||LA229_0==Solidus||LA229_0==LessThanSign||(LA229_0>=CommercialAt && LA229_0<=LeftSquareBracket)||LA229_0==LeftCurlyBracket||LA229_0==Tilde||LA229_0==RULE_DOUBLE||(LA229_0>=RULE_HEX_INT && LA229_0<=RULE_LEGACY_OCTAL_INT)||LA229_0==RULE_SCIENTIFIC_INT||LA229_0==RULE_IDENTIFIER||LA229_0==RULE_STRING||(LA229_0>=RULE_TEMPLATE_HEAD && LA229_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA229_0==RULE_INT) ) {
                                        alt229=1;
                                    }
                                    switch (alt229) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_1_1_0_3_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_updateExpr_27_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"updateExpr",
                                                      		lv_updateExpr_27_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forIn_28_0=(Token)match(input,In,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forIn_28_0, grammarAccess.getForStatementAccess().getForInInKeyword_3_1_0_1_1_1_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forIn", true, "in");
                                      	    
                                    }

                                    }


                                    }
                                    int alt230=2;
                                    int LA230_0 = input.LA(1);

                                    if ( ((LA230_0>=Intersection && LA230_0<=Implements)||(LA230_0>=Promisify && LA230_0<=Abstract)||(LA230_0>=External && LA230_0<=Function)||(LA230_0>=Private && LA230_0<=Delete)||LA230_0==Public||LA230_0==Static||(LA230_0>=Target && LA230_0<=Await)||LA230_0==Class||(LA230_0>=False && LA230_0<=Super)||LA230_0==Union||(LA230_0>=Yield && LA230_0<=This)||(LA230_0>=From && LA230_0<=Void)||(LA230_0>=Get && LA230_0<=Set)||LA230_0==PlusSignPlusSign||LA230_0==HyphenMinusHyphenMinus||LA230_0==SolidusEqualsSign||LA230_0==As||LA230_0==Of||LA230_0==ExclamationMark||LA230_0==LeftParenthesis||(LA230_0>=Asterisk && LA230_0<=PlusSign)||LA230_0==HyphenMinus||LA230_0==Solidus||LA230_0==LessThanSign||(LA230_0>=CommercialAt && LA230_0<=LeftSquareBracket)||LA230_0==LeftCurlyBracket||LA230_0==Tilde||LA230_0==RULE_DOUBLE||(LA230_0>=RULE_HEX_INT && LA230_0<=RULE_LEGACY_OCTAL_INT)||LA230_0==RULE_SCIENTIFIC_INT||LA230_0==RULE_IDENTIFIER||LA230_0==RULE_STRING||(LA230_0>=RULE_TEMPLATE_HEAD && LA230_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA230_0==RULE_INT) ) {
                                        alt230=1;
                                    }
                                    switch (alt230) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_1_1_1_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_29_0=norm3_Expression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_29_0, 
                                                      		"eu.numberfour.n4js.N4JS.Expression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    {
                                    {
                                    {
                                    {
                                    lv_forOf_30_0=(Token)match(input,Of,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              newLeafNode(lv_forOf_30_0, grammarAccess.getForStatementAccess().getForOfOfKeyword_3_1_0_1_1_2_0_0());
                                          
                                    }
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElement(grammarAccess.getForStatementRule());
                                      	        }
                                             		setWithLastConsumed(current, "forOf", true, "of");
                                      	    
                                    }

                                    }


                                    }
                                    int alt231=2;
                                    int LA231_0 = input.LA(1);

                                    if ( ((LA231_0>=Intersection && LA231_0<=Implements)||(LA231_0>=Promisify && LA231_0<=Abstract)||(LA231_0>=External && LA231_0<=Function)||(LA231_0>=Private && LA231_0<=Delete)||LA231_0==Public||LA231_0==Static||(LA231_0>=Target && LA231_0<=Await)||LA231_0==Class||(LA231_0>=False && LA231_0<=Super)||LA231_0==Union||(LA231_0>=Yield && LA231_0<=This)||(LA231_0>=From && LA231_0<=Void)||(LA231_0>=Get && LA231_0<=Set)||LA231_0==PlusSignPlusSign||LA231_0==HyphenMinusHyphenMinus||LA231_0==SolidusEqualsSign||LA231_0==As||LA231_0==Of||LA231_0==ExclamationMark||LA231_0==LeftParenthesis||(LA231_0>=Asterisk && LA231_0<=PlusSign)||LA231_0==HyphenMinus||LA231_0==Solidus||LA231_0==LessThanSign||(LA231_0>=CommercialAt && LA231_0<=LeftSquareBracket)||LA231_0==LeftCurlyBracket||LA231_0==Tilde||LA231_0==RULE_DOUBLE||(LA231_0>=RULE_HEX_INT && LA231_0<=RULE_LEGACY_OCTAL_INT)||LA231_0==RULE_SCIENTIFIC_INT||LA231_0==RULE_IDENTIFIER||LA231_0==RULE_STRING||(LA231_0>=RULE_TEMPLATE_HEAD && LA231_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA231_0==RULE_INT) ) {
                                        alt231=1;
                                    }
                                    switch (alt231) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {
                                               
                                              	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0_1_1_2_1_0()); 
                                              	    
                                            }
                                            pushFollow(FOLLOW_75);
                                            lv_expression_31_0=norm3_AssignmentExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              	        if (current==null) {
                                              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                              	        }
                                                     		set(
                                                     			current, 
                                                     			"expression",
                                                      		lv_expression_31_0, 
                                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                                              	        afterParserOrEnumRuleCall();
                                              	    
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            otherlv_32=(Token)match(input,Semicolon,FOLLOW_85); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_32, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_0());
                                  
                            }
                            int alt233=2;
                            int LA233_0 = input.LA(1);

                            if ( ((LA233_0>=Intersection && LA233_0<=Implements)||(LA233_0>=Promisify && LA233_0<=Abstract)||(LA233_0>=External && LA233_0<=Function)||(LA233_0>=Private && LA233_0<=Delete)||LA233_0==Public||LA233_0==Static||(LA233_0>=Target && LA233_0<=Await)||LA233_0==Class||(LA233_0>=False && LA233_0<=Super)||LA233_0==Union||(LA233_0>=Yield && LA233_0<=This)||(LA233_0>=From && LA233_0<=Void)||(LA233_0>=Get && LA233_0<=Set)||LA233_0==PlusSignPlusSign||LA233_0==HyphenMinusHyphenMinus||LA233_0==SolidusEqualsSign||LA233_0==As||LA233_0==Of||LA233_0==ExclamationMark||LA233_0==LeftParenthesis||(LA233_0>=Asterisk && LA233_0<=PlusSign)||LA233_0==HyphenMinus||LA233_0==Solidus||LA233_0==LessThanSign||(LA233_0>=CommercialAt && LA233_0<=LeftSquareBracket)||LA233_0==LeftCurlyBracket||LA233_0==Tilde||LA233_0==RULE_DOUBLE||(LA233_0>=RULE_HEX_INT && LA233_0<=RULE_LEGACY_OCTAL_INT)||LA233_0==RULE_SCIENTIFIC_INT||LA233_0==RULE_IDENTIFIER||LA233_0==RULE_STRING||(LA233_0>=RULE_TEMPLATE_HEAD && LA233_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA233_0==RULE_INT) ) {
                                alt233=1;
                            }
                            switch (alt233) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getExpressionExpressionParserRuleCall_3_1_0_2_1_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_expression_33_0=norm3_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"expression",
                                              		lv_expression_33_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_34=(Token)match(input,Semicolon,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_34, grammarAccess.getForStatementAccess().getSemicolonKeyword_3_1_0_2_2());
                                  
                            }
                            int alt234=2;
                            int LA234_0 = input.LA(1);

                            if ( ((LA234_0>=Intersection && LA234_0<=Implements)||(LA234_0>=Promisify && LA234_0<=Abstract)||(LA234_0>=External && LA234_0<=Function)||(LA234_0>=Private && LA234_0<=Delete)||LA234_0==Public||LA234_0==Static||(LA234_0>=Target && LA234_0<=Await)||LA234_0==Class||(LA234_0>=False && LA234_0<=Super)||LA234_0==Union||(LA234_0>=Yield && LA234_0<=This)||(LA234_0>=From && LA234_0<=Void)||(LA234_0>=Get && LA234_0<=Set)||LA234_0==PlusSignPlusSign||LA234_0==HyphenMinusHyphenMinus||LA234_0==SolidusEqualsSign||LA234_0==As||LA234_0==Of||LA234_0==ExclamationMark||LA234_0==LeftParenthesis||(LA234_0>=Asterisk && LA234_0<=PlusSign)||LA234_0==HyphenMinus||LA234_0==Solidus||LA234_0==LessThanSign||(LA234_0>=CommercialAt && LA234_0<=LeftSquareBracket)||LA234_0==LeftCurlyBracket||LA234_0==Tilde||LA234_0==RULE_DOUBLE||(LA234_0>=RULE_HEX_INT && LA234_0<=RULE_LEGACY_OCTAL_INT)||LA234_0==RULE_SCIENTIFIC_INT||LA234_0==RULE_IDENTIFIER||LA234_0==RULE_STRING||(LA234_0>=RULE_TEMPLATE_HEAD && LA234_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA234_0==RULE_INT) ) {
                                alt234=1;
                            }
                            switch (alt234) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprExpressionParserRuleCall_3_1_0_2_3_0()); 
                                      	    
                                    }
                                    pushFollow(FOLLOW_75);
                                    lv_updateExpr_35_0=norm3_Expression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getForStatementRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"updateExpr",
                                              		lv_updateExpr_35_0, 
                                              		"eu.numberfour.n4js.N4JS.Expression");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    otherlv_36=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_36, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_1_1());
                          
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_37_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getForStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_37_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLetIdentifierRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetIdentifierRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetIdentifierRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetIdentifierRef=ruleLetIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetIdentifierRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLetIdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getLetIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLetIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleLetAsIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLetAsIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLetAsIdentifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetAsIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetAsIdentifier=ruleLetAsIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetAsIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLetAsIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLetAsIdentifierAccess().getLetKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingIdentifierAsVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifierAsVariableDeclaration=ruleBindingIdentifierAsVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifierAsVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsVariableDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BindingIdentifierAsVariableDeclaration() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getBindingIdentifierAsVariableDeclarationAccess().getNameBindingIdentifierParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getBindingIdentifierAsVariableDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleContinueStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContinueStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContinueStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContinueStatement=ruleContinueStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContinueStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Continue,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
                  
            }
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( ((LA237_0>=Intersection && LA237_0<=Implements)||(LA237_0>=Promisify && LA237_0<=Abstract)||LA237_0==External||(LA237_0>=Private && LA237_0<=Project)||LA237_0==Public||LA237_0==Static||LA237_0==Target||(LA237_0>=Async && LA237_0<=Await)||LA237_0==Union||(LA237_0>=Yield && LA237_0<=This)||LA237_0==From||LA237_0==Type||(LA237_0>=Get && LA237_0<=Let)||(LA237_0>=Out && LA237_0<=Set)||LA237_0==As||LA237_0==Of||LA237_0==RULE_IDENTIFIER) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getContinueStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getContinueStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getContinueStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ContinueStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getContinueStatementAccess().getContinueStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Continue,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContinueStatementAccess().getContinueKeyword_1());
                  
            }
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( ((LA238_0>=Intersection && LA238_0<=Implements)||(LA238_0>=Promisify && LA238_0<=Abstract)||LA238_0==External||(LA238_0>=Private && LA238_0<=Project)||LA238_0==Public||LA238_0==Static||LA238_0==Target||(LA238_0>=Async && LA238_0<=Await)||LA238_0==Union||LA238_0==This||LA238_0==From||LA238_0==Type||(LA238_0>=Get && LA238_0<=Let)||(LA238_0>=Out && LA238_0<=Set)||LA238_0==As||LA238_0==Of||LA238_0==RULE_IDENTIFIER) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getContinueStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getContinueStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getContinueStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBreakStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBreakStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBreakStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBreakStatement=ruleBreakStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBreakStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Break,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
                  
            }
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( ((LA239_0>=Intersection && LA239_0<=Implements)||(LA239_0>=Promisify && LA239_0<=Abstract)||LA239_0==External||(LA239_0>=Private && LA239_0<=Project)||LA239_0==Public||LA239_0==Static||LA239_0==Target||(LA239_0>=Async && LA239_0<=Await)||LA239_0==Union||(LA239_0>=Yield && LA239_0<=This)||LA239_0==From||LA239_0==Type||(LA239_0>=Get && LA239_0<=Let)||(LA239_0>=Out && LA239_0<=Set)||LA239_0==As||LA239_0==Of||LA239_0==RULE_IDENTIFIER) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getBreakStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBreakStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBreakStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BreakStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Break,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
                  
            }
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( ((LA240_0>=Intersection && LA240_0<=Implements)||(LA240_0>=Promisify && LA240_0<=Abstract)||LA240_0==External||(LA240_0>=Private && LA240_0<=Project)||LA240_0==Public||LA240_0==Static||LA240_0==Target||(LA240_0>=Async && LA240_0<=Await)||LA240_0==Union||LA240_0==This||LA240_0==From||LA240_0==Type||(LA240_0>=Get && LA240_0<=Let)||(LA240_0>=Out && LA240_0<=Set)||LA240_0==As||LA240_0==Of||LA240_0==RULE_IDENTIFIER) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getBreakStatementRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBreakStatementAccess().getLabelLabelledStatementCrossReference_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBreakStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleReturnStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturnStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReturnStatement=ruleReturnStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturnStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
                  
            }
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( ((LA241_0>=Intersection && LA241_0<=Implements)||(LA241_0>=Promisify && LA241_0<=Abstract)||(LA241_0>=External && LA241_0<=Function)||(LA241_0>=Private && LA241_0<=Delete)||LA241_0==Public||LA241_0==Static||(LA241_0>=Target && LA241_0<=Await)||LA241_0==Class||(LA241_0>=False && LA241_0<=Super)||LA241_0==Union||(LA241_0>=Yield && LA241_0<=This)||(LA241_0>=From && LA241_0<=Void)||(LA241_0>=Get && LA241_0<=Set)||LA241_0==PlusSignPlusSign||LA241_0==HyphenMinusHyphenMinus||LA241_0==SolidusEqualsSign||LA241_0==As||LA241_0==Of||LA241_0==ExclamationMark||LA241_0==LeftParenthesis||(LA241_0>=Asterisk && LA241_0<=PlusSign)||LA241_0==HyphenMinus||LA241_0==Solidus||LA241_0==LessThanSign||(LA241_0>=CommercialAt && LA241_0<=LeftSquareBracket)||LA241_0==LeftCurlyBracket||LA241_0==Tilde||LA241_0==RULE_DOUBLE||(LA241_0>=RULE_HEX_INT && LA241_0<=RULE_LEGACY_OCTAL_INT)||LA241_0==RULE_SCIENTIFIC_INT||LA241_0==RULE_IDENTIFIER||LA241_0==RULE_STRING||(LA241_0>=RULE_TEMPLATE_HEAD && LA241_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA241_0==RULE_INT) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_2_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getReturnStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ReturnStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Return,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
                  
            }
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( ((LA242_0>=Intersection && LA242_0<=Implements)||(LA242_0>=Promisify && LA242_0<=Abstract)||(LA242_0>=External && LA242_0<=Function)||(LA242_0>=Private && LA242_0<=Delete)||LA242_0==Public||LA242_0==Static||(LA242_0>=Target && LA242_0<=Await)||LA242_0==Class||(LA242_0>=False && LA242_0<=Super)||LA242_0==Union||(LA242_0>=Yield && LA242_0<=This)||(LA242_0>=From && LA242_0<=Void)||(LA242_0>=Get && LA242_0<=Set)||LA242_0==PlusSignPlusSign||LA242_0==HyphenMinusHyphenMinus||LA242_0==SolidusEqualsSign||LA242_0==As||LA242_0==Of||LA242_0==ExclamationMark||LA242_0==LeftParenthesis||(LA242_0>=Asterisk && LA242_0<=PlusSign)||LA242_0==HyphenMinus||LA242_0==Solidus||LA242_0==LessThanSign||(LA242_0>=CommercialAt && LA242_0<=LeftSquareBracket)||LA242_0==LeftCurlyBracket||LA242_0==Tilde||LA242_0==RULE_DOUBLE||(LA242_0>=RULE_HEX_INT && LA242_0<=RULE_LEGACY_OCTAL_INT)||LA242_0==RULE_SCIENTIFIC_INT||LA242_0==RULE_IDENTIFIER||LA242_0==RULE_STRING||(LA242_0>=RULE_TEMPLATE_HEAD && LA242_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA242_0==RULE_INT) ) {
                alt242=1;
            }
            switch (alt242) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_2_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReturnStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_2_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getReturnStatementAccess().getSemiParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWithStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWithStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWithStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWithStatement=ruleWithStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWithStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWithStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,With,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_WithStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expression_2_0 = null;

        EObject lv_statement_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,With,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWithStatementAccess().getWithKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWithStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getWithStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getWithStatementAccess().getStatementStatementParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_4_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getWithStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_4_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSwitchStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitchStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchStatement=ruleSwitchStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSwitchStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        EObject lv_expression_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_cases_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            loop243:
            do {
                int alt243=2;
                int LA243_0 = input.LA(1);

                if ( (LA243_0==Case) ) {
                    alt243=1;
                }


                switch (alt243) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_cases_5_0=ruleCaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"eu.numberfour.n4js.N4JS.CaseClause");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop243;
                }
            } while (true);
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==Default) ) {
                alt245=1;
            }
            switch (alt245) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesDefaultClauseParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_cases_6_0=ruleDefaultClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                      	        }
                             		add(
                             			current, 
                             			"cases",
                              		lv_cases_6_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultClause");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==Case) ) {
                            alt244=1;
                        }


                        switch (alt244) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_cases_7_0=ruleCaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"cases",
                    	              		lv_cases_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.CaseClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop244;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_SwitchStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        EObject lv_expression_2_0 = null;

        EObject lv_cases_5_0 = null;

        EObject lv_cases_6_0 = null;

        EObject lv_cases_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Switch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_2_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==Case) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_cases_5_0=norm1_CaseClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"cases",
            	              		lv_cases_5_0, 
            	              		"eu.numberfour.n4js.N4JS.CaseClause");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==Default) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesDefaultClauseParserRuleCall_6_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_cases_6_0=norm1_DefaultClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                      	        }
                             		add(
                             			current, 
                             			"cases",
                              		lv_cases_6_0, 
                              		"eu.numberfour.n4js.N4JS.DefaultClause");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop247:
                    do {
                        int alt247=2;
                        int LA247_0 = input.LA(1);

                        if ( (LA247_0==Case) ) {
                            alt247=1;
                        }


                        switch (alt247) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getCasesCaseClauseParserRuleCall_6_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_cases_7_0=norm1_CaseClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"cases",
                    	              		lv_cases_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.CaseClause");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop247;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCaseClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseClause=ruleCaseClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Case,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseClauseAccess().getCaseKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseClauseAccess().getColonKeyword_2());
                  
            }
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( ((LA249_0>=Intersection && LA249_0<=Implements)||(LA249_0>=Promisify && LA249_0<=Function)||(LA249_0>=Private && LA249_0<=Delete)||(LA249_0>=Public && LA249_0<=Break)||(LA249_0>=Class && LA249_0<=This)||(LA249_0>=From && LA249_0<=With)||(LA249_0>=For && LA249_0<=Var)||LA249_0==PlusSignPlusSign||LA249_0==HyphenMinusHyphenMinus||LA249_0==SolidusEqualsSign||(LA249_0>=As && LA249_0<=If)||LA249_0==Of||LA249_0==ExclamationMark||LA249_0==LeftParenthesis||(LA249_0>=Asterisk && LA249_0<=PlusSign)||LA249_0==HyphenMinus||LA249_0==Solidus||(LA249_0>=Semicolon && LA249_0<=LessThanSign)||(LA249_0>=CommercialAt && LA249_0<=LeftSquareBracket)||LA249_0==LeftCurlyBracket||LA249_0==Tilde||LA249_0==RULE_DOUBLE||(LA249_0>=RULE_HEX_INT && LA249_0<=RULE_LEGACY_OCTAL_INT)||LA249_0==RULE_SCIENTIFIC_INT||LA249_0==RULE_IDENTIFIER||LA249_0==RULE_STRING||(LA249_0>=RULE_TEMPLATE_HEAD && LA249_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA249_0==RULE_INT) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CaseClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;

        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Case,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getCaseClauseAccess().getCaseKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseClauseAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCaseClauseAccess().getColonKeyword_2());
                  
            }
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( ((LA250_0>=Intersection && LA250_0<=Implements)||(LA250_0>=Promisify && LA250_0<=Function)||(LA250_0>=Private && LA250_0<=Delete)||(LA250_0>=Public && LA250_0<=Break)||(LA250_0>=Class && LA250_0<=This)||(LA250_0>=From && LA250_0<=With)||(LA250_0>=For && LA250_0<=Var)||LA250_0==PlusSignPlusSign||LA250_0==HyphenMinusHyphenMinus||LA250_0==SolidusEqualsSign||(LA250_0>=As && LA250_0<=If)||LA250_0==Of||LA250_0==ExclamationMark||LA250_0==LeftParenthesis||(LA250_0>=Asterisk && LA250_0<=PlusSign)||LA250_0==HyphenMinus||LA250_0==Solidus||(LA250_0>=Semicolon && LA250_0<=LessThanSign)||(LA250_0>=CommercialAt && LA250_0<=LeftSquareBracket)||LA250_0==LeftCurlyBracket||LA250_0==Tilde||LA250_0==RULE_DOUBLE||(LA250_0>=RULE_HEX_INT && LA250_0<=RULE_LEGACY_OCTAL_INT)||LA250_0==RULE_SCIENTIFIC_INT||LA250_0==RULE_IDENTIFIER||LA250_0==RULE_STRING||(LA250_0>=RULE_TEMPLATE_HEAD && LA250_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA250_0==RULE_INT) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDefaultClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefaultClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefaultClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefaultClause=ruleDefaultClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefaultClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDefaultClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDefaultClauseAccess().getDefaultClauseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Default,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDefaultClauseAccess().getDefaultKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDefaultClauseAccess().getColonKeyword_2());
                  
            }
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( ((LA251_0>=Intersection && LA251_0<=Implements)||(LA251_0>=Promisify && LA251_0<=Function)||(LA251_0>=Private && LA251_0<=Delete)||(LA251_0>=Public && LA251_0<=Break)||(LA251_0>=Class && LA251_0<=This)||(LA251_0>=From && LA251_0<=With)||(LA251_0>=For && LA251_0<=Var)||LA251_0==PlusSignPlusSign||LA251_0==HyphenMinusHyphenMinus||LA251_0==SolidusEqualsSign||(LA251_0>=As && LA251_0<=If)||LA251_0==Of||LA251_0==ExclamationMark||LA251_0==LeftParenthesis||(LA251_0>=Asterisk && LA251_0<=PlusSign)||LA251_0==HyphenMinus||LA251_0==Solidus||(LA251_0>=Semicolon && LA251_0<=LessThanSign)||(LA251_0>=CommercialAt && LA251_0<=LeftSquareBracket)||LA251_0==LeftCurlyBracket||LA251_0==Tilde||LA251_0==RULE_DOUBLE||(LA251_0>=RULE_HEX_INT && LA251_0<=RULE_LEGACY_OCTAL_INT)||LA251_0==RULE_SCIENTIFIC_INT||LA251_0==RULE_IDENTIFIER||LA251_0==RULE_STRING||(LA251_0>=RULE_TEMPLATE_HEAD && LA251_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA251_0==RULE_INT) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDefaultClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDefaultClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_DefaultClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_statements_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDefaultClauseAccess().getDefaultClauseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Default,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDefaultClauseAccess().getDefaultKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Colon,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getDefaultClauseAccess().getColonKeyword_2());
                  
            }
            loop252:
            do {
                int alt252=2;
                int LA252_0 = input.LA(1);

                if ( ((LA252_0>=Intersection && LA252_0<=Implements)||(LA252_0>=Promisify && LA252_0<=Function)||(LA252_0>=Private && LA252_0<=Delete)||(LA252_0>=Public && LA252_0<=Break)||(LA252_0>=Class && LA252_0<=This)||(LA252_0>=From && LA252_0<=With)||(LA252_0>=For && LA252_0<=Var)||LA252_0==PlusSignPlusSign||LA252_0==HyphenMinusHyphenMinus||LA252_0==SolidusEqualsSign||(LA252_0>=As && LA252_0<=If)||LA252_0==Of||LA252_0==ExclamationMark||LA252_0==LeftParenthesis||(LA252_0>=Asterisk && LA252_0<=PlusSign)||LA252_0==HyphenMinus||LA252_0==Solidus||(LA252_0>=Semicolon && LA252_0<=LessThanSign)||(LA252_0>=CommercialAt && LA252_0<=LeftSquareBracket)||LA252_0==LeftCurlyBracket||LA252_0==Tilde||LA252_0==RULE_DOUBLE||(LA252_0>=RULE_HEX_INT && LA252_0<=RULE_LEGACY_OCTAL_INT)||LA252_0==RULE_SCIENTIFIC_INT||LA252_0==RULE_IDENTIFIER||LA252_0==RULE_STRING||(LA252_0>=RULE_TEMPLATE_HEAD && LA252_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA252_0==RULE_INT) ) {
                    alt252=1;
                }


                switch (alt252) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDefaultClauseAccess().getStatementsStatementParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_statements_3_0=norm1_Statement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDefaultClauseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"statements",
            	              		lv_statements_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Statement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop252;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLabelledStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabelledStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelledStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLabelledStatement=ruleLabelledStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabelledStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLabelledStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_statement_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getNameBindingIdentifierParserRuleCall_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_name_0_0=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelledStatementAccess().getColonKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_2_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LabelledStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_statement_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getNameBindingIdentifierParserRuleCall_0_0_0_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_name_0_0=norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,Colon,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLabelledStatementAccess().getColonKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLabelledStatementAccess().getStatementStatementParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_statement_2_0=norm1_Statement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLabelledStatementRule());
              	        }
                     		set(
                     			current, 
                     			"statement",
                      		lv_statement_2_0, 
                      		"eu.numberfour.n4js.N4JS.Statement");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThrowStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThrowStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThrowStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThrowStatement=ruleThrowStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThrowStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Throw,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThrowStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getThrowStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ThrowStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Throw,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getThrowStatementAccess().getThrowKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThrowStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_32);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThrowStatementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getThrowStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTryStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTryStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTryStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTryStatement=ruleTryStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTryStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTryStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_2_0 = null;

        EObject lv_finally_3_0 = null;

        EObject lv_finally_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Try,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTryStatementAccess().getTryKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_93);
            lv_block_1_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_1_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==Catch) ) {
                alt254=1;
            }
            else if ( (LA254_0==Finally) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }
            switch (alt254) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchCatchBlockParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_94);
                    lv_catch_2_0=ruleCatchBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"catch",
                              		lv_catch_2_0, 
                              		"eu.numberfour.n4js.N4JS.CatchBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt253=2;
                    int LA253_0 = input.LA(1);

                    if ( (LA253_0==Finally) ) {
                        alt253=1;
                    }
                    switch (alt253) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finally_3_0=ruleFinallyBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_3_0, 
                                      		"eu.numberfour.n4js.N4JS.FinallyBlock");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finally_4_0=ruleFinallyBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_4_0, 
                              		"eu.numberfour.n4js.N4JS.FinallyBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_TryStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_2_0 = null;

        EObject lv_finally_3_0 = null;

        EObject lv_finally_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,Try,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTryStatementAccess().getTryKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTryStatementAccess().getBlockBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_93);
            lv_block_1_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_1_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==Catch) ) {
                alt256=1;
            }
            else if ( (LA256_0==Finally) ) {
                alt256=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;
            }
            switch (alt256) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getCatchCatchBlockParserRuleCall_2_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_94);
                    lv_catch_2_0=norm1_CatchBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"catch",
                              		lv_catch_2_0, 
                              		"eu.numberfour.n4js.N4JS.CatchBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt255=2;
                    int LA255_0 = input.LA(1);

                    if ( (LA255_0==Finally) ) {
                        alt255=1;
                    }
                    switch (alt255) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_finally_3_0=norm1_FinallyBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"finally",
                                      		lv_finally_3_0, 
                                      		"eu.numberfour.n4js.N4JS.FinallyBlock");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyFinallyBlockParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_finally_4_0=norm1_FinallyBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTryStatementRule());
                      	        }
                             		set(
                             			current, 
                             			"finally",
                              		lv_finally_4_0, 
                              		"eu.numberfour.n4js.N4JS.FinallyBlock");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCatchBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCatchBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCatchBlock=ruleCatchBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCatchBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCatchBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_catchVariable_3_0 = null;

        EObject lv_block_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCatchBlockAccess().getCatchBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Catch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCatchBlockAccess().getCatchKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getCatchVariableCatchVariableParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_catchVariable_3_0=ruleCatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"catchVariable",
                      		lv_catchVariable_3_0, 
                      		"eu.numberfour.n4js.N4JS.CatchVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getBlockBlockParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_5_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CatchBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_catchVariable_3_0 = null;

        EObject lv_block_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCatchBlockAccess().getCatchBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Catch,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCatchBlockAccess().getCatchKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftParenthesis,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getCatchBlockAccess().getLeftParenthesisKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getCatchVariableCatchVariableParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_catchVariable_3_0=norm1_CatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"catchVariable",
                      		lv_catchVariable_3_0, 
                      		"eu.numberfour.n4js.N4JS.CatchVariable");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getCatchBlockAccess().getRightParenthesisKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCatchBlockAccess().getBlockBlockParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCatchBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_5_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCatchVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCatchVariable = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCatchVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCatchVariable=ruleCatchVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCatchVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCatchVariable() throws RecognitionException {
        EObject current = null;

        EObject lv_bindingPattern_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt258=3;
            alt258 = dfa258.predict(input);
            switch (alt258) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getBindingPatternBindingPatternParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_bindingPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getCatchVariableRule());
                      		}
                              newCompositeNode(grammarAccess.getCatchVariableAccess().getColonSepTypeRefParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt257=2;
                    alt257 = dfa257.predict(input);
                    switch (alt257) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getCatchVariableRule());
                              		}
                                      newCompositeNode(grammarAccess.getCatchVariableAccess().getBogusTypeRefFragmentParserRuleCall_2_0()); 
                                  
                            }
                            pushFollow(FOLLOW_5);
                            this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_3;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CatchVariable() throws RecognitionException {
        EObject current = null;

        EObject lv_bindingPattern_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject this_ColonSepTypeRef_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt260=3;
            alt260 = dfa260.predict(input);
            switch (alt260) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getBindingPatternBindingPatternParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_bindingPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"bindingPattern",
                              		lv_bindingPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_1_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_name_1_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getCatchVariableRule());
                      		}
                              newCompositeNode(grammarAccess.getCatchVariableAccess().getColonSepTypeRefParserRuleCall_1_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_2=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    int alt259=2;
                    alt259 = dfa259.predict(input);
                    switch (alt259) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getCatchVariableRule());
                              		}
                                      newCompositeNode(grammarAccess.getCatchVariableAccess().getBogusTypeRefFragmentParserRuleCall_2_0()); 
                                  
                            }
                            pushFollow(FOLLOW_5);
                            this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_3;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCatchVariableAccess().getNameBindingIdentifierParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_4_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCatchVariableRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFinallyBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFinallyBlock = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFinallyBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFinallyBlock=ruleFinallyBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFinallyBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFinallyBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_block_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFinallyBlockAccess().getFinallyBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Finally,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinallyBlockAccess().getFinallyKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinallyBlockAccess().getBlockBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinallyBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FinallyBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_block_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFinallyBlockAccess().getFinallyBlockAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Finally,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinallyBlockAccess().getFinallyKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinallyBlockAccess().getBlockBlockParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_block_2_0=norm1_Block();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinallyBlockRule());
              	        }
                     		set(
                     			current, 
                     			"block",
                      		lv_block_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDebuggerStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDebuggerStatement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDebuggerStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDebuggerStatement=ruleDebuggerStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDebuggerStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDebuggerStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDebuggerStatementAccess().getDebuggerStatementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Debugger,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDebuggerStatementAccess().getDebuggerKeyword_1());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getDebuggerStatementAccess().getSemiParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParenExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParenExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParenExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParenExpression=ruleParenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParenExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParenExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParenExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParenExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParenExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParenExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParenExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_expression_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParenExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getParenExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIdentifierRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentifierRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierRef=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IdentifierRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIdentifierRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIdentifierRefAccess().getIdIdentifiableElementCrossReference_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            norm1_BindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSuperLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSuperLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSuperLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSuperLiteral=ruleSuperLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSuperLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSuperLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSuperLiteralAccess().getSuperLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSuperLiteralAccess().getSuperKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisLiteral=ruleThisLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getThisLiteralAccess().getThisLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisLiteralAccess().getThisKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayLiteral=ruleArrayLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_trailingComma_7_0=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop261:
            do {
                int alt261=2;
                int LA261_0 = input.LA(1);

                if ( (LA261_0==Comma) ) {
                    alt261=1;
                }


                switch (alt261) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_elements_2_0=ruleArrayPadding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop261;
                }
            } while (true);
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( ((LA266_0>=Intersection && LA266_0<=Implements)||(LA266_0>=Promisify && LA266_0<=Abstract)||(LA266_0>=External && LA266_0<=Function)||(LA266_0>=Private && LA266_0<=Delete)||LA266_0==Public||LA266_0==Static||(LA266_0>=Target && LA266_0<=Await)||LA266_0==Class||(LA266_0>=False && LA266_0<=Super)||LA266_0==Union||(LA266_0>=Yield && LA266_0<=This)||(LA266_0>=From && LA266_0<=Void)||LA266_0==FullStopFullStopFullStop||(LA266_0>=Get && LA266_0<=Set)||LA266_0==PlusSignPlusSign||LA266_0==HyphenMinusHyphenMinus||LA266_0==SolidusEqualsSign||LA266_0==As||LA266_0==Of||LA266_0==ExclamationMark||LA266_0==LeftParenthesis||(LA266_0>=Asterisk && LA266_0<=PlusSign)||LA266_0==HyphenMinus||LA266_0==Solidus||LA266_0==LessThanSign||(LA266_0>=CommercialAt && LA266_0<=LeftSquareBracket)||LA266_0==LeftCurlyBracket||LA266_0==Tilde||LA266_0==RULE_DOUBLE||(LA266_0>=RULE_HEX_INT && LA266_0<=RULE_LEGACY_OCTAL_INT)||LA266_0==RULE_SCIENTIFIC_INT||LA266_0==RULE_IDENTIFIER||LA266_0==RULE_STRING||(LA266_0>=RULE_TEMPLATE_HEAD && LA266_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA266_0==RULE_INT) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=ruleArrayElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.ArrayElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop263:
                    do {
                        int alt263=2;
                        alt263 = dfa263.predict(input);
                        switch (alt263) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_98); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop262:
                    	    do {
                    	        int alt262=2;
                    	        int LA262_0 = input.LA(1);

                    	        if ( (LA262_0==Comma) ) {
                    	            alt262=1;
                    	        }


                    	        switch (alt262) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_98);
                    	    	    lv_elements_5_0=ruleArrayPadding();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop262;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=ruleArrayElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.ArrayElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);
                    int alt265=2;
                    int LA265_0 = input.LA(1);

                    if ( (LA265_0==Comma) ) {
                        alt265=1;
                    }
                    switch (alt265) {
                        case 1 :
                            {
                            {
                            {
                            lv_trailingComma_7_0=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_trailingComma_7_0, grammarAccess.getArrayLiteralAccess().getTrailingCommaCommaKeyword_3_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArrayLiteralRule());
                              	        }
                                     		setWithLastConsumed(current, "trailingComma", true, ",");
                              	    
                            }

                            }


                            }
                            loop264:
                            do {
                                int alt264=2;
                                int LA264_0 = input.LA(1);

                                if ( (LA264_0==Comma) ) {
                                    alt264=1;
                                }


                                switch (alt264) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleArrayPadding();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop264;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token lv_trailingComma_7_0=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayLiteralAccess().getArrayLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_96); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayLiteralAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop267:
            do {
                int alt267=2;
                int LA267_0 = input.LA(1);

                if ( (LA267_0==Comma) ) {
                    alt267=1;
                }


                switch (alt267) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_elements_2_0=ruleArrayPadding();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop267;
                }
            } while (true);
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( ((LA272_0>=Intersection && LA272_0<=Implements)||(LA272_0>=Promisify && LA272_0<=Abstract)||(LA272_0>=External && LA272_0<=Function)||(LA272_0>=Private && LA272_0<=Delete)||LA272_0==Public||LA272_0==Static||(LA272_0>=Target && LA272_0<=Await)||LA272_0==Class||(LA272_0>=False && LA272_0<=Super)||LA272_0==Union||(LA272_0>=Yield && LA272_0<=This)||(LA272_0>=From && LA272_0<=Void)||LA272_0==FullStopFullStopFullStop||(LA272_0>=Get && LA272_0<=Set)||LA272_0==PlusSignPlusSign||LA272_0==HyphenMinusHyphenMinus||LA272_0==SolidusEqualsSign||LA272_0==As||LA272_0==Of||LA272_0==ExclamationMark||LA272_0==LeftParenthesis||(LA272_0>=Asterisk && LA272_0<=PlusSign)||LA272_0==HyphenMinus||LA272_0==Solidus||LA272_0==LessThanSign||(LA272_0>=CommercialAt && LA272_0<=LeftSquareBracket)||LA272_0==LeftCurlyBracket||LA272_0==Tilde||LA272_0==RULE_DOUBLE||(LA272_0>=RULE_HEX_INT && LA272_0<=RULE_LEGACY_OCTAL_INT)||LA272_0==RULE_SCIENTIFIC_INT||LA272_0==RULE_IDENTIFIER||LA272_0==RULE_STRING||(LA272_0>=RULE_TEMPLATE_HEAD && LA272_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA272_0==RULE_INT) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=norm1_ArrayElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.ArrayElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop269:
                    do {
                        int alt269=2;
                        alt269 = dfa269.predict(input);
                        switch (alt269) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_98); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop268:
                    	    do {
                    	        int alt268=2;
                    	        int LA268_0 = input.LA(1);

                    	        if ( (LA268_0==Comma) ) {
                    	            alt268=1;
                    	        }


                    	        switch (alt268) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_98);
                    	    	    lv_elements_5_0=ruleArrayPadding();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop268;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=norm1_ArrayElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.ArrayElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop269;
                        }
                    } while (true);
                    int alt271=2;
                    int LA271_0 = input.LA(1);

                    if ( (LA271_0==Comma) ) {
                        alt271=1;
                    }
                    switch (alt271) {
                        case 1 :
                            {
                            {
                            {
                            lv_trailingComma_7_0=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_trailingComma_7_0, grammarAccess.getArrayLiteralAccess().getTrailingCommaCommaKeyword_3_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getArrayLiteralRule());
                              	        }
                                     		setWithLastConsumed(current, "trailingComma", true, ",");
                              	    
                            }

                            }


                            }
                            loop270:
                            do {
                                int alt270=2;
                                int LA270_0 = input.LA(1);

                                if ( (LA270_0==Comma) ) {
                                    alt270=1;
                                }


                                switch (alt270) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayLiteralAccess().getElementsArrayPaddingParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleArrayPadding();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.ArrayPadding");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop270;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayPadding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayPadding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayPaddingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayPadding=ruleArrayPadding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayPadding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayPadding() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayPaddingAccess().getArrayPaddingAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayPaddingAccess().getCommaKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayElement=ruleArrayElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayElement() throws RecognitionException {
        EObject current = null;

        Token lv_spread_1_0=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayElementAccess().getArrayElementAction_0(),
                          current);
                  
            }

            }
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==FullStopFullStopFullStop) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    {
                    {
                    lv_spread_1_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_1_0, grammarAccess.getArrayElementAccess().getSpreadFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrayElementRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayElementAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayElementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayElement() throws RecognitionException {
        EObject current = null;

        Token lv_spread_1_0=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayElementAccess().getArrayElementAction_0(),
                          current);
                  
            }

            }
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==FullStopFullStopFullStop) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    {
                    {
                    lv_spread_1_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_1_0, grammarAccess.getArrayElementAccess().getSpreadFullStopFullStopFullStopKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArrayElementRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayElementAccess().getExpressionAssignmentExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayElementRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleObjectLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectLiteral=ruleObjectLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleObjectLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_propertyAssignments_2_0 = null;

        EObject lv_propertyAssignments_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( ((LA277_0>=Intersection && LA277_0<=With)||(LA277_0>=For && LA277_0<=Var)||(LA277_0>=As && LA277_0<=Of)||LA277_0==LeftParenthesis||LA277_0==Asterisk||LA277_0==LessThanSign||(LA277_0>=QuestionMark && LA277_0<=LeftSquareBracket)||LA277_0==LeftCurlyBracket||LA277_0==Tilde||LA277_0==RULE_DOUBLE||LA277_0==RULE_HEX_INT||LA277_0==RULE_OCTAL_INT||LA277_0==RULE_SCIENTIFIC_INT||LA277_0==RULE_IDENTIFIER||LA277_0==RULE_STRING||LA277_0==RULE_INT) ) {
                alt277=1;
            }
            switch (alt277) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_propertyAssignments_2_0=rulePropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"propertyAssignments",
                              		lv_propertyAssignments_2_0, 
                              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop275:
                    do {
                        int alt275=2;
                        int LA275_0 = input.LA(1);

                        if ( (LA275_0==Comma) ) {
                            int LA275_1 = input.LA(2);

                            if ( ((LA275_1>=Intersection && LA275_1<=With)||(LA275_1>=For && LA275_1<=Var)||(LA275_1>=As && LA275_1<=Of)||LA275_1==LeftParenthesis||LA275_1==Asterisk||LA275_1==LessThanSign||(LA275_1>=QuestionMark && LA275_1<=LeftSquareBracket)||LA275_1==LeftCurlyBracket||LA275_1==Tilde||LA275_1==RULE_DOUBLE||LA275_1==RULE_HEX_INT||LA275_1==RULE_OCTAL_INT||LA275_1==RULE_SCIENTIFIC_INT||LA275_1==RULE_IDENTIFIER||LA275_1==RULE_STRING||LA275_1==RULE_INT) ) {
                                alt275=1;
                            }


                        }


                        switch (alt275) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_propertyAssignments_4_0=rulePropertyAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"propertyAssignments",
                    	              		lv_propertyAssignments_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop275;
                        }
                    } while (true);
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==Comma) ) {
                        alt276=1;
                    }
                    switch (alt276) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Comma,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ObjectLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_propertyAssignments_2_0 = null;

        EObject lv_propertyAssignments_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectLiteralAccess().getObjectLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( ((LA280_0>=Intersection && LA280_0<=With)||(LA280_0>=For && LA280_0<=Var)||(LA280_0>=As && LA280_0<=Of)||LA280_0==LeftParenthesis||LA280_0==Asterisk||LA280_0==LessThanSign||(LA280_0>=QuestionMark && LA280_0<=LeftSquareBracket)||LA280_0==LeftCurlyBracket||LA280_0==Tilde||LA280_0==RULE_DOUBLE||LA280_0==RULE_HEX_INT||LA280_0==RULE_OCTAL_INT||LA280_0==RULE_SCIENTIFIC_INT||LA280_0==RULE_IDENTIFIER||LA280_0==RULE_STRING||LA280_0==RULE_INT) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_propertyAssignments_2_0=norm1_PropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"propertyAssignments",
                              		lv_propertyAssignments_2_0, 
                              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop278:
                    do {
                        int alt278=2;
                        int LA278_0 = input.LA(1);

                        if ( (LA278_0==Comma) ) {
                            int LA278_1 = input.LA(2);

                            if ( ((LA278_1>=Intersection && LA278_1<=With)||(LA278_1>=For && LA278_1<=Var)||(LA278_1>=As && LA278_1<=Of)||LA278_1==LeftParenthesis||LA278_1==Asterisk||LA278_1==LessThanSign||(LA278_1>=QuestionMark && LA278_1<=LeftSquareBracket)||LA278_1==LeftCurlyBracket||LA278_1==Tilde||LA278_1==RULE_DOUBLE||LA278_1==RULE_HEX_INT||LA278_1==RULE_OCTAL_INT||LA278_1==RULE_SCIENTIFIC_INT||LA278_1==RULE_IDENTIFIER||LA278_1==RULE_STRING||LA278_1==RULE_INT) ) {
                                alt278=1;
                            }


                        }


                        switch (alt278) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectLiteralAccess().getPropertyAssignmentsPropertyAssignmentParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_propertyAssignments_4_0=norm1_PropertyAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"propertyAssignments",
                    	              		lv_propertyAssignments_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.PropertyAssignment");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop278;
                        }
                    } while (true);
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==Comma) ) {
                        alt279=1;
                    }
                    switch (alt279) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Comma,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_2());
                                  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyAssignment=rulePropertyAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedPropertyAssignment_0 = null;

        EObject this_PropertyNameValuePair_1 = null;

        EObject this_PropertyGetterDeclaration_2 = null;

        EObject this_PropertySetterDeclaration_3 = null;

        EObject this_PropertyMethodDeclaration_4 = null;

        EObject this_PropertyNameValuePairSingleName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt281=6;
            alt281 = dfa281.predict(input);
            switch (alt281) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getAnnotatedPropertyAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedPropertyAssignment_0=ruleAnnotatedPropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedPropertyAssignment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePair_1=rulePropertyNameValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePair_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyGetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyGetterDeclaration_2=rulePropertyGetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyGetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertySetterDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertySetterDeclaration_3=rulePropertySetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertySetterDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyMethodDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyMethodDeclaration_4=rulePropertyMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyMethodDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairSingleNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePairSingleName_5=rulePropertyNameValuePairSingleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePairSingleName_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedPropertyAssignment_0 = null;

        EObject this_PropertyNameValuePair_1 = null;

        EObject this_PropertyGetterDeclaration_2 = null;

        EObject this_PropertySetterDeclaration_3 = null;

        EObject this_PropertyMethodDeclaration_4 = null;

        EObject this_PropertyNameValuePairSingleName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt282=6;
            alt282 = dfa282.predict(input);
            switch (alt282) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getAnnotatedPropertyAssignmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedPropertyAssignment_0=norm1_AnnotatedPropertyAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedPropertyAssignment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePair_1=norm1_PropertyNameValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePair_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyGetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyGetterDeclaration_2=norm1_PropertyGetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyGetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertySetterDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertySetterDeclaration_3=norm1_PropertySetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertySetterDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyMethodDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyMethodDeclaration_4=norm1_PropertyMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyMethodDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPropertyAssignmentAccess().getPropertyNameValuePairSingleNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PropertyNameValuePairSingleName_5=norm1_PropertyNameValuePairSingleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PropertyNameValuePairSingleName_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedPropertyAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedPropertyAssignment=ruleAnnotatedPropertyAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedPropertyAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_24=null;
        Token otherlv_28=null;
        EObject this_PropertyAssignmentAnnotationList_0 = null;

        EObject lv_declaredTypeRef_2_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject this_GetterHeader_7 = null;

        EObject lv_body_8_0 = null;

        EObject lv_declaredName_11_0 = null;

        EObject lv_fpar_13_0 = null;

        EObject lv_body_15_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject lv_returnTypeRef_18_0 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsAndBody_21 = null;

        EObject lv_declaredName_22_0 = null;

        EObject this_MethodParamsAndBody_23 = null;

        EObject lv_declaredTypeRef_26_0 = null;

        EObject lv_identifierRef_27_0 = null;

        EObject lv_expression_29_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyAssignmentAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_101);
            this_PropertyAssignmentAnnotationList_0=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PropertyAssignmentAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt290=5;
            alt290 = dfa290.predict(input);
            switch (alt290) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt283=2;
                    alt283 = dfa283.predict(input);
                    switch (alt283) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_1_0_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_102);
                            lv_declaredTypeRef_2_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_2_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_3_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_3_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAnnotatedPropertyAssignmentAccess().getColonKeyword_1_0_0_0_3());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyGetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getGetterHeaderParserRuleCall_1_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_GetterHeader_7=ruleGetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_8_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertySetterDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_10=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSetKeyword_1_2_0_0_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_11_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_11_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedPropertyAssignmentAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getFparFormalParameterParserRuleCall_1_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_13_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_13_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getAnnotatedPropertyAssignmentAccess().getRightParenthesisKeyword_1_2_3());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_2_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_15_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_15_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyMethodDeclarationAnnotationListAction_1_3_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==LessThanSign) ) {
                        alt284=1;
                    }
                    switch (alt284) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getTypeVariablesParserRuleCall_1_3_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt285=2;
                    alt285 = dfa285.predict(input);
                    switch (alt285) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_1_3_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_103);
                            lv_returnTypeRef_18_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_18_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt286=2;
                    int LA286_0 = input.LA(1);

                    if ( (LA286_0==Asterisk) ) {
                        alt286=1;
                    }
                    else if ( ((LA286_0>=Intersection && LA286_0<=With)||(LA286_0>=For && LA286_0<=Var)||(LA286_0>=As && LA286_0<=Of)||LA286_0==LeftSquareBracket||LA286_0==RULE_DOUBLE||LA286_0==RULE_HEX_INT||LA286_0==RULE_OCTAL_INT||LA286_0==RULE_SCIENTIFIC_INT||LA286_0==RULE_IDENTIFIER||LA286_0==RULE_STRING||LA286_0==RULE_INT) ) {
                        alt286=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 286, 0, input);

                        throw nvae;
                    }
                    switch (alt286) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedPropertyAssignmentAccess().getGeneratorAsteriskKeyword_1_3_0_0_3_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_21=norm1_MethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_52);
                            lv_declaredName_22_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_22_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_23=ruleMethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_23;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==Semicolon) ) {
                        alt287=1;
                    }
                    switch (alt287) {
                        case 1 :
                            {
                            otherlv_24=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSemicolonKeyword_1_3_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairSingleNameAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    int alt288=2;
                    alt288 = dfa288.predict(input);
                    switch (alt288) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_5);
                            lv_declaredTypeRef_26_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_26_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getIdentifierRefIdentifierRefParserRuleCall_1_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_identifierRef_27_0=ruleIdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identifierRef",
                              		lv_identifierRef_27_0, 
                              		"eu.numberfour.n4js.N4JS.IdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==EqualsSign) ) {
                        alt289=1;
                    }
                    switch (alt289) {
                        case 1 :
                            {
                            otherlv_28=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getAnnotatedPropertyAssignmentAccess().getEqualsSignKeyword_1_4_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_4_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_29_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_29_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedPropertyAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_24=null;
        Token otherlv_28=null;
        EObject this_PropertyAssignmentAnnotationList_0 = null;

        EObject lv_declaredTypeRef_2_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_expression_5_0 = null;

        EObject this_GetterHeader_7 = null;

        EObject lv_body_8_0 = null;

        EObject lv_declaredName_11_0 = null;

        EObject lv_fpar_13_0 = null;

        EObject lv_body_15_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject lv_returnTypeRef_18_0 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsAndBody_21 = null;

        EObject lv_declaredName_22_0 = null;

        EObject this_MethodParamsAndBody_23 = null;

        EObject lv_declaredTypeRef_26_0 = null;

        EObject lv_identifierRef_27_0 = null;

        EObject lv_expression_29_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyAssignmentAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_101);
            this_PropertyAssignmentAnnotationList_0=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PropertyAssignmentAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt298=5;
            alt298 = dfa298.predict(input);
            switch (alt298) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt291=2;
                    alt291 = dfa291.predict(input);
                    switch (alt291) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_1_0_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_102);
                            lv_declaredTypeRef_2_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_2_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_0_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_3_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_3_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getAnnotatedPropertyAssignmentAccess().getColonKeyword_1_0_0_0_3());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_5_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyGetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getGetterHeaderParserRuleCall_1_1_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_25);
                    this_GetterHeader_7=norm1_GetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_8_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertySetterDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_10=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSetKeyword_1_2_0_0_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_11_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_11_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_12=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedPropertyAssignmentAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getFparFormalParameterParserRuleCall_1_2_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_13_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_13_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_14=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getAnnotatedPropertyAssignmentAccess().getRightParenthesisKeyword_1_2_3());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getBodyBlockParserRuleCall_1_2_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_15_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_15_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyMethodDeclarationAnnotationListAction_1_3_0_0_0(),
                                  current);
                          
                    }

                    }
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==LessThanSign) ) {
                        alt292=1;
                    }
                    switch (alt292) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getTypeVariablesParserRuleCall_1_3_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt293=2;
                    alt293 = dfa293.predict(input);
                    switch (alt293) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_1_3_0_0_2_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_103);
                            lv_returnTypeRef_18_0=ruleTypeRefWithModifiers();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"returnTypeRef",
                                      		lv_returnTypeRef_18_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt294=2;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==Asterisk) ) {
                        alt294=1;
                    }
                    else if ( ((LA294_0>=Intersection && LA294_0<=With)||(LA294_0>=For && LA294_0<=Var)||(LA294_0>=As && LA294_0<=Of)||LA294_0==LeftSquareBracket||LA294_0==RULE_DOUBLE||LA294_0==RULE_HEX_INT||LA294_0==RULE_OCTAL_INT||LA294_0==RULE_SCIENTIFIC_INT||LA294_0==RULE_IDENTIFIER||LA294_0==RULE_STRING||LA294_0==RULE_INT) ) {
                        alt294=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 294, 0, input);

                        throw nvae;
                    }
                    switch (alt294) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedPropertyAssignmentAccess().getGeneratorAsteriskKeyword_1_3_0_0_3_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_21=norm1_MethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_3_0_0_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_52);
                            lv_declaredName_22_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_22_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getMethodParamsAndBodyParserRuleCall_1_3_0_0_3_1_1()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsAndBody_23=ruleMethodParamsAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsAndBody_23;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( (LA295_0==Semicolon) ) {
                        alt295=1;
                    }
                    switch (alt295) {
                        case 1 :
                            {
                            otherlv_24=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_24, grammarAccess.getAnnotatedPropertyAssignmentAccess().getSemicolonKeyword_1_3_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedPropertyAssignmentAccess().getPropertyNameValuePairSingleNameAnnotationListAction_1_4_0(),
                                  current);
                          
                    }

                    }
                    int alt296=2;
                    alt296 = dfa296.predict(input);
                    switch (alt296) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getDeclaredTypeRefTypeRefParserRuleCall_1_4_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_5);
                            lv_declaredTypeRef_26_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredTypeRef",
                                      		lv_declaredTypeRef_26_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getIdentifierRefIdentifierRefParserRuleCall_1_4_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_identifierRef_27_0=norm1_IdentifierRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                      	        }
                             		set(
                             			current, 
                             			"identifierRef",
                              		lv_identifierRef_27_0, 
                              		"eu.numberfour.n4js.N4JS.IdentifierRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==EqualsSign) ) {
                        alt297=1;
                    }
                    switch (alt297) {
                        case 1 :
                            {
                            otherlv_28=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_28, grammarAccess.getAnnotatedPropertyAssignmentAccess().getEqualsSignKeyword_1_4_3_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedPropertyAssignmentAccess().getExpressionAssignmentExpressionParserRuleCall_1_4_3_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_29_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedPropertyAssignmentRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_29_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyMethodDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyMethodDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyMethodDeclaration=rulePropertyMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyMethodDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_3_0=null;
        Token otherlv_8=null;
        EObject this_TypeVariables_1 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_declaredName_4_0 = null;

        EObject this_MethodParamsAndBody_5 = null;

        EObject lv_declaredName_6_0 = null;

        EObject this_MethodParamsAndBody_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyMethodDeclarationAccess().getPropertyMethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==LessThanSign) ) {
                alt299=1;
            }
            switch (alt299) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_1=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt300=2;
            alt300 = dfa300.predict(input);
            switch (alt300) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_103);
                    lv_returnTypeRef_2_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==Asterisk) ) {
                alt301=1;
            }
            else if ( ((LA301_0>=Intersection && LA301_0<=With)||(LA301_0>=For && LA301_0<=Var)||(LA301_0>=As && LA301_0<=Of)||LA301_0==LeftSquareBracket||LA301_0==RULE_DOUBLE||LA301_0==RULE_HEX_INT||LA301_0==RULE_OCTAL_INT||LA301_0==RULE_SCIENTIFIC_INT||LA301_0==RULE_IDENTIFIER||LA301_0==RULE_STRING||LA301_0==RULE_INT) ) {
                alt301=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 301, 0, input);

                throw nvae;
            }
            switch (alt301) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_3_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_3_0, grammarAccess.getPropertyMethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_3_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_4_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_4_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_5=norm1_MethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_declaredName_6_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_6_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_7=ruleMethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==Semicolon) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPropertyMethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_3_0=null;
        Token otherlv_8=null;
        EObject this_TypeVariables_1 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_declaredName_4_0 = null;

        EObject this_MethodParamsAndBody_5 = null;

        EObject lv_declaredName_6_0 = null;

        EObject this_MethodParamsAndBody_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyMethodDeclarationAccess().getPropertyMethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==LessThanSign) ) {
                alt303=1;
            }
            switch (alt303) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_1=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt304=2;
            alt304 = dfa304.predict(input);
            switch (alt304) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getReturnTypeRefTypeRefWithModifiersParserRuleCall_0_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_103);
                    lv_returnTypeRef_2_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt305=2;
            int LA305_0 = input.LA(1);

            if ( (LA305_0==Asterisk) ) {
                alt305=1;
            }
            else if ( ((LA305_0>=Intersection && LA305_0<=With)||(LA305_0>=For && LA305_0<=Var)||(LA305_0>=As && LA305_0<=Of)||LA305_0==LeftSquareBracket||LA305_0==RULE_DOUBLE||LA305_0==RULE_HEX_INT||LA305_0==RULE_OCTAL_INT||LA305_0==RULE_SCIENTIFIC_INT||LA305_0==RULE_IDENTIFIER||LA305_0==RULE_STRING||LA305_0==RULE_INT) ) {
                alt305=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 305, 0, input);

                throw nvae;
            }
            switch (alt305) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_3_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_3_0, grammarAccess.getPropertyMethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_3_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_4_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_4_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_5=norm1_MethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_52);
                    lv_declaredName_6_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyMethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_6_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPropertyMethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getPropertyMethodDeclarationAccess().getMethodParamsAndBodyParserRuleCall_0_0_3_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsAndBody_7=ruleMethodParamsAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsAndBody_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==Semicolon) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPropertyMethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyNameValuePair = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyNameValuePair=rulePropertyNameValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyNameValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declaredTypeRef_1_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyNameValuePairAccess().getPropertyNameValuePairAction_0_0_0(),
                          current);
                  
            }

            }
            int alt307=2;
            alt307 = dfa307.predict(input);
            switch (alt307) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_102);
                    lv_declaredTypeRef_1_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertyNameValuePairAccess().getColonKeyword_0_0_3());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyNameValuePair() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declaredTypeRef_1_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyNameValuePairAccess().getPropertyNameValuePairAction_0_0_0(),
                          current);
                  
            }

            }
            int alt308=2;
            alt308 = dfa308.predict(input);
            switch (alt308) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredTypeRefTypeRefWithModifiersParserRuleCall_0_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_102);
                    lv_declaredTypeRef_1_0=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithModifiers");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_92);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertyNameValuePairAccess().getColonKeyword_0_0_3());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_4_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyNameValuePairSingleName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyNameValuePairSingleName=rulePropertyNameValuePairSingleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyNameValuePairSingleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_declaredTypeRef_0_0 = null;

        EObject lv_identifierRef_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt309=2;
            alt309 = dfa309.predict(input);
            switch (alt309) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getDeclaredTypeRefTypeRefParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    lv_declaredTypeRef_0_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getIdentifierRefIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_identifierRef_1_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
              	        }
                     		set(
                     			current, 
                     			"identifierRef",
                      		lv_identifierRef_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt310=2;
            int LA310_0 = input.LA(1);

            if ( (LA310_0==EqualsSign) ) {
                alt310=1;
            }
            switch (alt310) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPropertyNameValuePairSingleNameAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getExpressionAssignmentExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyNameValuePairSingleName() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_declaredTypeRef_0_0 = null;

        EObject lv_identifierRef_1_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt311=2;
            alt311 = dfa311.predict(input);
            switch (alt311) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getDeclaredTypeRefTypeRefParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_5);
                    lv_declaredTypeRef_0_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getIdentifierRefIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_16);
            lv_identifierRef_1_0=norm1_IdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
              	        }
                     		set(
                     			current, 
                     			"identifierRef",
                      		lv_identifierRef_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt312=2;
            int LA312_0 = input.LA(1);

            if ( (LA312_0==EqualsSign) ) {
                alt312=1;
            }
            switch (alt312) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPropertyNameValuePairSingleNameAccess().getEqualsSignKeyword_2_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPropertyNameValuePairSingleNameAccess().getExpressionAssignmentExpressionParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPropertyNameValuePairSingleNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyGetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyGetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyGetterDeclaration=rulePropertyGetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyGetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_GetterHeader_1 = null;

        EObject lv_body_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyGetterDeclarationAccess().getPropertyGetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getPropertyGetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_25);
            this_GetterHeader_1=ruleGetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyGetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertyGetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_GetterHeader_1 = null;

        EObject lv_body_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyGetterDeclarationAccess().getPropertyGetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getPropertyGetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_1()); 
                  
            }
            pushFollow(FOLLOW_25);
            this_GetterHeader_1=norm1_GetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyGetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertyGetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_2_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertySetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertySetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertySetterDeclaration=rulePropertySetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertySetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_declaredName_2_0 = null;

        EObject lv_fpar_4_0 = null;

        EObject lv_body_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertySetterDeclarationAccess().getPropertySetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertySetterDeclarationAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertySetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_4_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPropertySetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_6_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PropertySetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_declaredName_2_0 = null;

        EObject lv_fpar_4_0 = null;

        EObject lv_body_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertySetterDeclarationAccess().getPropertySetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPropertySetterDeclarationAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPropertySetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_4_0=norm1_FormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPropertySetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertySetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_body_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPropertySetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_6_0, 
                      		"eu.numberfour.n4js.N4JS.Block");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedCallExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedCallExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedCallExpression=ruleParameterizedCallExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedCallExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TypeArguments_0 = null;

        EObject lv_target_1_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTypeArgumentsParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_5);
            this_TypeArguments_0=ruleTypeArguments(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeArguments_0;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTargetIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_target_1_0=ruleIdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedCallExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getArgumentsWithParenthesesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ArgumentsWithParentheses_2=ruleArgumentsWithParentheses(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ArgumentsWithParentheses_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParameterizedCallExpression() throws RecognitionException {
        EObject current = null;

        EObject this_TypeArguments_0 = null;

        EObject lv_target_1_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTypeArgumentsParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_5);
            this_TypeArguments_0=ruleTypeArguments(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeArguments_0;
                      afterParserOrEnumRuleCall();
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getTargetIdentifierRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_target_1_0=norm1_IdentifierRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedCallExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"target",
                      		lv_target_1_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getParameterizedCallExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getParameterizedCallExpressionAccess().getArgumentsWithParenthesesParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ArgumentsWithParentheses_2=norm1_ArgumentsWithParentheses(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ArgumentsWithParentheses_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLeftHandSideExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLeftHandSideExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLeftHandSideExpression=ruleLeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLeftHandSideExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MemberExpression_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;

        EObject this_ArgumentsWithParentheses_4 = null;

        EObject this_IndexedAccessExpressionTail_6 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_8 = null;

        EObject lv_template_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getMemberExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_105);
            this_MemberExpression_0=ruleMemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MemberExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt314=2;
            int LA314_0 = input.LA(1);

            if ( (LA314_0==LeftParenthesis) ) {
                alt314=1;
            }
            switch (alt314) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_106);
                    this_ArgumentsWithParentheses_2=ruleArgumentsWithParentheses(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArgumentsWithParentheses_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop313:
                    do {
                        int alt313=5;
                        int LA313_0 = input.LA(1);

                        if ( (LA313_0==LeftParenthesis) ) {
                            alt313=1;
                        }
                        else if ( (LA313_0==LeftSquareBracket) ) {
                            alt313=2;
                        }
                        else if ( (LA313_0==FullStop) ) {
                            alt313=3;
                        }
                        else if ( (LA313_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred179_InternalN4JSXParser())) {
                            alt313=4;
                        }
                        else if ( (LA313_0==RULE_TEMPLATE_HEAD) && (synpred179_InternalN4JSXParser())) {
                            alt313=4;
                        }


                        switch (alt313) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_2_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_2_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ArgumentsWithParentheses_4=ruleArgumentsWithParentheses(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ArgumentsWithParentheses_4;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTargetAction_1_2_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_2_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_IndexedAccessExpressionTail_6=ruleIndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_6;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_2_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_2_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ParameterizedPropertyAccessExpressionTail_8=ruleParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_8;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getTaggedTemplateStringTargetAction_1_2_3_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_2_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    lv_template_10_0=ruleTemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLeftHandSideExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop313;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LeftHandSideExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MemberExpression_0 = null;

        EObject this_ArgumentsWithParentheses_2 = null;

        EObject this_ArgumentsWithParentheses_4 = null;

        EObject this_IndexedAccessExpressionTail_6 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_8 = null;

        EObject lv_template_10_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getMemberExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_105);
            this_MemberExpression_0=norm1_MemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MemberExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt316=2;
            int LA316_0 = input.LA(1);

            if ( (LA316_0==LeftParenthesis) ) {
                alt316=1;
            }
            switch (alt316) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_106);
                    this_ArgumentsWithParentheses_2=norm1_ArgumentsWithParentheses(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArgumentsWithParentheses_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop315:
                    do {
                        int alt315=5;
                        int LA315_0 = input.LA(1);

                        if ( (LA315_0==LeftParenthesis) ) {
                            alt315=1;
                        }
                        else if ( (LA315_0==LeftSquareBracket) ) {
                            alt315=2;
                        }
                        else if ( (LA315_0==FullStop) ) {
                            alt315=3;
                        }
                        else if ( (LA315_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred180_InternalN4JSXParser())) {
                            alt315=4;
                        }
                        else if ( (LA315_0==RULE_TEMPLATE_HEAD) && (synpred180_InternalN4JSXParser())) {
                            alt315=4;
                        }


                        switch (alt315) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedCallExpressionTargetAction_1_2_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getArgumentsWithParenthesesParserRuleCall_1_2_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ArgumentsWithParentheses_4=norm1_ArgumentsWithParentheses(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ArgumentsWithParentheses_4;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTargetAction_1_2_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_2_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_IndexedAccessExpressionTail_6=norm1_IndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_6;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_2_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getLeftHandSideExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_2_2_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ParameterizedPropertyAccessExpressionTail_8=norm1_ParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_8;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getLeftHandSideExpressionAccess().getTaggedTemplateStringTargetAction_1_2_3_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getLeftHandSideExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_2_3_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    lv_template_10_0=norm1_TemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getLeftHandSideExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_10_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop315;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArgumentsWithParentheses(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Arguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArgumentsWithParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( ((LA317_0>=Intersection && LA317_0<=Implements)||(LA317_0>=Promisify && LA317_0<=Abstract)||(LA317_0>=External && LA317_0<=Function)||(LA317_0>=Private && LA317_0<=Delete)||LA317_0==Public||LA317_0==Static||(LA317_0>=Target && LA317_0<=Await)||LA317_0==Class||(LA317_0>=False && LA317_0<=Super)||LA317_0==Union||(LA317_0>=Yield && LA317_0<=This)||(LA317_0>=From && LA317_0<=Void)||LA317_0==FullStopFullStopFullStop||(LA317_0>=Get && LA317_0<=Set)||LA317_0==PlusSignPlusSign||LA317_0==HyphenMinusHyphenMinus||LA317_0==SolidusEqualsSign||LA317_0==As||LA317_0==Of||LA317_0==ExclamationMark||LA317_0==LeftParenthesis||(LA317_0>=Asterisk && LA317_0<=PlusSign)||LA317_0==HyphenMinus||LA317_0==Solidus||LA317_0==LessThanSign||(LA317_0>=CommercialAt && LA317_0<=LeftSquareBracket)||LA317_0==LeftCurlyBracket||LA317_0==Tilde||LA317_0==RULE_DOUBLE||(LA317_0>=RULE_HEX_INT && LA317_0<=RULE_LEGACY_OCTAL_INT)||LA317_0==RULE_SCIENTIFIC_INT||LA317_0==RULE_IDENTIFIER||LA317_0==RULE_STRING||(LA317_0>=RULE_TEMPLATE_HEAD && LA317_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA317_0==RULE_INT) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArgumentsWithParenthesesRule());
                      		}
                              newCompositeNode(grammarAccess.getArgumentsWithParenthesesAccess().getArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_Arguments_1=ruleArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Arguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArgumentsWithParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArgumentsWithParentheses(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Arguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getArgumentsWithParenthesesAccess().getLeftParenthesisKeyword_0());
                  
            }
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( ((LA318_0>=Intersection && LA318_0<=Implements)||(LA318_0>=Promisify && LA318_0<=Abstract)||(LA318_0>=External && LA318_0<=Function)||(LA318_0>=Private && LA318_0<=Delete)||LA318_0==Public||LA318_0==Static||(LA318_0>=Target && LA318_0<=Await)||LA318_0==Class||(LA318_0>=False && LA318_0<=Super)||LA318_0==Union||(LA318_0>=Yield && LA318_0<=This)||(LA318_0>=From && LA318_0<=Void)||LA318_0==FullStopFullStopFullStop||(LA318_0>=Get && LA318_0<=Set)||LA318_0==PlusSignPlusSign||LA318_0==HyphenMinusHyphenMinus||LA318_0==SolidusEqualsSign||LA318_0==As||LA318_0==Of||LA318_0==ExclamationMark||LA318_0==LeftParenthesis||(LA318_0>=Asterisk && LA318_0<=PlusSign)||LA318_0==HyphenMinus||LA318_0==Solidus||LA318_0==LessThanSign||(LA318_0>=CommercialAt && LA318_0<=LeftSquareBracket)||LA318_0==LeftCurlyBracket||LA318_0==Tilde||LA318_0==RULE_DOUBLE||(LA318_0>=RULE_HEX_INT && LA318_0<=RULE_LEGACY_OCTAL_INT)||LA318_0==RULE_SCIENTIFIC_INT||LA318_0==RULE_IDENTIFIER||LA318_0==RULE_STRING||(LA318_0>=RULE_TEMPLATE_HEAD && LA318_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA318_0==RULE_INT) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getArgumentsWithParenthesesRule());
                      		}
                              newCompositeNode(grammarAccess.getArgumentsWithParenthesesAccess().getArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_Arguments_1=norm1_Arguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Arguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArgumentsWithParenthesesAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_44);
            lv_arguments_0_0=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_0_0, 
                      		"eu.numberfour.n4js.N4JS.Argument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop319:
            do {
                int alt319=2;
                int LA319_0 = input.LA(1);

                if ( (LA319_0==Comma) ) {
                    alt319=1;
                }


                switch (alt319) {
            	case 1 :
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_arguments_2_0=ruleArgument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop319;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Arguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_arguments_0_0 = null;

        EObject lv_arguments_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_44);
            lv_arguments_0_0=norm1_Argument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"arguments",
                      		lv_arguments_0_0, 
                      		"eu.numberfour.n4js.N4JS.Argument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop320:
            do {
                int alt320=2;
                int LA320_0 = input.LA(1);

                if ( (LA320_0==Comma) ) {
                    alt320=1;
                }


                switch (alt320) {
            	case 1 :
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_arguments_2_0=norm1_Argument();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"arguments",
            	              		lv_arguments_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Argument");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop320;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgument=ruleArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArgument() throws RecognitionException {
        EObject current = null;

        Token lv_spread_0_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==FullStopFullStopFullStop) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    {
                    {
                    lv_spread_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_0_0, grammarAccess.getArgumentAccess().getSpreadFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArgumentRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Argument() throws RecognitionException {
        EObject current = null;

        Token lv_spread_0_0=null;
        EObject lv_expression_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==FullStopFullStopFullStop) ) {
                alt322=1;
            }
            switch (alt322) {
                case 1 :
                    {
                    {
                    lv_spread_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_spread_0_0, grammarAccess.getArgumentAccess().getSpreadFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getArgumentRule());
                      	        }
                             		setWithLastConsumed(current, "spread", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_1_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_1_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArguments(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_typeArgs_1_0 = null;

        EObject lv_typeArgs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LessThanSign,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTypeArgumentsAccess().getLessThanSignKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTypeArgsTypeRefParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_29);
            lv_typeArgs_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
              	        }
                     		add(
                     			current, 
                     			"typeArgs",
                      		lv_typeArgs_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop323:
            do {
                int alt323=2;
                int LA323_0 = input.LA(1);

                if ( (LA323_0==Comma) ) {
                    alt323=1;
                }


                switch (alt323) {
            	case 1 :
            	    {
            	    otherlv_2=(Token)match(input,Comma,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getTypeArgumentsAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeArgumentsAccess().getTypeArgsTypeRefParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_typeArgs_3_0=ruleTypeRef();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeArgumentsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeArgs",
            	              		lv_typeArgs_3_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop323;
                }
            } while (true);

            otherlv_4=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTypeArgumentsAccess().getGreaterThanSignKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleMemberExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMemberExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMemberExpression=ruleMemberExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMemberExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMemberExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_withArgs_8_0=null;
        Token otherlv_10=null;
        EObject lv_callee_6_0 = null;

        EObject this_TypeArguments_7 = null;

        EObject this_Arguments_9 = null;

        EObject this_IndexedAccessExpressionTail_12 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_14 = null;

        EObject lv_template_16_0 = null;

        EObject this_PrimaryExpression_17 = null;

        EObject this_IndexedAccessExpressionTail_19 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_21 = null;

        EObject lv_template_23_0 = null;


         enterRule(); 
            
        try {
            {
            int alt329=3;
            alt329 = dfa329.predict(input);
            switch (alt329) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewTargetAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,New,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMemberExpressionAccess().getNewKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMemberExpressionAccess().getFullStopKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMemberExpressionAccess().getTargetKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,New,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMemberExpressionAccess().getNewKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getCalleeMemberExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_112);
                    lv_callee_6_0=ruleMemberExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"callee",
                              		lv_callee_6_0, 
                              		"eu.numberfour.n4js.N4JS.MemberExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt324=2;
                    int LA324_0 = input.LA(1);

                    if ( (LA324_0==LessThanSign) ) {
                        int LA324_1 = input.LA(2);

                        if ( (synpred183_InternalN4JSXParser()) ) {
                            alt324=1;
                        }
                    }
                    switch (alt324) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getMemberExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getMemberExpressionAccess().getTypeArgumentsParserRuleCall_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_105);
                            this_TypeArguments_7=ruleTypeArguments(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeArguments_7;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt327=2;
                    int LA327_0 = input.LA(1);

                    if ( (LA327_0==LeftParenthesis) ) {
                        int LA327_1 = input.LA(2);

                        if ( (synpred184_InternalN4JSXParser()) ) {
                            alt327=1;
                        }
                    }
                    switch (alt327) {
                        case 1 :
                            {
                            {
                            {
                            lv_withArgs_8_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_withArgs_8_0, grammarAccess.getMemberExpressionAccess().getWithArgsLeftParenthesisKeyword_1_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "withArgs", true, "(");
                              	    
                            }

                            }


                            }
                            int alt325=2;
                            int LA325_0 = input.LA(1);

                            if ( ((LA325_0>=Intersection && LA325_0<=Implements)||(LA325_0>=Promisify && LA325_0<=Abstract)||(LA325_0>=External && LA325_0<=Function)||(LA325_0>=Private && LA325_0<=Delete)||LA325_0==Public||LA325_0==Static||(LA325_0>=Target && LA325_0<=Await)||LA325_0==Class||(LA325_0>=False && LA325_0<=Super)||LA325_0==Union||(LA325_0>=Yield && LA325_0<=This)||(LA325_0>=From && LA325_0<=Void)||LA325_0==FullStopFullStopFullStop||(LA325_0>=Get && LA325_0<=Set)||LA325_0==PlusSignPlusSign||LA325_0==HyphenMinusHyphenMinus||LA325_0==SolidusEqualsSign||LA325_0==As||LA325_0==Of||LA325_0==ExclamationMark||LA325_0==LeftParenthesis||(LA325_0>=Asterisk && LA325_0<=PlusSign)||LA325_0==HyphenMinus||LA325_0==Solidus||LA325_0==LessThanSign||(LA325_0>=CommercialAt && LA325_0<=LeftSquareBracket)||LA325_0==LeftCurlyBracket||LA325_0==Tilde||LA325_0==RULE_DOUBLE||(LA325_0>=RULE_HEX_INT && LA325_0<=RULE_LEGACY_OCTAL_INT)||LA325_0==RULE_SCIENTIFIC_INT||LA325_0==RULE_IDENTIFIER||LA325_0==RULE_STRING||(LA325_0>=RULE_TEMPLATE_HEAD && LA325_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA325_0==RULE_INT) ) {
                                alt325=1;
                            }
                            switch (alt325) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                                      		}
                                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getArgumentsParserRuleCall_1_3_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_75);
                                    this_Arguments_9=ruleArguments(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_Arguments_9;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getMemberExpressionAccess().getRightParenthesisKeyword_1_3_2());
                                  
                            }
                            loop326:
                            do {
                                int alt326=4;
                                switch ( input.LA(1) ) {
                                case LeftSquareBracket:
                                    {
                                    alt326=1;
                                    }
                                    break;
                                case FullStop:
                                    {
                                    alt326=2;
                                    }
                                    break;
                                case RULE_TEMPLATE_HEAD:
                                case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                                    {
                                    alt326=3;
                                    }
                                    break;

                                }

                                switch (alt326) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_1_3_3_0_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_3_3_0_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_106);
                            	    this_IndexedAccessExpressionTail_12=ruleIndexedAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_IndexedAccessExpressionTail_12;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_3_3_1_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_3_3_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_106);
                            	    this_ParameterizedPropertyAccessExpressionTail_14=ruleParameterizedPropertyAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_ParameterizedPropertyAccessExpressionTail_14;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_1_3_3_2_0(),
                            	                  current);
                            	          
                            	    }

                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_3_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_106);
                            	    lv_template_16_0=ruleTemplateLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                            	      	        }
                            	             		set(
                            	             			current, 
                            	             			"template",
                            	              		lv_template_16_0, 
                            	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop326;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getPrimaryExpressionParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_106);
                    this_PrimaryExpression_17=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpression_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop328:
                    do {
                        int alt328=4;
                        switch ( input.LA(1) ) {
                        case LeftSquareBracket:
                            {
                            alt328=1;
                            }
                            break;
                        case FullStop:
                            {
                            alt328=2;
                            }
                            break;
                        case RULE_TEMPLATE_HEAD:
                        case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                            {
                            alt328=3;
                            }
                            break;

                        }

                        switch (alt328) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_2_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_2_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_IndexedAccessExpressionTail_19=ruleIndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_19;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_2_1_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_2_1_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ParameterizedPropertyAccessExpressionTail_21=ruleParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_21;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_2_1_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_2_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    lv_template_23_0=ruleTemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_23_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop328;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MemberExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_withArgs_8_0=null;
        Token otherlv_10=null;
        EObject lv_callee_6_0 = null;

        EObject this_TypeArguments_7 = null;

        EObject this_Arguments_9 = null;

        EObject this_IndexedAccessExpressionTail_12 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_14 = null;

        EObject lv_template_16_0 = null;

        EObject this_PrimaryExpression_17 = null;

        EObject this_IndexedAccessExpressionTail_19 = null;

        EObject this_ParameterizedPropertyAccessExpressionTail_21 = null;

        EObject lv_template_23_0 = null;


         enterRule(); 
            
        try {
            {
            int alt335=3;
            alt335 = dfa335.predict(input);
            switch (alt335) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewTargetAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,New,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMemberExpressionAccess().getNewKeyword_0_0_0_1());
                          
                    }
                    otherlv_2=(Token)match(input,FullStop,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getMemberExpressionAccess().getFullStopKeyword_0_0_0_2());
                          
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getMemberExpressionAccess().getTargetKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getMemberExpressionAccess().getNewExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_5=(Token)match(input,New,FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getMemberExpressionAccess().getNewKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getCalleeMemberExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_112);
                    lv_callee_6_0=norm1_MemberExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"callee",
                              		lv_callee_6_0, 
                              		"eu.numberfour.n4js.N4JS.MemberExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt330=2;
                    int LA330_0 = input.LA(1);

                    if ( (LA330_0==LessThanSign) ) {
                        int LA330_1 = input.LA(2);

                        if ( (synpred187_InternalN4JSXParser()) ) {
                            alt330=1;
                        }
                    }
                    switch (alt330) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getMemberExpressionRule());
                              		}
                                      newCompositeNode(grammarAccess.getMemberExpressionAccess().getTypeArgumentsParserRuleCall_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_105);
                            this_TypeArguments_7=ruleTypeArguments(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeArguments_7;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt333=2;
                    int LA333_0 = input.LA(1);

                    if ( (LA333_0==LeftParenthesis) ) {
                        int LA333_1 = input.LA(2);

                        if ( (synpred188_InternalN4JSXParser()) ) {
                            alt333=1;
                        }
                    }
                    switch (alt333) {
                        case 1 :
                            {
                            {
                            {
                            lv_withArgs_8_0=(Token)match(input,LeftParenthesis,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_withArgs_8_0, grammarAccess.getMemberExpressionAccess().getWithArgsLeftParenthesisKeyword_1_3_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getMemberExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "withArgs", true, "(");
                              	    
                            }

                            }


                            }
                            int alt331=2;
                            int LA331_0 = input.LA(1);

                            if ( ((LA331_0>=Intersection && LA331_0<=Implements)||(LA331_0>=Promisify && LA331_0<=Abstract)||(LA331_0>=External && LA331_0<=Function)||(LA331_0>=Private && LA331_0<=Delete)||LA331_0==Public||LA331_0==Static||(LA331_0>=Target && LA331_0<=Await)||LA331_0==Class||(LA331_0>=False && LA331_0<=Super)||LA331_0==Union||(LA331_0>=Yield && LA331_0<=This)||(LA331_0>=From && LA331_0<=Void)||LA331_0==FullStopFullStopFullStop||(LA331_0>=Get && LA331_0<=Set)||LA331_0==PlusSignPlusSign||LA331_0==HyphenMinusHyphenMinus||LA331_0==SolidusEqualsSign||LA331_0==As||LA331_0==Of||LA331_0==ExclamationMark||LA331_0==LeftParenthesis||(LA331_0>=Asterisk && LA331_0<=PlusSign)||LA331_0==HyphenMinus||LA331_0==Solidus||LA331_0==LessThanSign||(LA331_0>=CommercialAt && LA331_0<=LeftSquareBracket)||LA331_0==LeftCurlyBracket||LA331_0==Tilde||LA331_0==RULE_DOUBLE||(LA331_0>=RULE_HEX_INT && LA331_0<=RULE_LEGACY_OCTAL_INT)||LA331_0==RULE_SCIENTIFIC_INT||LA331_0==RULE_IDENTIFIER||LA331_0==RULE_STRING||(LA331_0>=RULE_TEMPLATE_HEAD && LA331_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA331_0==RULE_INT) ) {
                                alt331=1;
                            }
                            switch (alt331) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                                      		}
                                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getArgumentsParserRuleCall_1_3_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_75);
                                    this_Arguments_9=norm1_Arguments(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_Arguments_9;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }

                            otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getMemberExpressionAccess().getRightParenthesisKeyword_1_3_2());
                                  
                            }
                            loop332:
                            do {
                                int alt332=4;
                                switch ( input.LA(1) ) {
                                case LeftSquareBracket:
                                    {
                                    alt332=1;
                                    }
                                    break;
                                case FullStop:
                                    {
                                    alt332=2;
                                    }
                                    break;
                                case RULE_TEMPLATE_HEAD:
                                case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                                    {
                                    alt332=3;
                                    }
                                    break;

                                }

                                switch (alt332) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_1_3_3_0_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_1_3_3_0_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_106);
                            	    this_IndexedAccessExpressionTail_12=norm1_IndexedAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_IndexedAccessExpressionTail_12;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_1_3_3_1_0(),
                            	                  current);
                            	          
                            	    }

                            	    }

                            	    if ( state.backtracking==0 ) {
                            	       
                            	      		if (current==null) {
                            	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                            	      		}
                            	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_1_3_3_1_1()); 
                            	          
                            	    }
                            	    pushFollow(FOLLOW_106);
                            	    this_ParameterizedPropertyAccessExpressionTail_14=norm1_ParameterizedPropertyAccessExpressionTail(current);

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	              current = this_ParameterizedPropertyAccessExpressionTail_14;
                            	              afterParserOrEnumRuleCall();
                            	          
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	              current = forceCreateModelElementAndSet(
                            	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_1_3_3_2_0(),
                            	                  current);
                            	          
                            	    }

                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_1_3_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_106);
                            	    lv_template_16_0=norm1_TemplateLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                            	      	        }
                            	             		set(
                            	             			current, 
                            	             			"template",
                            	              		lv_template_16_0, 
                            	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop332;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getMemberExpressionAccess().getPrimaryExpressionParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_106);
                    this_PrimaryExpression_17=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PrimaryExpression_17;
                              afterParserOrEnumRuleCall();
                          
                    }
                    loop334:
                    do {
                        int alt334=4;
                        switch ( input.LA(1) ) {
                        case LeftSquareBracket:
                            {
                            alt334=1;
                            }
                            break;
                        case FullStop:
                            {
                            alt334=2;
                            }
                            break;
                        case RULE_TEMPLATE_HEAD:
                        case RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL:
                            {
                            alt334=3;
                            }
                            break;

                        }

                        switch (alt334) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTargetAction_2_1_0_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getIndexedAccessExpressionTailParserRuleCall_2_1_0_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_IndexedAccessExpressionTail_19=norm1_IndexedAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_IndexedAccessExpressionTail_19;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTargetAction_2_1_1_0(),
                    	                  current);
                    	          
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	      		if (current==null) {
                    	      			current = createModelElement(grammarAccess.getMemberExpressionRule());
                    	      		}
                    	              newCompositeNode(grammarAccess.getMemberExpressionAccess().getParameterizedPropertyAccessExpressionTailParserRuleCall_2_1_1_1()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    this_ParameterizedPropertyAccessExpressionTail_21=norm1_ParameterizedPropertyAccessExpressionTail(current);

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              current = this_ParameterizedPropertyAccessExpressionTail_21;
                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	              current = forceCreateModelElementAndSet(
                    	                  grammarAccess.getMemberExpressionAccess().getTaggedTemplateStringTargetAction_2_1_2_0(),
                    	                  current);
                    	          
                    	    }

                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getMemberExpressionAccess().getTemplateTemplateLiteralParserRuleCall_2_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_106);
                    	    lv_template_23_0=norm1_TemplateLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getMemberExpressionRule());
                    	      	        }
                    	             		set(
                    	             			current, 
                    	             			"template",
                    	              		lv_template_23_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop334;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIndexedAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_index_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIndexedAccessExpressionTailAccess().getLeftSquareBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIndexedAccessExpressionTailAccess().getIndexExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_113);
            lv_index_1_0=norm1_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIndexedAccessExpressionTailRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIndexedAccessExpressionTailAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_IndexedAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_index_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIndexedAccessExpressionTailAccess().getLeftSquareBracketKeyword_0());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIndexedAccessExpressionTailAccess().getIndexExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_113);
            lv_index_1_0=norm3_Expression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIndexedAccessExpressionTailRule());
              	        }
                     		set(
                     			current, 
                     			"index",
                      		lv_index_1_0, 
                      		"eu.numberfour.n4js.N4JS.Expression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIndexedAccessExpressionTailAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedPropertyAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_TypeArguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,FullStop,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getFullStopKeyword_0());
                  
            }
            int alt336=2;
            int LA336_0 = input.LA(1);

            if ( (LA336_0==LessThanSign) ) {
                alt336=1;
            }
            switch (alt336) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getTypeArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_38);
                    this_TypeArguments_1=ruleTypeArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeArguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getPropertyIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ParameterizedPropertyAccessExpressionTail(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        EObject this_TypeArguments_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,FullStop,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getFullStopKeyword_0());
                  
            }
            int alt337=2;
            int LA337_0 = input.LA(1);

            if ( (LA337_0==LessThanSign) ) {
                alt337=1;
            }
            switch (alt337) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getTypeArgumentsParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_38);
                    this_TypeArguments_1=ruleTypeArguments(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeArguments_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedPropertyAccessExpressionTailRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedPropertyAccessExpressionTailAccess().getPropertyIdentifiableElementCrossReference_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePostfixExpression=rulePostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LeftHandSideExpression_0 = null;

        Enumerator lv_op_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPostfixExpressionAccess().getLeftHandSideExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_LeftHandSideExpression_0=ruleLeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               if (input.LA(1) == PlusSignPlusSign || input.LA(1) == HyphenMinusHyphenMinus) promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                      current = this_LeftHandSideExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==PlusSignPlusSign) && (synpred189_InternalN4JSXParser())) {
                alt338=1;
            }
            else if ( (LA338_0==HyphenMinusHyphenMinus) && (synpred189_InternalN4JSXParser())) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExpressionAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOpPostfixOperatorEnumRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_op_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.PostfixOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PostfixExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LeftHandSideExpression_0 = null;

        Enumerator lv_op_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getPostfixExpressionAccess().getLeftHandSideExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_115);
            this_LeftHandSideExpression_0=norm1_LeftHandSideExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LeftHandSideExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt339=2;
            int LA339_0 = input.LA(1);

            if ( (LA339_0==PlusSignPlusSign) && (synpred190_InternalN4JSXParser())) {
                alt339=1;
            }
            else if ( (LA339_0==HyphenMinusHyphenMinus) && (synpred190_InternalN4JSXParser())) {
                alt339=1;
            }
            switch (alt339) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getPostfixExpressionAccess().getPostfixExpressionExpressionAction_1_0_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOpPostfixOperatorEnumRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_op_2_0=rulePostfixOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.PostfixOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleCastExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCastExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCastExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCastExpression=ruleCastExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCastExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleCastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PostfixExpression_0 = null;

        EObject lv_targetTypeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_37);
            this_PostfixExpression_0=rulePostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PostfixExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt340=2;
            int LA340_0 = input.LA(1);

            if ( (LA340_0==As) && (synpred191_InternalN4JSXParser())) {
                alt340=1;
            }
            switch (alt340) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getCastExpressionAccess().getCastExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getAsKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTargetTypeRefTypeRefForCastParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_targetTypeRef_3_0=ruleTypeRefForCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCastExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"targetTypeRef",
                              		lv_targetTypeRef_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefForCast");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_CastExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PostfixExpression_0 = null;

        EObject lv_targetTypeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_37);
            this_PostfixExpression_0=norm1_PostfixExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PostfixExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==As) && (synpred192_InternalN4JSXParser())) {
                alt341=1;
            }
            switch (alt341) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getCastExpressionAccess().getCastExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,As,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getAsKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTargetTypeRefTypeRefForCastParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_targetTypeRef_3_0=ruleTypeRefForCast();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCastExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"targetTypeRef",
                              		lv_targetTypeRef_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefForCast");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CastExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt342=2;
            int LA342_0 = input.LA(1);

            if ( ((LA342_0>=Intersection && LA342_0<=Implements)||(LA342_0>=Promisify && LA342_0<=Abstract)||(LA342_0>=External && LA342_0<=Function)||(LA342_0>=Private && LA342_0<=Project)||LA342_0==Public||LA342_0==Static||LA342_0==Target||(LA342_0>=Async && LA342_0<=Await)||LA342_0==Class||(LA342_0>=False && LA342_0<=Super)||LA342_0==Union||(LA342_0>=Yield && LA342_0<=This)||(LA342_0>=From && LA342_0<=Type)||(LA342_0>=Get && LA342_0<=Set)||LA342_0==SolidusEqualsSign||LA342_0==As||LA342_0==Of||LA342_0==LeftParenthesis||LA342_0==Solidus||LA342_0==LessThanSign||(LA342_0>=CommercialAt && LA342_0<=LeftSquareBracket)||LA342_0==LeftCurlyBracket||LA342_0==RULE_DOUBLE||(LA342_0>=RULE_HEX_INT && LA342_0<=RULE_LEGACY_OCTAL_INT)||LA342_0==RULE_SCIENTIFIC_INT||LA342_0==RULE_IDENTIFIER||LA342_0==RULE_STRING||(LA342_0>=RULE_TEMPLATE_HEAD && LA342_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA342_0==RULE_INT) ) {
                alt342=1;
            }
            else if ( (LA342_0==Delete||LA342_0==Typeof||LA342_0==Void||LA342_0==PlusSignPlusSign||LA342_0==HyphenMinusHyphenMinus||LA342_0==ExclamationMark||LA342_0==PlusSign||LA342_0==HyphenMinus||LA342_0==Tilde) ) {
                alt342=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 342, 0, input);

                throw nvae;
            }
            switch (alt342) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CastExpression_0=ruleCastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CastExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_11);
                    lv_op_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=ruleUnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_CastExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( ((LA343_0>=Intersection && LA343_0<=Implements)||(LA343_0>=Promisify && LA343_0<=Abstract)||(LA343_0>=External && LA343_0<=Function)||(LA343_0>=Private && LA343_0<=Project)||LA343_0==Public||LA343_0==Static||LA343_0==Target||(LA343_0>=Async && LA343_0<=Await)||LA343_0==Class||(LA343_0>=False && LA343_0<=Super)||LA343_0==Union||LA343_0==This||(LA343_0>=From && LA343_0<=Type)||(LA343_0>=Get && LA343_0<=Set)||LA343_0==SolidusEqualsSign||LA343_0==As||LA343_0==Of||LA343_0==LeftParenthesis||LA343_0==Solidus||LA343_0==LessThanSign||(LA343_0>=CommercialAt && LA343_0<=LeftSquareBracket)||LA343_0==LeftCurlyBracket||LA343_0==RULE_DOUBLE||(LA343_0>=RULE_HEX_INT && LA343_0<=RULE_LEGACY_OCTAL_INT)||LA343_0==RULE_SCIENTIFIC_INT||LA343_0==RULE_IDENTIFIER||LA343_0==RULE_STRING||(LA343_0>=RULE_TEMPLATE_HEAD && LA343_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA343_0==RULE_INT) ) {
                alt343=1;
            }
            else if ( (LA343_0==Delete||LA343_0==Typeof||LA343_0==Void||LA343_0==PlusSignPlusSign||LA343_0==HyphenMinusHyphenMinus||LA343_0==ExclamationMark||LA343_0==PlusSign||LA343_0==HyphenMinus||LA343_0==Tilde) ) {
                alt343=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 343, 0, input);

                throw nvae;
            }
            switch (alt343) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnaryExpressionAccess().getCastExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CastExpression_0=norm1_CastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_CastExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_11);
                    lv_op_2_0=ruleUnaryOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"op",
                              		lv_op_2_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm1_UnaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.UnaryExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop344:
            do {
                int alt344=2;
                int LA344_0 = input.LA(1);

                if ( (LA344_0==Asterisk) && (synpred193_InternalN4JSXParser())) {
                    alt344=1;
                }
                else if ( (LA344_0==Solidus) && (synpred193_InternalN4JSXParser())) {
                    alt344=1;
                }
                else if ( (LA344_0==PercentSign) && (synpred193_InternalN4JSXParser())) {
                    alt344=1;
                }


                switch (alt344) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRhsUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=ruleUnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop344;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_UnaryExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_117);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==Asterisk) && (synpred194_InternalN4JSXParser())) {
                    alt345=1;
                }
                else if ( (LA345_0==Solidus) && (synpred194_InternalN4JSXParser())) {
                    alt345=1;
                }
                else if ( (LA345_0==PercentSign) && (synpred194_InternalN4JSXParser())) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOpMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleMultiplicativeOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRhsUnaryExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rhs_3_0=norm1_UnaryExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.UnaryExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop345;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop346:
            do {
                int alt346=2;
                int LA346_0 = input.LA(1);

                if ( (LA346_0==PlusSign) && (synpred195_InternalN4JSXParser())) {
                    alt346=1;
                }
                else if ( (LA346_0==HyphenMinus) && (synpred195_InternalN4JSXParser())) {
                    alt346=1;
                }


                switch (alt346) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditiveOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRhsMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop346;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_MultiplicativeExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_118);
            this_MultiplicativeExpression_0=norm1_MultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop347:
            do {
                int alt347=2;
                int LA347_0 = input.LA(1);

                if ( (LA347_0==PlusSign) && (synpred196_InternalN4JSXParser())) {
                    alt347=1;
                }
                else if ( (LA347_0==HyphenMinus) && (synpred196_InternalN4JSXParser())) {
                    alt347=1;
                }


                switch (alt347) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOpAdditiveOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleAdditiveOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRhsMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rhs_3_0=norm1_MultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.MultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop347;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftExpression=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop348:
            do {
                int alt348=2;
                alt348 = dfa348.predict(input);
                switch (alt348) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShiftExpressionAccess().getShiftExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOpShiftOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRhsAdditiveExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=ruleAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop348;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ShiftExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_119);
            this_AdditiveExpression_0=norm1_AdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop349:
            do {
                int alt349=2;
                alt349 = dfa349.predict(input);
                switch (alt349) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getShiftExpressionAccess().getShiftExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOpShiftOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleShiftOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getRhsAdditiveExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_rhs_3_0=norm1_AdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.AdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop349;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleShiftOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleShiftOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftOperator=ruleShiftOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleShiftOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==GreaterThanSign) ) {
                alt351=1;
            }
            else if ( (LA351_0==LessThanSignLessThanSign) ) {
                alt351=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 351, 0, input);

                throw nvae;
            }
            switch (alt351) {
                case 1 :
                    {
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_0()); 
                          
                    }
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_1()); 
                          
                    }
                    int alt350=2;
                    int LA350_0 = input.LA(1);

                    if ( (LA350_0==GreaterThanSign) ) {
                        alt350=1;
                    }
                    switch (alt350) {
                        case 1 :
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignKeyword_0_2()); 
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,LessThanSignLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getLessThanSignLessThanSignKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_ShiftExpression_0=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop352:
            do {
                int alt352=2;
                alt352 = dfa352.predict(input);
                switch (alt352) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_rhs_3_0=ruleShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop352;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_122);
            this_ShiftExpression_0=ruleShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop353:
            do {
                int alt353=2;
                alt353 = dfa353.predict(input);
                switch (alt353) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=norm1_RelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_rhs_3_0=ruleShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop353;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_121);
            this_ShiftExpression_0=norm1_ShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop354:
            do {
                int alt354=2;
                alt354 = dfa354.predict(input);
                switch (alt354) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleRelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_rhs_3_0=norm1_ShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop354;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_122);
            this_ShiftExpression_0=norm1_ShiftExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ShiftExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop355:
            do {
                int alt355=2;
                alt355 = dfa355.predict(input);
                switch (alt355) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLhsAction_1_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpRelationalOperatorParserRuleCall_1_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=norm1_RelationalOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRhsShiftExpressionParserRuleCall_1_0_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_122);
            	    lv_rhs_3_0=norm1_ShiftExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.ShiftExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop355;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleRelationalOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRelationalOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalOperator=ruleRelationalOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleRelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt356=5;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt356=1;
                }
                break;
            case GreaterThanSign:
                {
                alt356=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt356=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt356=4;
                }
                break;
            case Instanceof:
                {
                alt356=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 356, 0, input);

                throw nvae;
            }

            switch (alt356) {
                case 1 :
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInstanceofKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken norm1_RelationalOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt357=6;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt357=1;
                }
                break;
            case GreaterThanSign:
                {
                alt357=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt357=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt357=4;
                }
                break;
            case Instanceof:
                {
                alt357=5;
                }
                break;
            case In:
                {
                alt357=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 357, 0, input);

                throw nvae;
            }

            switch (alt357) {
                case 1 :
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInstanceofKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getInKeyword_5_0()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop358:
            do {
                int alt358=2;
                int LA358_0 = input.LA(1);

                if ( (LA358_0==EqualsSignEqualsSignEqualsSign) && (synpred207_InternalN4JSXParser())) {
                    alt358=1;
                }
                else if ( (LA358_0==ExclamationMarkEqualsSignEqualsSign) && (synpred207_InternalN4JSXParser())) {
                    alt358=1;
                }
                else if ( (LA358_0==EqualsSignEqualsSign) && (synpred207_InternalN4JSXParser())) {
                    alt358=1;
                }
                else if ( (LA358_0==ExclamationMarkEqualsSign) && (synpred207_InternalN4JSXParser())) {
                    alt358=1;
                }


                switch (alt358) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop358;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop359:
            do {
                int alt359=2;
                int LA359_0 = input.LA(1);

                if ( (LA359_0==EqualsSignEqualsSignEqualsSign) && (synpred208_InternalN4JSXParser())) {
                    alt359=1;
                }
                else if ( (LA359_0==ExclamationMarkEqualsSignEqualsSign) && (synpred208_InternalN4JSXParser())) {
                    alt359=1;
                }
                else if ( (LA359_0==EqualsSignEqualsSign) && (synpred208_InternalN4JSXParser())) {
                    alt359=1;
                }
                else if ( (LA359_0==ExclamationMarkEqualsSign) && (synpred208_InternalN4JSXParser())) {
                    alt359=1;
                }


                switch (alt359) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop359;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop360:
            do {
                int alt360=2;
                int LA360_0 = input.LA(1);

                if ( (LA360_0==EqualsSignEqualsSignEqualsSign) && (synpred209_InternalN4JSXParser())) {
                    alt360=1;
                }
                else if ( (LA360_0==ExclamationMarkEqualsSignEqualsSign) && (synpred209_InternalN4JSXParser())) {
                    alt360=1;
                }
                else if ( (LA360_0==EqualsSignEqualsSign) && (synpred209_InternalN4JSXParser())) {
                    alt360=1;
                }
                else if ( (LA360_0==ExclamationMarkEqualsSign) && (synpred209_InternalN4JSXParser())) {
                    alt360=1;
                }


                switch (alt360) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop360;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        Enumerator lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_123);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_RelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop361:
            do {
                int alt361=2;
                int LA361_0 = input.LA(1);

                if ( (LA361_0==EqualsSignEqualsSignEqualsSign) && (synpred210_InternalN4JSXParser())) {
                    alt361=1;
                }
                else if ( (LA361_0==ExclamationMarkEqualsSignEqualsSign) && (synpred210_InternalN4JSXParser())) {
                    alt361=1;
                }
                else if ( (LA361_0==EqualsSignEqualsSign) && (synpred210_InternalN4JSXParser())) {
                    alt361=1;
                }
                else if ( (LA361_0==ExclamationMarkEqualsSign) && (synpred210_InternalN4JSXParser())) {
                    alt361=1;
                }


                switch (alt361) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleEqualityOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRhsRelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_rhs_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.RelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop361;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseANDExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseANDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseANDExpression=ruleBitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseANDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop362:
            do {
                int alt362=2;
                int LA362_0 = input.LA(1);

                if ( (LA362_0==Ampersand) && (synpred211_InternalN4JSXParser())) {
                    alt362=1;
                }


                switch (alt362) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop362;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop363:
            do {
                int alt363=2;
                int LA363_0 = input.LA(1);

                if ( (LA363_0==Ampersand) && (synpred212_InternalN4JSXParser())) {
                    alt363=1;
                }


                switch (alt363) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop363;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop364:
            do {
                int alt364=2;
                int LA364_0 = input.LA(1);

                if ( (LA364_0==Ampersand) && (synpred213_InternalN4JSXParser())) {
                    alt364=1;
                }


                switch (alt364) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop364;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_EqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==Ampersand) && (synpred214_InternalN4JSXParser())) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseANDExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getOpBitwiseANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseANDExpressionAccess().getRhsEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_124);
            	    lv_rhs_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.EqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseANDOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseANDOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseANDOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseANDOperator=ruleBitwiseANDOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseANDOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseANDOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Ampersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseANDOperatorAccess().getAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseXORExpression=ruleBitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=ruleBitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop366:
            do {
                int alt366=2;
                int LA366_0 = input.LA(1);

                if ( (LA366_0==CircumflexAccent) && (synpred215_InternalN4JSXParser())) {
                    alt366=1;
                }


                switch (alt366) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=ruleBitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop366;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=norm1_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop367:
            do {
                int alt367=2;
                int LA367_0 = input.LA(1);

                if ( (LA367_0==CircumflexAccent) && (synpred216_InternalN4JSXParser())) {
                    alt367=1;
                }


                switch (alt367) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=norm1_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop367;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=norm2_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop368:
            do {
                int alt368=2;
                int LA368_0 = input.LA(1);

                if ( (LA368_0==CircumflexAccent) && (synpred217_InternalN4JSXParser())) {
                    alt368=1;
                }


                switch (alt368) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=norm2_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop368;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseXORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getBitwiseANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_125);
            this_BitwiseANDExpression_0=norm3_BitwiseANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop369:
            do {
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( (LA369_0==CircumflexAccent) && (synpred218_InternalN4JSXParser())) {
                    alt369=1;
                }


                switch (alt369) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseXORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getOpBitwiseXOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseXOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseXORExpressionAccess().getRhsBitwiseANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_rhs_3_0=norm3_BitwiseANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseXORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop369;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseXOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseXOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseXOROperator=ruleBitwiseXOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseXOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,CircumflexAccent,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseXOROperatorAccess().getCircumflexAccentKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseORExpression=ruleBitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=ruleBitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop370:
            do {
                int alt370=2;
                int LA370_0 = input.LA(1);

                if ( (LA370_0==VerticalLine) && (synpred219_InternalN4JSXParser())) {
                    alt370=1;
                }


                switch (alt370) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=ruleBitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop370;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=norm1_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop371:
            do {
                int alt371=2;
                int LA371_0 = input.LA(1);

                if ( (LA371_0==VerticalLine) && (synpred220_InternalN4JSXParser())) {
                    alt371=1;
                }


                switch (alt371) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=norm1_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop371;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=norm2_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop372:
            do {
                int alt372=2;
                int LA372_0 = input.LA(1);

                if ( (LA372_0==VerticalLine) && (synpred221_InternalN4JSXParser())) {
                    alt372=1;
                }


                switch (alt372) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=norm2_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop372;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_BitwiseORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseXORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getBitwiseXORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_BitwiseXORExpression_0=norm3_BitwiseXORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseXORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop373:
            do {
                int alt373=2;
                int LA373_0 = input.LA(1);

                if ( (LA373_0==VerticalLine) && (synpred222_InternalN4JSXParser())) {
                    alt373=1;
                }


                switch (alt373) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getBitwiseORExpressionAccess().getBinaryBitwiseExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getOpBitwiseOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleBitwiseOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getBitwiseORExpressionAccess().getRhsBitwiseXORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_rhs_3_0=norm3_BitwiseXORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getBitwiseORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseXORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop373;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBitwiseOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBitwiseOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBitwiseOROperator=ruleBitwiseOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBitwiseOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,VerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getBitwiseOROperatorAccess().getVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalANDExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalANDExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalANDExpression=ruleLogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalANDExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=ruleBitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop374:
            do {
                int alt374=2;
                int LA374_0 = input.LA(1);

                if ( (LA374_0==AmpersandAmpersand) && (synpred223_InternalN4JSXParser())) {
                    alt374=1;
                }


                switch (alt374) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=ruleBitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop374;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=norm1_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop375:
            do {
                int alt375=2;
                int LA375_0 = input.LA(1);

                if ( (LA375_0==AmpersandAmpersand) && (synpred224_InternalN4JSXParser())) {
                    alt375=1;
                }


                switch (alt375) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=norm1_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop375;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=norm2_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop376:
            do {
                int alt376=2;
                int LA376_0 = input.LA(1);

                if ( (LA376_0==AmpersandAmpersand) && (synpred225_InternalN4JSXParser())) {
                    alt376=1;
                }


                switch (alt376) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=norm2_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop376;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_LogicalANDExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BitwiseORExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getBitwiseORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_127);
            this_BitwiseORExpression_0=norm3_BitwiseORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_BitwiseORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop377:
            do {
                int alt377=2;
                int LA377_0 = input.LA(1);

                if ( (LA377_0==AmpersandAmpersand) && (synpred226_InternalN4JSXParser())) {
                    alt377=1;
                }


                switch (alt377) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalANDExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getOpLogicalANDOperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalANDOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDOperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalANDExpressionAccess().getRhsBitwiseORExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_rhs_3_0=norm3_BitwiseORExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalANDExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.BitwiseORExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop377;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLogicalANDOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalANDOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalANDOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalANDOperator=ruleLogicalANDOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalANDOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLogicalANDOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLogicalANDOperatorAccess().getAmpersandAmpersandKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalORExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalORExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalORExpression=ruleLogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalORExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=ruleLogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop378:
            do {
                int alt378=2;
                int LA378_0 = input.LA(1);

                if ( (LA378_0==VerticalLineVerticalLine) && (synpred227_InternalN4JSXParser())) {
                    alt378=1;
                }


                switch (alt378) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=ruleLogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop378;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=norm1_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop379:
            do {
                int alt379=2;
                int LA379_0 = input.LA(1);

                if ( (LA379_0==VerticalLineVerticalLine) && (synpred228_InternalN4JSXParser())) {
                    alt379=1;
                }


                switch (alt379) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=norm1_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop379;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=norm2_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop380:
            do {
                int alt380=2;
                int LA380_0 = input.LA(1);

                if ( (LA380_0==VerticalLineVerticalLine) && (synpred229_InternalN4JSXParser())) {
                    alt380=1;
                }


                switch (alt380) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=norm2_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop380;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_LogicalORExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalANDExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getLogicalANDExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_128);
            this_LogicalANDExpression_0=norm3_LogicalANDExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalANDExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            loop381:
            do {
                int alt381=2;
                int LA381_0 = input.LA(1);

                if ( (LA381_0==VerticalLineVerticalLine) && (synpred230_InternalN4JSXParser())) {
                    alt381=1;
                }


                switch (alt381) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getLogicalORExpressionAccess().getBinaryLogicalExpressionLhsAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getOpLogicalOROperatorParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_op_2_0=ruleLogicalOROperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"op",
            	              		lv_op_2_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalOROperator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getLogicalORExpressionAccess().getRhsLogicalANDExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_rhs_3_0=norm3_LogicalANDExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getLogicalORExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"eu.numberfour.n4js.N4JS.LogicalANDExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop381;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleLogicalOROperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLogicalOROperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOROperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLogicalOROperator=ruleLogicalOROperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOROperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleLogicalOROperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getLogicalOROperatorAccess().getVerticalLineVerticalLineKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleConditionalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalExpression=ruleConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=ruleLogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt382=2;
            int LA382_0 = input.LA(1);

            if ( (LA382_0==QuestionMark) && (synpred231_InternalN4JSXParser())) {
                alt382=1;
            }
            switch (alt382) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=norm1_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==QuestionMark) && (synpred232_InternalN4JSXParser())) {
                alt383=1;
            }
            switch (alt383) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=norm2_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==QuestionMark) && (synpred233_InternalN4JSXParser())) {
                alt384=1;
            }
            switch (alt384) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_ConditionalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_LogicalORExpression_0 = null;

        EObject lv_trueExpression_3_0 = null;

        EObject lv_falseExpression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConditionalExpressionAccess().getLogicalORExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_129);
            this_LogicalORExpression_0=norm3_LogicalORExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_LogicalORExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt385=2;
            int LA385_0 = input.LA(1);

            if ( (LA385_0==QuestionMark) && (synpred234_InternalN4JSXParser())) {
                alt385=1;
            }
            switch (alt385) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getConditionalExpressionAccess().getConditionalExpressionExpressionAction_1_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,QuestionMark,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getTrueExpressionAssignmentExpressionParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_trueExpression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"trueExpression",
                              		lv_trueExpression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,Colon,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getFalseExpressionAssignmentExpressionParserRuleCall_1_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_falseExpression_5_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"falseExpression",
                              		lv_falseExpression_5_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignmentExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentExpression=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_ConditionalExpression_3 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_rhs_6_0 = null;


         enterRule(); 
            
        try {
            {
            int alt387=4;
            alt387 = dfa387.predict(input);
            switch (alt387) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=ruleAwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=rulePromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=ruleArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_3=ruleConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt386=2;
                    alt386 = dfa386.predict(input);
                    switch (alt386) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_11);
                            lv_op_5_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_5_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_6_0=ruleAssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_ConditionalExpression_3 = null;

        AntlrDatatypeRuleToken lv_op_5_0 = null;

        EObject lv_rhs_6_0 = null;


         enterRule(); 
            
        try {
            {
            int alt389=4;
            alt389 = dfa389.predict(input);
            switch (alt389) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm1_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm1_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm1_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_3=norm1_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt388=2;
                    alt388 = dfa388.predict(input);
                    switch (alt388) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_11);
                            lv_op_5_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_5_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_6_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_YieldExpression_3 = null;

        EObject this_ConditionalExpression_4 = null;

        AntlrDatatypeRuleToken lv_op_6_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            {
            int alt391=5;
            alt391 = dfa391.predict(input);
            switch (alt391) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm2_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm2_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm2_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getYieldExpressionParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_YieldExpression_3=ruleYieldExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_YieldExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_4=norm2_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt390=2;
                    alt390 = dfa390.predict(input);
                    switch (alt390) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_11);
                            lv_op_6_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_7_0=norm2_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_7_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AssignmentExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AwaitExpression_0 = null;

        EObject this_PromisifyExpression_1 = null;

        EObject this_ArrowExpression_2 = null;

        EObject this_YieldExpression_3 = null;

        EObject this_ConditionalExpression_4 = null;

        AntlrDatatypeRuleToken lv_op_6_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            {
            int alt393=5;
            alt393 = dfa393.predict(input);
            switch (alt393) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAwaitExpressionParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AwaitExpression_0=norm3_AwaitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AwaitExpression_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getPromisifyExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_PromisifyExpression_1=norm3_PromisifyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_PromisifyExpression_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getArrowExpressionParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowExpression_2=norm3_ArrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowExpression_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getYieldExpressionParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_YieldExpression_3=norm1_YieldExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_YieldExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_130);
                    this_ConditionalExpression_4=norm3_ConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ConditionalExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt392=2;
                    alt392 = dfa392.predict(input);
                    switch (alt392) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionLhsAction_4_1_0_0_0(),
                                          current);
                                  
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOpAssignmentOperatorParserRuleCall_4_1_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_11);
                            lv_op_6_0=ruleAssignmentOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"op",
                                      		lv_op_6_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentOperator");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRhsAssignmentExpressionParserRuleCall_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_rhs_7_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"rhs",
                                      		lv_rhs_7_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleYieldExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleYieldExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getYieldExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleYieldExpression=ruleYieldExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleYieldExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleYieldExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_many_2_0=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYieldExpressionAccess().getYieldExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Yield,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYieldExpressionAccess().getYieldKeyword_1());
                  
            }
            int alt394=2;
            alt394 = dfa394.predict(input);
            switch (alt394) {
                case 1 :
                    {
                    {
                    lv_many_2_0=(Token)match(input,Asterisk,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_many_2_0, grammarAccess.getYieldExpressionAccess().getManyAsteriskKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getYieldExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "many", true, "*");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt395=2;
            alt395 = dfa395.predict(input);
            switch (alt395) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYieldExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYieldExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_YieldExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_many_2_0=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getYieldExpressionAccess().getYieldExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Yield,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {
               promoteEOL(); 
            }
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getYieldExpressionAccess().getYieldKeyword_1());
                  
            }
            int alt396=2;
            alt396 = dfa396.predict(input);
            switch (alt396) {
                case 1 :
                    {
                    {
                    lv_many_2_0=(Token)match(input,Asterisk,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_many_2_0, grammarAccess.getYieldExpressionAccess().getManyAsteriskKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getYieldExpressionRule());
                      	        }
                             		setWithLastConsumed(current, "many", true, "*");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt397=2;
            alt397 = dfa397.predict(input);
            switch (alt397) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getYieldExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getYieldExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleAssignmentOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAssignmentOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAssignmentOperator=ruleAssignmentOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignmentOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleAssignmentOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt399=11;
            switch ( input.LA(1) ) {
            case EqualsSign:
                {
                alt399=1;
                }
                break;
            case AsteriskEqualsSign:
                {
                alt399=2;
                }
                break;
            case SolidusEqualsSign:
                {
                alt399=3;
                }
                break;
            case PercentSignEqualsSign:
                {
                alt399=4;
                }
                break;
            case PlusSignEqualsSign:
                {
                alt399=5;
                }
                break;
            case HyphenMinusEqualsSign:
                {
                alt399=6;
                }
                break;
            case LessThanSignLessThanSignEqualsSign:
                {
                alt399=7;
                }
                break;
            case GreaterThanSign:
                {
                alt399=8;
                }
                break;
            case AmpersandEqualsSign:
                {
                alt399=9;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt399=10;
                }
                break;
            case VerticalLineEqualsSign:
                {
                alt399=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 399, 0, input);

                throw nvae;
            }

            switch (alt399) {
                case 1 :
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,LessThanSignLessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignKeyword_7_0()); 
                          
                    }
                    int alt398=2;
                    int LA398_0 = input.LA(1);

                    if ( (LA398_0==GreaterThanSign) ) {
                        alt398=1;
                    }
                    switch (alt398) {
                        case 1 :
                            {
                            kw=(Token)match(input,GreaterThanSign,FOLLOW_133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current.merge(kw);
                                      newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignKeyword_7_1()); 
                                  
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignEqualsSignKeyword_7_2()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,AmpersandEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,VerticalLineEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_10()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAwaitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAwaitExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAwaitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAwaitExpression=ruleAwaitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAwaitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_AwaitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAwaitExpressionAccess().getAwaitExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Await,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAwaitExpressionAccess().getAwaitKeyword_0_0_1());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAwaitExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAwaitExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_2_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePromisifyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePromisifyExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPromisifyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePromisifyExpression=rulePromisifyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePromisifyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_PromisifyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expression_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPromisifyExpressionAccess().getPromisifyExpressionAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPromisifyExpressionAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            otherlv_2=(Token)match(input,Promisify,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPromisifyExpressionAccess().getPromisifyKeyword_0_0_2());
                  
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPromisifyExpressionAccess().getExpressionAssignmentExpressionParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expression_3_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPromisifyExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_3_0, 
                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=ruleAssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt401=2;
            int LA401_0 = input.LA(1);

            if ( (LA401_0==Comma) ) {
                alt401=1;
            }
            switch (alt401) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=ruleAssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop400:
                    do {
                        int alt400=2;
                        int LA400_0 = input.LA(1);

                        if ( (LA400_0==Comma) ) {
                            alt400=1;
                        }


                        switch (alt400) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=ruleAssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop400;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=norm1_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==Comma) ) {
                alt403=1;
            }
            switch (alt403) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop402:
                    do {
                        int alt402=2;
                        int LA402_0 = input.LA(1);

                        if ( (LA402_0==Comma) ) {
                            alt402=1;
                        }


                        switch (alt402) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=norm1_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop402;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=norm2_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt405=2;
            int LA405_0 = input.LA(1);

            if ( (LA405_0==Comma) ) {
                alt405=1;
            }
            switch (alt405) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=norm2_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop404:
                    do {
                        int alt404=2;
                        int LA404_0 = input.LA(1);

                        if ( (LA404_0==Comma) ) {
                            alt404=1;
                        }


                        switch (alt404) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=norm2_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop404;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_Expression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_AssignmentExpression_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_44);
            this_AssignmentExpression_0=norm3_AssignmentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AssignmentExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt407=2;
            int LA407_0 = input.LA(1);

            if ( (LA407_0==Comma) ) {
                alt407=1;
            }
            switch (alt407) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getExpressionAccess().getCommaExpressionExprsAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_2=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getCommaKeyword_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_exprs_3_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                      	        }
                             		add(
                             			current, 
                             			"exprs",
                              		lv_exprs_3_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop406:
                    do {
                        int alt406=2;
                        int LA406_0 = input.LA(1);

                        if ( (LA406_0==Comma) ) {
                            alt406=1;
                        }


                        switch (alt406) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getExpressionAccess().getCommaKeyword_1_3_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getExpressionAccess().getExprsAssignmentExpressionParserRuleCall_1_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_exprs_5_0=norm3_AssignmentExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"exprs",
                    	              		lv_exprs_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop406;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateLiteral=ruleTemplateLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_5_0 = null;

        EObject lv_segments_6_0 = null;

        EObject lv_segments_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateLiteralAccess().getTemplateLiteralAction_0(),
                          current);
                  
            }

            }
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
                alt411=1;
            }
            else if ( (LA411_0==RULE_TEMPLATE_HEAD) ) {
                alt411=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 411, 0, input);

                throw nvae;
            }
            switch (alt411) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsNoSubstitutionTemplateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_1_0=ruleNoSubstitutionTemplate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_1_0, 
                              		"eu.numberfour.n4js.N4JS.NoSubstitutionTemplate");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateHeadParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_135);
                    lv_segments_2_0=ruleTemplateHead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_2_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateHead");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt408=2;
                    int LA408_0 = input.LA(1);

                    if ( ((LA408_0>=Intersection && LA408_0<=Implements)||(LA408_0>=Promisify && LA408_0<=Abstract)||(LA408_0>=External && LA408_0<=Function)||(LA408_0>=Private && LA408_0<=Delete)||LA408_0==Public||LA408_0==Static||(LA408_0>=Target && LA408_0<=Await)||LA408_0==Class||(LA408_0>=False && LA408_0<=Super)||LA408_0==Union||(LA408_0>=Yield && LA408_0<=This)||(LA408_0>=From && LA408_0<=Void)||(LA408_0>=Get && LA408_0<=Set)||LA408_0==PlusSignPlusSign||LA408_0==HyphenMinusHyphenMinus||LA408_0==SolidusEqualsSign||LA408_0==As||LA408_0==Of||LA408_0==ExclamationMark||LA408_0==LeftParenthesis||(LA408_0>=Asterisk && LA408_0<=PlusSign)||LA408_0==HyphenMinus||LA408_0==Solidus||LA408_0==LessThanSign||(LA408_0>=CommercialAt && LA408_0<=LeftSquareBracket)||LA408_0==LeftCurlyBracket||LA408_0==Tilde||LA408_0==RULE_DOUBLE||(LA408_0>=RULE_HEX_INT && LA408_0<=RULE_LEGACY_OCTAL_INT)||LA408_0==RULE_SCIENTIFIC_INT||LA408_0==RULE_IDENTIFIER||LA408_0==RULE_STRING||(LA408_0>=RULE_TEMPLATE_HEAD && LA408_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA408_0==RULE_INT) ) {
                        alt408=1;
                    }
                    switch (alt408) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_135);
                            lv_segments_3_0=norm1_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"segments",
                                      		lv_segments_3_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_136);
                    ruleTemplateExpressionEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    loop410:
                    do {
                        int alt410=2;
                        int LA410_0 = input.LA(1);

                        if ( (LA410_0==RULE_TEMPLATE_MIDDLE) ) {
                            alt410=1;
                        }


                        switch (alt410) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateMiddleParserRuleCall_1_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_135);
                    	    lv_segments_5_0=ruleTemplateMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"segments",
                    	              		lv_segments_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateMiddle");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    int alt409=2;
                    	    int LA409_0 = input.LA(1);

                    	    if ( ((LA409_0>=Intersection && LA409_0<=Implements)||(LA409_0>=Promisify && LA409_0<=Abstract)||(LA409_0>=External && LA409_0<=Function)||(LA409_0>=Private && LA409_0<=Delete)||LA409_0==Public||LA409_0==Static||(LA409_0>=Target && LA409_0<=Await)||LA409_0==Class||(LA409_0>=False && LA409_0<=Super)||LA409_0==Union||(LA409_0>=Yield && LA409_0<=This)||(LA409_0>=From && LA409_0<=Void)||(LA409_0>=Get && LA409_0<=Set)||LA409_0==PlusSignPlusSign||LA409_0==HyphenMinusHyphenMinus||LA409_0==SolidusEqualsSign||LA409_0==As||LA409_0==Of||LA409_0==ExclamationMark||LA409_0==LeftParenthesis||(LA409_0>=Asterisk && LA409_0<=PlusSign)||LA409_0==HyphenMinus||LA409_0==Solidus||LA409_0==LessThanSign||(LA409_0>=CommercialAt && LA409_0<=LeftSquareBracket)||LA409_0==LeftCurlyBracket||LA409_0==Tilde||LA409_0==RULE_DOUBLE||(LA409_0>=RULE_HEX_INT && LA409_0<=RULE_LEGACY_OCTAL_INT)||LA409_0==RULE_SCIENTIFIC_INT||LA409_0==RULE_IDENTIFIER||LA409_0==RULE_STRING||(LA409_0>=RULE_TEMPLATE_HEAD && LA409_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA409_0==RULE_INT) ) {
                    	        alt409=1;
                    	    }
                    	    switch (alt409) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_3_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_135);
                    	            lv_segments_6_0=norm1_Expression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"segments",
                    	                      		lv_segments_6_0, 
                    	                      		"eu.numberfour.n4js.N4JS.Expression");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_3_2()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_136);
                    	    ruleTemplateExpressionEnd();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop410;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateTailParserRuleCall_1_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_8_0=ruleTemplateTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_8_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateTail");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_TemplateLiteral() throws RecognitionException {
        EObject current = null;

        EObject lv_segments_1_0 = null;

        EObject lv_segments_2_0 = null;

        EObject lv_segments_3_0 = null;

        EObject lv_segments_5_0 = null;

        EObject lv_segments_6_0 = null;

        EObject lv_segments_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateLiteralAccess().getTemplateLiteralAction_0(),
                          current);
                  
            }

            }
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
                alt415=1;
            }
            else if ( (LA415_0==RULE_TEMPLATE_HEAD) ) {
                alt415=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 415, 0, input);

                throw nvae;
            }
            switch (alt415) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsNoSubstitutionTemplateParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_1_0=ruleNoSubstitutionTemplate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_1_0, 
                              		"eu.numberfour.n4js.N4JS.NoSubstitutionTemplate");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateHeadParserRuleCall_1_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_135);
                    lv_segments_2_0=ruleTemplateHead();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_2_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateHead");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    int alt412=2;
                    int LA412_0 = input.LA(1);

                    if ( ((LA412_0>=Intersection && LA412_0<=Implements)||(LA412_0>=Promisify && LA412_0<=Abstract)||(LA412_0>=External && LA412_0<=Function)||(LA412_0>=Private && LA412_0<=Delete)||LA412_0==Public||LA412_0==Static||(LA412_0>=Target && LA412_0<=Await)||LA412_0==Class||(LA412_0>=False && LA412_0<=Super)||LA412_0==Union||(LA412_0>=Yield && LA412_0<=This)||(LA412_0>=From && LA412_0<=Void)||(LA412_0>=Get && LA412_0<=Set)||LA412_0==PlusSignPlusSign||LA412_0==HyphenMinusHyphenMinus||LA412_0==SolidusEqualsSign||LA412_0==As||LA412_0==Of||LA412_0==ExclamationMark||LA412_0==LeftParenthesis||(LA412_0>=Asterisk && LA412_0<=PlusSign)||LA412_0==HyphenMinus||LA412_0==Solidus||LA412_0==LessThanSign||(LA412_0>=CommercialAt && LA412_0<=LeftSquareBracket)||LA412_0==LeftCurlyBracket||LA412_0==Tilde||LA412_0==RULE_DOUBLE||(LA412_0>=RULE_HEX_INT && LA412_0<=RULE_LEGACY_OCTAL_INT)||LA412_0==RULE_SCIENTIFIC_INT||LA412_0==RULE_IDENTIFIER||LA412_0==RULE_STRING||(LA412_0>=RULE_TEMPLATE_HEAD && LA412_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA412_0==RULE_INT) ) {
                        alt412=1;
                    }
                    switch (alt412) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_135);
                            lv_segments_3_0=norm3_Expression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"segments",
                                      		lv_segments_3_0, 
                                      		"eu.numberfour.n4js.N4JS.Expression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_136);
                    ruleTemplateExpressionEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              afterParserOrEnumRuleCall();
                          
                    }
                    loop414:
                    do {
                        int alt414=2;
                        int LA414_0 = input.LA(1);

                        if ( (LA414_0==RULE_TEMPLATE_MIDDLE) ) {
                            alt414=1;
                        }


                        switch (alt414) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateMiddleParserRuleCall_1_1_3_0_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_135);
                    	    lv_segments_5_0=ruleTemplateMiddle();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"segments",
                    	              		lv_segments_5_0, 
                    	              		"eu.numberfour.n4js.N4JS.TemplateMiddle");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    int alt413=2;
                    	    int LA413_0 = input.LA(1);

                    	    if ( ((LA413_0>=Intersection && LA413_0<=Implements)||(LA413_0>=Promisify && LA413_0<=Abstract)||(LA413_0>=External && LA413_0<=Function)||(LA413_0>=Private && LA413_0<=Delete)||LA413_0==Public||LA413_0==Static||(LA413_0>=Target && LA413_0<=Await)||LA413_0==Class||(LA413_0>=False && LA413_0<=Super)||LA413_0==Union||(LA413_0>=Yield && LA413_0<=This)||(LA413_0>=From && LA413_0<=Void)||(LA413_0>=Get && LA413_0<=Set)||LA413_0==PlusSignPlusSign||LA413_0==HyphenMinusHyphenMinus||LA413_0==SolidusEqualsSign||LA413_0==As||LA413_0==Of||LA413_0==ExclamationMark||LA413_0==LeftParenthesis||(LA413_0>=Asterisk && LA413_0<=PlusSign)||LA413_0==HyphenMinus||LA413_0==Solidus||LA413_0==LessThanSign||(LA413_0>=CommercialAt && LA413_0<=LeftSquareBracket)||LA413_0==LeftCurlyBracket||LA413_0==Tilde||LA413_0==RULE_DOUBLE||(LA413_0>=RULE_HEX_INT && LA413_0<=RULE_LEGACY_OCTAL_INT)||LA413_0==RULE_SCIENTIFIC_INT||LA413_0==RULE_IDENTIFIER||LA413_0==RULE_STRING||(LA413_0>=RULE_TEMPLATE_HEAD && LA413_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA413_0==RULE_INT) ) {
                    	        alt413=1;
                    	    }
                    	    switch (alt413) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {
                    	               
                    	              	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsExpressionParserRuleCall_1_1_3_1_0()); 
                    	              	    
                    	            }
                    	            pushFollow(FOLLOW_135);
                    	            lv_segments_6_0=norm3_Expression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              	        if (current==null) {
                    	              	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                    	              	        }
                    	                     		add(
                    	                     			current, 
                    	                     			"segments",
                    	                      		lv_segments_6_0, 
                    	                      		"eu.numberfour.n4js.N4JS.Expression");
                    	              	        afterParserOrEnumRuleCall();
                    	              	    
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    if ( state.backtracking==0 ) {
                    	       
                    	              newCompositeNode(grammarAccess.getTemplateLiteralAccess().getTemplateExpressionEndParserRuleCall_1_1_3_2()); 
                    	          
                    	    }
                    	    pushFollow(FOLLOW_136);
                    	    ruleTemplateExpressionEnd();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	              afterParserOrEnumRuleCall();
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop414;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTemplateLiteralAccess().getSegmentsTemplateTailParserRuleCall_1_1_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_segments_8_0=ruleTemplateTail();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTemplateLiteralRule());
                      	        }
                             		add(
                             			current, 
                             			"segments",
                              		lv_segments_8_0, 
                              		"eu.numberfour.n4js.N4JS.TemplateTail");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateExpressionEnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateExpressionEnd = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateExpressionEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateExpressionEnd=ruleTemplateExpressionEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateExpressionEnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateExpressionEnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); setInTemplateSegment();
            
        try {
            {
            kw=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTemplateExpressionEndAccess().getRightCurlyBracketKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNoSubstitutionTemplate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNoSubstitutionTemplate = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNoSubstitutionTemplateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNoSubstitutionTemplate=ruleNoSubstitutionTemplate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNoSubstitutionTemplate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNoSubstitutionTemplate() throws RecognitionException {
        EObject current = null;

        Token lv_rawValue_1_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNoSubstitutionTemplateAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            lv_rawValue_1_0=(Token)match(input,RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_rawValue_1_0, grammarAccess.getNoSubstitutionTemplateAccess().getRawValueNO_SUBSTITUTION_TEMPLATE_LITERALTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNoSubstitutionTemplateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.NO_SUBSTITUTION_TEMPLATE_LITERAL");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateHead() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateHead = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateHeadRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateHead=ruleTemplateHead();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateHead; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateHead() throws RecognitionException {
        EObject current = null;

        Token lv_rawValue_1_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateHeadAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            lv_rawValue_1_0=(Token)match(input,RULE_TEMPLATE_HEAD,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_rawValue_1_0, grammarAccess.getTemplateHeadAccess().getRawValueTEMPLATE_HEADTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateHeadRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TEMPLATE_HEAD");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateTail() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateTail = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTailRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTail=ruleTemplateTail();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTail; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateTail() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_rawValue_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateTailAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateTailAccess().getRawValueTemplateTailLiteralParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rawValue_1_0=ruleTemplateTailLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateTailRule());
              	        }
                     		set(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TemplateTailLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTemplateMiddle() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemplateMiddle = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateMiddleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateMiddle=ruleTemplateMiddle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateMiddle; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTemplateMiddle() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_rawValue_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTemplateMiddleAccess().getTemplateSegmentAction_0(),
                          current);
                  
            }

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateMiddleAccess().getRawValueTemplateMiddleLiteralParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_rawValue_1_0=ruleTemplateMiddleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateMiddleRule());
              	        }
                     		set(
                     			current, 
                     			"rawValue",
                      		lv_rawValue_1_0, 
                      		"eu.numberfour.n4js.N4JS.TemplateMiddleLiteral");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_NumericLiteral_0 = null;

        EObject this_BooleanLiteral_1 = null;

        EObject this_StringLiteral_2 = null;

        EObject this_NullLiteral_3 = null;

        EObject this_RegularExpressionLiteral_4 = null;


         enterRule(); 
            
        try {
            {
            int alt416=5;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_BINARY_INT:
            case RULE_OCTAL_INT:
            case RULE_LEGACY_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt416=1;
                }
                break;
            case False:
            case True:
                {
                alt416=2;
                }
                break;
            case RULE_STRING:
                {
                alt416=3;
                }
                break;
            case Null:
                {
                alt416=4;
                }
                break;
            case SolidusEqualsSign:
            case Solidus:
                {
                alt416=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 416, 0, input);

                throw nvae;
            }

            switch (alt416) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NumericLiteral_0=ruleNumericLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NumericLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanLiteral_1=ruleBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BooleanLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringLiteral_2=ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_NullLiteral_3=ruleNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_NullLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getLiteralAccess().getRegularExpressionLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_RegularExpressionLiteral_4=ruleRegularExpressionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_RegularExpressionLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNullLiteral=ruleNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getNullLiteralAccess().getNullLiteralAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getNullLiteralAccess().getNullKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanLiteral=ruleBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_true_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
                          current);
                  
            }

            }
            int alt417=2;
            int LA417_0 = input.LA(1);

            if ( (LA417_0==True) ) {
                alt417=1;
            }
            else if ( (LA417_0==False) ) {
                alt417=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 417, 0, input);

                throw nvae;
            }
            switch (alt417) {
                case 1 :
                    {
                    {
                    {
                    lv_true_1_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_true_1_0, grammarAccess.getBooleanLiteralAccess().getTrueTrueKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "true", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    otherlv_2=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStringLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.STRING");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumericLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteral=ruleNumericLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleNumericLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_DoubleLiteral_0 = null;

        EObject this_IntLiteral_1 = null;

        EObject this_BinaryIntLiteral_2 = null;

        EObject this_OctalIntLiteral_3 = null;

        EObject this_LegacyOctalIntLiteral_4 = null;

        EObject this_HexIntLiteral_5 = null;

        EObject this_ScientificIntLiteral_6 = null;


         enterRule(); 
            
        try {
            {
            int alt418=7;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
                {
                alt418=1;
                }
                break;
            case RULE_INT:
                {
                alt418=2;
                }
                break;
            case RULE_BINARY_INT:
                {
                alt418=3;
                }
                break;
            case RULE_OCTAL_INT:
                {
                alt418=4;
                }
                break;
            case RULE_LEGACY_OCTAL_INT:
                {
                alt418=5;
                }
                break;
            case RULE_HEX_INT:
                {
                alt418=6;
                }
                break;
            case RULE_SCIENTIFIC_INT:
                {
                alt418=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 418, 0, input);

                throw nvae;
            }

            switch (alt418) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getDoubleLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoubleLiteral_0=ruleDoubleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_DoubleLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getIntLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntLiteral_1=ruleIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntLiteral_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getBinaryIntLiteralParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BinaryIntLiteral_2=ruleBinaryIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BinaryIntLiteral_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getOctalIntLiteralParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctalIntLiteral_3=ruleOctalIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_OctalIntLiteral_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getLegacyOctalIntLiteralParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LegacyOctalIntLiteral_4=ruleLegacyOctalIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LegacyOctalIntLiteral_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getHexIntLiteralParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_HexIntLiteral_5=ruleHexIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_HexIntLiteral_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getNumericLiteralAccess().getScientificIntLiteralParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScientificIntLiteral_6=ruleScientificIntLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ScientificIntLiteral_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleDoubleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDoubleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoubleLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoubleLiteral=ruleDoubleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoubleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleDoubleLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDoubleLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.DOUBLE");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntLiteral=ruleIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOctalIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctalIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOctalIntLiteral=ruleOctalIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOctalIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getOctalIntLiteralAccess().getValueOCTAL_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOctalIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.OCTAL_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLegacyOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyOctalIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyOctalIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLegacyOctalIntLiteral=ruleLegacyOctalIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyOctalIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLegacyOctalIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_LEGACY_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getLegacyOctalIntLiteralAccess().getValueLEGACY_OCTAL_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getLegacyOctalIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.LEGACY_OCTAL_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleHexIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHexIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHexIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHexIntLiteral=ruleHexIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHexIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleHexIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_HEX_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getHexIntLiteralAccess().getValueHEX_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHexIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.HEX_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBinaryIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinaryIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinaryIntLiteral=ruleBinaryIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinaryIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBinaryIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_BINARY_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getBinaryIntLiteralAccess().getValueBINARY_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getBinaryIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.BINARY_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScientificIntLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScientificIntLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScientificIntLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScientificIntLiteral=ruleScientificIntLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScientificIntLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScientificIntLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;

         enterRule(); 
            
        try {
            {
            {
            {
            lv_value_0_0=(Token)match(input,RULE_SCIENTIFIC_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_0_0, grammarAccess.getScientificIntLiteralAccess().getValueSCIENTIFIC_INTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getScientificIntLiteralRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.SCIENTIFIC_INT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleRegularExpressionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRegularExpressionLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRegularExpressionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRegularExpressionLiteral=ruleRegularExpressionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRegularExpressionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleRegularExpressionLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getRegularExpressionLiteralAccess().getValueREGEX_LITERALParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleREGEX_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getRegularExpressionLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"eu.numberfour.n4js.N4JS.REGEX_LITERAL");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleNumericLiteralAsString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumericLiteralAsString = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumericLiteralAsStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumericLiteralAsString=ruleNumericLiteralAsString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumericLiteralAsString.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleNumericLiteralAsString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DOUBLE_0=null;
        Token this_INT_1=null;
        Token this_OCTAL_INT_2=null;
        Token this_HEX_INT_3=null;
        Token this_SCIENTIFIC_INT_4=null;

         enterRule(); 
            
        try {
            {
            int alt419=5;
            switch ( input.LA(1) ) {
            case RULE_DOUBLE:
                {
                alt419=1;
                }
                break;
            case RULE_INT:
                {
                alt419=2;
                }
                break;
            case RULE_OCTAL_INT:
                {
                alt419=3;
                }
                break;
            case RULE_HEX_INT:
                {
                alt419=4;
                }
                break;
            case RULE_SCIENTIFIC_INT:
                {
                alt419=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 419, 0, input);

                throw nvae;
            }

            switch (alt419) {
                case 1 :
                    {
                    this_DOUBLE_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_DOUBLE_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_DOUBLE_0, grammarAccess.getNumericLiteralAsStringAccess().getDOUBLETerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_INT_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_INT_1, grammarAccess.getNumericLiteralAsStringAccess().getINTTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    this_OCTAL_INT_2=(Token)match(input,RULE_OCTAL_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_OCTAL_INT_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_OCTAL_INT_2, grammarAccess.getNumericLiteralAsStringAccess().getOCTAL_INTTerminalRuleCall_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    this_HEX_INT_3=(Token)match(input,RULE_HEX_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_HEX_INT_3);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_HEX_INT_3, grammarAccess.getNumericLiteralAsStringAccess().getHEX_INTTerminalRuleCall_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    this_SCIENTIFIC_INT_4=(Token)match(input,RULE_SCIENTIFIC_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_SCIENTIFIC_INT_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_SCIENTIFIC_INT_4, grammarAccess.getNumericLiteralAsStringAccess().getSCIENTIFIC_INTTerminalRuleCall_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleIdentifierOrThis() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierOrThis = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierOrThisRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierOrThis=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierOrThis.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleIdentifierOrThis() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt420=4;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt420=1;
                }
                break;
            case This:
                {
                alt420=2;
                }
                break;
            case Promisify:
                {
                alt420=3;
                }
                break;
            case Target:
                {
                alt420=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 420, 0, input);

                throw nvae;
            }

            switch (alt420) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierOrThisAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getPromisifyKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getIdentifierOrThisAccess().getTargetKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleAnnotationName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnnotationName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationName=ruleAnnotationName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleAnnotationName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt421=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt421=1;
                }
                break;
            case This:
                {
                alt421=2;
                }
                break;
            case Target:
                {
                alt421=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 421, 0, input);

                throw nvae;
            }

            switch (alt421) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getAnnotationNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAnnotationNameAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAnnotationNameAccess().getTargetKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleREGEX_LITERAL() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleREGEX_LITERAL = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREGEX_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREGEX_LITERAL=ruleREGEX_LITERAL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREGEX_LITERAL.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleREGEX_LITERAL() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_REGEX_TAIL_2=null;

         enterRule(); setInRegularExpression();
            
        try {
            {
            {
            int alt422=2;
            int LA422_0 = input.LA(1);

            if ( (LA422_0==Solidus) ) {
                alt422=1;
            }
            else if ( (LA422_0==SolidusEqualsSign) ) {
                alt422=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 422, 0, input);

                throw nvae;
            }
            switch (alt422) {
                case 1 :
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getREGEX_LITERALAccess().getSolidusKeyword_0_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,SolidusEqualsSign,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getREGEX_LITERALAccess().getSolidusEqualsSignKeyword_0_1()); 
                          
                    }

                    }
                    break;

            }
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==RULE_REGEX_TAIL) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    {
                    this_REGEX_TAIL_2=(Token)match(input,RULE_REGEX_TAIL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_REGEX_TAIL_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_REGEX_TAIL_2, grammarAccess.getREGEX_LITERALAccess().getREGEX_TAILTerminalRuleCall_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateTailLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateTailLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTailLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTailLiteral=ruleTemplateTailLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTailLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateTailLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_TEMPLATE_END_0=null;

         enterRule(); 
            
        try {
            {
            int alt424=2;
            int LA424_0 = input.LA(1);

            if ( (LA424_0==RULE_TEMPLATE_END) ) {
                alt424=1;
            }
            switch (alt424) {
                case 1 :
                    {
                    this_TEMPLATE_END_0=(Token)match(input,RULE_TEMPLATE_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_TEMPLATE_END_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_TEMPLATE_END_0, grammarAccess.getTemplateTailLiteralAccess().getTEMPLATE_ENDTerminalRuleCall()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTemplateMiddleLiteral() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTemplateMiddleLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateMiddleLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateMiddleLiteral=ruleTemplateMiddleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateMiddleLiteral.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTemplateMiddleLiteral() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_TEMPLATE_MIDDLE_0=null;

         enterRule(); 
            
        try {
            {
            this_TEMPLATE_MIDDLE_0=(Token)match(input,RULE_TEMPLATE_MIDDLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_TEMPLATE_MIDDLE_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_TEMPLATE_MIDDLE_0, grammarAccess.getTemplateMiddleLiteralAccess().getTEMPLATE_MIDDLETerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleSemi() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSemi = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSemiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSemi=ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSemi.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleSemi() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
        		int marker = input.mark();
        		promoteEOL();    
        try {
            int alt425=3;
            switch ( input.LA(1) ) {
            case Semicolon:
                {
                alt425=1;
                }
                break;
            case EOF:
            case RULE_ML_COMMENT:
            case RULE_EOL:
                {
                alt425=2;
                }
                break;
            case RightCurlyBracket:
                {
                alt425=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 425, 0, input);

                throw nvae;
            }

            switch (alt425) {
                case 1 :
                    {
                    kw=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSemiAccess().getSemicolonKeyword()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)input.LT(1);
                    if ( input.LA(1)==EOF||input.LA(1)==RULE_ML_COMMENT||input.LA(1)==RULE_EOL ) {
                        input.consume();
                        state.errorRecovery=false;state.failed=false;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        MismatchedSetException mse = new MismatchedSetException(null,input);
                        throw mse;
                    }

                    if ( state.backtracking==0 ) {

                              addASIMessage();
                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getSemiAccess().getSemicolonKeyword()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( !(( forcedRewind(marker) )) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleSemi", " forcedRewind(marker) ");
                    }

                    }
                    break;

            }
            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
   // REPLACEMENT ruleNoLineTerminator.java.replacement START
 public final EObject ruleNoLineTerminator(EObject in_current) throws RecognitionException {
    	EObject current = in_current;
    	if (state.backtracking==0) {
    		promoteEOL();
    	}
    	if (hasDisallowedEOL()) { 
        	if (state.backtracking==0) {
        		NoViableAltException nvae = new NoViableAltException("", 0, 0, input);
                reportError(nvae);
                throw nvae;
        	}
        	state.failed=true; 
        	return current;
        }
        return current;
    }
// REPLACEMENT ruleNoLineTerminator.java.replacement END
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_AnnotationNoAtSign_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,CommercialAt,FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationNoAtSignParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_AnnotationNoAtSign_1=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationNoAtSign_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleScriptAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScriptAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScriptAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScriptAnnotation=ruleScriptAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScriptAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleScriptAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_AnnotationNoAtSign_1 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,CommercialAtCommercialAt,FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getScriptAnnotationAccess().getCommercialAtCommercialAtKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getScriptAnnotationAccess().getAnnotationNoAtSignParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_AnnotationNoAtSign_1=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AnnotationNoAtSign_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationNoAtSign() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationNoAtSign = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationNoAtSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationNoAtSign=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationNoAtSign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationNoAtSign() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_args_2_0 = null;

        EObject lv_args_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getNameAnnotationNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_105);
            lv_name_0_0=ruleAnnotationName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt429=2;
            alt429 = dfa429.predict(input);
            switch (alt429) {
                case 1 :
                    {
                    {
                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getAnnotationNoAtSignAccess().getLeftParenthesisKeyword_1_0());
                          
                    }

                    }
                    int alt428=2;
                    int LA428_0 = input.LA(1);

                    if ( ((LA428_0>=Intersection && LA428_0<=Constructor)||LA428_0==Promisify||LA428_0==Target||LA428_0==Await||LA428_0==False||LA428_0==Union||LA428_0==This||(LA428_0>=Null && LA428_0<=Void)||LA428_0==SolidusEqualsSign||LA428_0==LeftParenthesis||LA428_0==Solidus||LA428_0==QuestionMark||LA428_0==LeftSquareBracket||LA428_0==LeftCurlyBracket||LA428_0==Tilde||LA428_0==RULE_DOUBLE||(LA428_0>=RULE_HEX_INT && LA428_0<=RULE_LEGACY_OCTAL_INT)||LA428_0==RULE_SCIENTIFIC_INT||LA428_0==RULE_IDENTIFIER||LA428_0==RULE_STRING||LA428_0==RULE_INT) ) {
                        alt428=1;
                    }
                    switch (alt428) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getArgsAnnotationArgumentParserRuleCall_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_59);
                            lv_args_2_0=ruleAnnotationArgument();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
                              	        }
                                     		add(
                                     			current, 
                                     			"args",
                                      		lv_args_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AnnotationArgument");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            loop427:
                            do {
                                int alt427=2;
                                int LA427_0 = input.LA(1);

                                if ( (LA427_0==Comma) ) {
                                    alt427=1;
                                }


                                switch (alt427) {
                            	case 1 :
                            	    {
                            	    otherlv_3=(Token)match(input,Comma,FOLLOW_140); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	          	newLeafNode(otherlv_3, grammarAccess.getAnnotationNoAtSignAccess().getCommaKeyword_1_1_1_0());
                            	          
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getAnnotationNoAtSignAccess().getArgsAnnotationArgumentParserRuleCall_1_1_1_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_59);
                            	    lv_args_4_0=ruleAnnotationArgument();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getAnnotationNoAtSignRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"args",
                            	              		lv_args_4_0, 
                            	              		"eu.numberfour.n4js.N4JS.AnnotationArgument");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop427;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAnnotationNoAtSignAccess().getRightParenthesisKeyword_1_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationArgument=ruleAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject this_LiteralAnnotationArgument_0 = null;

        EObject this_TypeRefAnnotationArgument_1 = null;


         enterRule(); 
            
        try {
            {
            int alt430=2;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==False||LA430_0==Null||LA430_0==True||LA430_0==SolidusEqualsSign||LA430_0==Solidus||LA430_0==RULE_DOUBLE||(LA430_0>=RULE_HEX_INT && LA430_0<=RULE_LEGACY_OCTAL_INT)||LA430_0==RULE_SCIENTIFIC_INT||LA430_0==RULE_STRING||LA430_0==RULE_INT) ) {
                alt430=1;
            }
            else if ( ((LA430_0>=Intersection && LA430_0<=Constructor)||LA430_0==Promisify||LA430_0==Target||LA430_0==Await||LA430_0==Union||LA430_0==This||LA430_0==This_1||(LA430_0>=Type && LA430_0<=Void)||LA430_0==LeftParenthesis||LA430_0==QuestionMark||LA430_0==LeftSquareBracket||LA430_0==LeftCurlyBracket||LA430_0==Tilde||LA430_0==RULE_IDENTIFIER) ) {
                alt430=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 430, 0, input);

                throw nvae;
            }
            switch (alt430) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationArgumentAccess().getLiteralAnnotationArgumentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LiteralAnnotationArgument_0=ruleLiteralAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_LiteralAnnotationArgument_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAnnotationArgumentAccess().getTypeRefAnnotationArgumentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRefAnnotationArgument_1=ruleTypeRefAnnotationArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefAnnotationArgument_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteralAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralAnnotationArgument=ruleLiteralAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteralAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_literal_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getLiteralAnnotationArgumentAccess().getLiteralLiteralParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_literal_0_0=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getLiteralAnnotationArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"literal",
                      		lv_literal_0_0, 
                      		"eu.numberfour.n4js.N4JS.Literal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefAnnotationArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefAnnotationArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefAnnotationArgument=ruleTypeRefAnnotationArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefAnnotationArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefAnnotationArgument() throws RecognitionException {
        EObject current = null;

        EObject lv_typeRef_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeRefAnnotationArgumentAccess().getTypeRefTypeRefParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeRef_0_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeRefAnnotationArgumentRule());
              	        }
                     		set(
                     			current, 
                     			"typeRef",
                      		lv_typeRef_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationList=ruleAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotationList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_2_0 = null;

        EObject lv_annotations_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnnotationListAccess().getAnnotationListAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,CommercialAt,FOLLOW_138); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnnotationListAccess().getCommercialAtKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAnnotationListAccess().getAnnotationsAnnotationNoAtSignParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_141);
            lv_annotations_2_0=ruleAnnotationNoAtSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAnnotationListRule());
              	        }
                     		add(
                     			current, 
                     			"annotations",
                      		lv_annotations_2_0, 
                      		"eu.numberfour.n4js.N4JS.AnnotationNoAtSign");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }
            loop431:
            do {
                int alt431=2;
                int LA431_0 = input.LA(1);

                if ( (LA431_0==CommercialAt) ) {
                    alt431=1;
                }


                switch (alt431) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_141);
            	    lv_annotations_3_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_3_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop431;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleExpressionAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionAnnotationList=ruleExpressionAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleExpressionAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExpressionAnnotationListAccess().getExpressionAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt432=0;
            loop432:
            do {
                int alt432=2;
                int LA432_0 = input.LA(1);

                if ( (LA432_0==CommercialAt) ) {
                    alt432=1;
                }


                switch (alt432) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExpressionAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_141);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExpressionAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt432 >= 1 ) break loop432;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(432, input);
                        throw eee;
                }
                cnt432++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePropertyAssignmentAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyAssignmentAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyAssignmentAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyAssignmentAnnotationList=rulePropertyAssignmentAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyAssignmentAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePropertyAssignmentAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyAssignmentAnnotationListAccess().getPropertyAssignmentAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt433=0;
            loop433:
            do {
                int alt433=2;
                int LA433_0 = input.LA(1);

                if ( (LA433_0==CommercialAt) ) {
                    alt433=1;
                }


                switch (alt433) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPropertyAssignmentAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_141);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPropertyAssignmentAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt433 >= 1 ) break loop433;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(433, input);
                        throw eee;
                }
                cnt433++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MemberAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MemberAnnotationList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MemberAnnotationListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MemberAnnotationList=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MemberAnnotationList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MemberAnnotationList() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MemberAnnotationListAccess().getN4MemberAnnotationListAction_0(),
                          current);
                  
            }

            }
            int cnt434=0;
            loop434:
            do {
                int alt434=2;
                int LA434_0 = input.LA(1);

                if ( (LA434_0==CommercialAt) ) {
                    alt434=1;
                }


                switch (alt434) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MemberAnnotationListAccess().getAnnotationsAnnotationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_141);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MemberAnnotationListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"annotations",
            	              		lv_annotations_1_0, 
            	              		"eu.numberfour.n4js.N4JS.Annotation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt434 >= 1 ) break loop434;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(434, input);
                        throw eee;
                }
                cnt434++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypeReferenceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeReferenceName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeReferenceNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceName=ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypeReferenceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedTypeReferenceName_5 = null;


         enterRule(); 
            
        try {
            {
            int alt435=6;
            switch ( input.LA(1) ) {
            case Void:
                {
                alt435=1;
                }
                break;
            case This:
                {
                alt435=2;
                }
                break;
            case Await:
                {
                alt435=3;
                }
                break;
            case Promisify:
                {
                alt435=4;
                }
                break;
            case Target:
                {
                alt435=5;
                }
                break;
            case RULE_IDENTIFIER:
                {
                alt435=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 435, 0, input);

                throw nvae;
            }

            switch (alt435) {
                case 1 :
                    {
                    kw=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getVoidKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getThisKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Await,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getAwaitKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getPromisifyKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypeReferenceNameAccess().getTargetKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeReferenceNameAccess().getQualifiedTypeReferenceNameParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_QualifiedTypeReferenceName_5=ruleQualifiedTypeReferenceName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_QualifiedTypeReferenceName_5);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleQualifiedTypeReferenceName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedTypeReferenceName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedTypeReferenceNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedTypeReferenceName=ruleQualifiedTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedTypeReferenceName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleQualifiedTypeReferenceName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        Token this_IDENTIFIER_2=null;

         enterRule(); 
            
        try {
            {
            {
            this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_IDENTIFIER_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_IDENTIFIER_0, grammarAccess.getQualifiedTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                  
            }
            int alt436=2;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==FullStop) ) {
                alt436=1;
            }
            switch (alt436) {
                case 1 :
                    {
                    kw=(Token)match(input,FullStop,FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getQualifiedTypeReferenceNameAccess().getFullStopKeyword_1_0()); 
                          
                    }
                    this_IDENTIFIER_2=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_2, grammarAccess.getQualifiedTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4ClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4ClassDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4ClassDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4ClassDeclaration=ruleN4ClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4ClassDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4ClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_TypeVariables_5 = null;

        EObject this_ClassExtendsClause_6 = null;

        EObject this_Members_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassDeclarationAccess().getN4ClassDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop437:
            do {
                int alt437=2;
                int LA437_0 = input.LA(1);

                if ( ((LA437_0>=Protected && LA437_0<=Abstract)||LA437_0==External||(LA437_0>=Private && LA437_0<=Project)||LA437_0==Public||LA437_0==Static||LA437_0==Const) ) {
                    alt437=1;
                }


                switch (alt437) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop437;
                }
            } while (true);

            otherlv_2=(Token)match(input,Class,FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4ClassDeclarationAccess().getClassKeyword_0_0_2());
                  
            }
            int alt438=2;
            int LA438_0 = input.LA(1);

            if ( (LA438_0==Tilde) ) {
                alt438=1;
            }
            switch (alt438) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_67);
                    lv_typingStrategy_3_0=ruleTypingStrategyDefSiteOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"typingStrategy",
                              		lv_typingStrategy_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt439=2;
            int LA439_0 = input.LA(1);

            if ( ((LA439_0>=Intersection && LA439_0<=Constructor)||(LA439_0>=Promisify && LA439_0<=Abstract)||LA439_0==External||(LA439_0>=Private && LA439_0<=Project)||LA439_0==Public||LA439_0==Static||LA439_0==Target||(LA439_0>=Async && LA439_0<=Await)||LA439_0==Union||(LA439_0>=Yield && LA439_0<=This)||LA439_0==From||LA439_0==Type||(LA439_0>=Get && LA439_0<=Let)||(LA439_0>=Out && LA439_0<=Set)||LA439_0==As||LA439_0==Of||LA439_0==RULE_IDENTIFIER) ) {
                alt439=1;
            }
            else if ( (LA439_0==Implements) ) {
                int LA439_2 = input.LA(2);

                if ( (LA439_2==Implements||LA439_2==Extends||LA439_2==LessThanSign||LA439_2==LeftCurlyBracket) ) {
                    alt439=1;
                }
            }
            switch (alt439) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }
            int alt440=2;
            int LA440_0 = input.LA(1);

            if ( (LA440_0==LessThanSign) ) {
                alt440=1;
            }
            switch (alt440) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getTypeVariablesParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_TypeVariables_5=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt441=2;
            int LA441_0 = input.LA(1);

            if ( (LA441_0==Implements||LA441_0==Extends) ) {
                alt441=1;
            }
            switch (alt441) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getClassExtendsClauseParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_ClassExtendsClause_6=ruleClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassDeclarationAccess().getMembersParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_7=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_7;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMembers(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedMembersRaw_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMembersAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop442:
            do {
                int alt442=2;
                int LA442_0 = input.LA(1);

                if ( ((LA442_0>=Intersection && LA442_0<=With)||(LA442_0>=For && LA442_0<=Var)||(LA442_0>=As && LA442_0<=Of)||LA442_0==LeftParenthesis||LA442_0==Asterisk||LA442_0==LessThanSign||(LA442_0>=QuestionMark && LA442_0<=LeftSquareBracket)||LA442_0==LeftCurlyBracket||LA442_0==Tilde||LA442_0==RULE_DOUBLE||LA442_0==RULE_HEX_INT||LA442_0==RULE_OCTAL_INT||LA442_0==RULE_SCIENTIFIC_INT||LA442_0==RULE_IDENTIFIER||LA442_0==RULE_STRING||LA442_0==RULE_INT) ) {
                    alt442=1;
                }


                switch (alt442) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMembersAccess().getOwnedMembersRawN4MemberDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_ownedMembersRaw_1_0=ruleN4MemberDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMembersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ownedMembersRaw",
            	              		lv_ownedMembersRaw_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4MemberDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop442;
                }
            } while (true);

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMembersAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_Members(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_ownedMembersRaw_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getMembersAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop443:
            do {
                int alt443=2;
                int LA443_0 = input.LA(1);

                if ( ((LA443_0>=Intersection && LA443_0<=With)||(LA443_0>=For && LA443_0<=Var)||(LA443_0>=As && LA443_0<=Of)||LA443_0==LeftParenthesis||LA443_0==Asterisk||LA443_0==LessThanSign||(LA443_0>=QuestionMark && LA443_0<=LeftSquareBracket)||LA443_0==LeftCurlyBracket||LA443_0==Tilde||LA443_0==RULE_DOUBLE||LA443_0==RULE_HEX_INT||LA443_0==RULE_OCTAL_INT||LA443_0==RULE_SCIENTIFIC_INT||LA443_0==RULE_IDENTIFIER||LA443_0==RULE_STRING||LA443_0==RULE_INT) ) {
                    alt443=1;
                }


                switch (alt443) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMembersAccess().getOwnedMembersRawN4MemberDeclarationParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_ownedMembersRaw_1_0=norm1_N4MemberDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMembersRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"ownedMembersRaw",
            	              		lv_ownedMembersRaw_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4MemberDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop443;
                }
            } while (true);

            otherlv_2=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMembersAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleClassExtendsClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_superClassRef_1_0 = null;

        EObject this_ClassImplementsList_4 = null;

        EObject lv_superClassExpression_5_0 = null;

        EObject this_ClassImplementsList_7 = null;


         enterRule(); 
            
        try {
            {
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( (LA447_0==Extends) ) {
                alt447=1;
            }
            else if ( (LA447_0==Implements) ) {
                alt447=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 447, 0, input);

                throw nvae;
            }
            switch (alt447) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_0());
                          
                    }
                    int alt446=2;
                    int LA446_0 = input.LA(1);

                    if ( (LA446_0==Void) && (synpred279_InternalN4JSXParser())) {
                        alt446=1;
                    }
                    else if ( (LA446_0==This) ) {
                        int LA446_2 = input.LA(2);

                        if ( (synpred279_InternalN4JSXParser()) ) {
                            alt446=1;
                        }
                        else if ( (true) ) {
                            alt446=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 446, 2, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA446_0==Await) ) {
                        int LA446_3 = input.LA(2);

                        if ( (synpred279_InternalN4JSXParser()) ) {
                            alt446=1;
                        }
                        else if ( (true) ) {
                            alt446=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 446, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA446_0==Promisify) ) {
                        int LA446_4 = input.LA(2);

                        if ( (synpred279_InternalN4JSXParser()) ) {
                            alt446=1;
                        }
                        else if ( (true) ) {
                            alt446=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 446, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA446_0==Target) ) {
                        int LA446_5 = input.LA(2);

                        if ( (synpred279_InternalN4JSXParser()) ) {
                            alt446=1;
                        }
                        else if ( (true) ) {
                            alt446=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 446, 5, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA446_0==RULE_IDENTIFIER) ) {
                        int LA446_6 = input.LA(2);

                        if ( (synpred279_InternalN4JSXParser()) ) {
                            alt446=1;
                        }
                        else if ( (true) ) {
                            alt446=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 446, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA446_0>=Intersection && LA446_0<=Implements)||(LA446_0>=Interface && LA446_0<=Abstract)||(LA446_0>=External && LA446_0<=Function)||(LA446_0>=Private && LA446_0<=Project)||LA446_0==Public||LA446_0==Static||LA446_0==Async||LA446_0==Class||(LA446_0>=False && LA446_0<=Super)||LA446_0==Union||LA446_0==Yield||(LA446_0>=From && LA446_0<=Type)||(LA446_0>=Get && LA446_0<=Set)||LA446_0==SolidusEqualsSign||LA446_0==As||LA446_0==Of||LA446_0==LeftParenthesis||LA446_0==Solidus||LA446_0==LessThanSign||(LA446_0>=CommercialAt && LA446_0<=LeftSquareBracket)||LA446_0==LeftCurlyBracket||LA446_0==RULE_DOUBLE||(LA446_0>=RULE_HEX_INT && LA446_0<=RULE_LEGACY_OCTAL_INT)||LA446_0==RULE_SCIENTIFIC_INT||LA446_0==RULE_STRING||(LA446_0>=RULE_TEMPLATE_HEAD && LA446_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA446_0==RULE_INT) ) {
                        alt446=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 446, 0, input);

                        throw nvae;
                    }
                    switch (alt446) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_0_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_145);
                            lv_superClassRef_1_0=ruleParameterizedTypeRefNominal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassRef",
                                      		lv_superClassRef_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt445=2;
                            int LA445_0 = input.LA(1);

                            if ( (LA445_0==Implements||LA445_0==Extends) ) {
                                alt445=1;
                            }
                            switch (alt445) {
                                case 1 :
                                    {
                                    int alt444=2;
                                    int LA444_0 = input.LA(1);

                                    if ( (LA444_0==Implements) ) {
                                        alt444=1;
                                    }
                                    else if ( (LA444_0==Extends) ) {
                                        alt444=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 444, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt444) {
                                        case 1 :
                                            {
                                            otherlv_2=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_2, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_0_1_0_1_0_0());
                                                  
                                            }

                                            }
                                            break;
                                        case 2 :
                                            {
                                            otherlv_3=(Token)match(input,Extends,FOLLOW_146); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_3, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_1_0_1_0_1());
                                                  
                                            }

                                            }
                                            break;

                                    }

                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                                      		}
                                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_0_1_0_1_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_ClassImplementsList_4=ruleClassImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassImplementsList_4;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassExpressionLeftHandSideExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_superClassExpression_5_0=ruleLeftHandSideExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassExpression",
                                      		lv_superClassExpression_5_0, 
                                      		"eu.numberfour.n4js.N4JS.LeftHandSideExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassImplementsList_7=ruleClassImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassImplementsList_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ClassExtendsClause(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_superClassRef_1_0 = null;

        EObject this_ClassImplementsList_4 = null;

        EObject lv_superClassExpression_5_0 = null;

        EObject this_ClassImplementsList_7 = null;


         enterRule(); 
            
        try {
            {
            int alt451=2;
            int LA451_0 = input.LA(1);

            if ( (LA451_0==Extends) ) {
                alt451=1;
            }
            else if ( (LA451_0==Implements) ) {
                alt451=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 451, 0, input);

                throw nvae;
            }
            switch (alt451) {
                case 1 :
                    {
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_0());
                          
                    }
                    int alt450=2;
                    int LA450_0 = input.LA(1);

                    if ( (LA450_0==Void) && (synpred280_InternalN4JSXParser())) {
                        alt450=1;
                    }
                    else if ( (LA450_0==This) ) {
                        int LA450_2 = input.LA(2);

                        if ( (synpred280_InternalN4JSXParser()) ) {
                            alt450=1;
                        }
                        else if ( (true) ) {
                            alt450=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 450, 2, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA450_0==Await) ) {
                        int LA450_3 = input.LA(2);

                        if ( (synpred280_InternalN4JSXParser()) ) {
                            alt450=1;
                        }
                        else if ( (true) ) {
                            alt450=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 450, 3, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA450_0==Promisify) ) {
                        int LA450_4 = input.LA(2);

                        if ( (synpred280_InternalN4JSXParser()) ) {
                            alt450=1;
                        }
                        else if ( (true) ) {
                            alt450=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 450, 4, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA450_0==Target) ) {
                        int LA450_5 = input.LA(2);

                        if ( (synpred280_InternalN4JSXParser()) ) {
                            alt450=1;
                        }
                        else if ( (true) ) {
                            alt450=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 450, 5, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA450_0==RULE_IDENTIFIER) ) {
                        int LA450_6 = input.LA(2);

                        if ( (synpred280_InternalN4JSXParser()) ) {
                            alt450=1;
                        }
                        else if ( (true) ) {
                            alt450=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 450, 6, input);

                            throw nvae;
                        }
                    }
                    else if ( ((LA450_0>=Intersection && LA450_0<=Implements)||(LA450_0>=Interface && LA450_0<=Abstract)||(LA450_0>=External && LA450_0<=Function)||(LA450_0>=Private && LA450_0<=Project)||LA450_0==Public||LA450_0==Static||LA450_0==Async||LA450_0==Class||(LA450_0>=False && LA450_0<=Super)||LA450_0==Union||(LA450_0>=From && LA450_0<=Type)||(LA450_0>=Get && LA450_0<=Set)||LA450_0==SolidusEqualsSign||LA450_0==As||LA450_0==Of||LA450_0==LeftParenthesis||LA450_0==Solidus||LA450_0==LessThanSign||(LA450_0>=CommercialAt && LA450_0<=LeftSquareBracket)||LA450_0==LeftCurlyBracket||LA450_0==RULE_DOUBLE||(LA450_0>=RULE_HEX_INT && LA450_0<=RULE_LEGACY_OCTAL_INT)||LA450_0==RULE_SCIENTIFIC_INT||LA450_0==RULE_STRING||(LA450_0>=RULE_TEMPLATE_HEAD && LA450_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA450_0==RULE_INT) ) {
                        alt450=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 450, 0, input);

                        throw nvae;
                    }
                    switch (alt450) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_0_1_0_0_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_145);
                            lv_superClassRef_1_0=ruleParameterizedTypeRefNominal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassRef",
                                      		lv_superClassRef_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            int alt449=2;
                            int LA449_0 = input.LA(1);

                            if ( (LA449_0==Implements||LA449_0==Extends) ) {
                                alt449=1;
                            }
                            switch (alt449) {
                                case 1 :
                                    {
                                    int alt448=2;
                                    int LA448_0 = input.LA(1);

                                    if ( (LA448_0==Implements) ) {
                                        alt448=1;
                                    }
                                    else if ( (LA448_0==Extends) ) {
                                        alt448=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 448, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt448) {
                                        case 1 :
                                            {
                                            otherlv_2=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_2, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_0_1_0_1_0_0());
                                                  
                                            }

                                            }
                                            break;
                                        case 2 :
                                            {
                                            otherlv_3=(Token)match(input,Extends,FOLLOW_146); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                                  	newLeafNode(otherlv_3, grammarAccess.getClassExtendsClauseAccess().getExtendsKeyword_0_1_0_1_0_1());
                                                  
                                            }

                                            }
                                            break;

                                    }

                                    if ( state.backtracking==0 ) {
                                       
                                      		if (current==null) {
                                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                                      		}
                                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_0_1_0_1_1()); 
                                          
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_ClassImplementsList_4=ruleClassImplementsList(current);

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                              current = this_ClassImplementsList_4;
                                              afterParserOrEnumRuleCall();
                                          
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getSuperClassExpressionLeftHandSideExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_superClassExpression_5_0=norm1_LeftHandSideExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getClassExtendsClauseRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"superClassExpression",
                                      		lv_superClassExpression_5_0, 
                                      		"eu.numberfour.n4js.N4JS.LeftHandSideExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_6=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getClassExtendsClauseAccess().getImplementsKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getClassExtendsClauseRule());
                      		}
                              newCompositeNode(grammarAccess.getClassExtendsClauseAccess().getClassImplementsListParserRuleCall_1_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassImplementsList_7=ruleClassImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassImplementsList_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleClassImplementsList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        EObject lv_implementedInterfaceRefs_0_0 = null;

        EObject lv_implementedInterfaceRefs_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getClassImplementsListAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_147);
            lv_implementedInterfaceRefs_0_0=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getClassImplementsListRule());
              	        }
                     		add(
                     			current, 
                     			"implementedInterfaceRefs",
                      		lv_implementedInterfaceRefs_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop453:
            do {
                int alt453=2;
                int LA453_0 = input.LA(1);

                if ( (LA453_0==Implements||LA453_0==Extends||LA453_0==Comma) ) {
                    alt453=1;
                }


                switch (alt453) {
            	case 1 :
            	    {
            	    int alt452=3;
            	    switch ( input.LA(1) ) {
            	    case Comma:
            	        {
            	        alt452=1;
            	        }
            	        break;
            	    case Implements:
            	        {
            	        alt452=2;
            	        }
            	        break;
            	    case Extends:
            	        {
            	        alt452=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 452, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt452) {
            	        case 1 :
            	            {
            	            otherlv_1=(Token)match(input,Comma,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_1, grammarAccess.getClassImplementsListAccess().getCommaKeyword_1_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_2=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getClassImplementsListAccess().getImplementsKeyword_1_0_1());
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            {
            	            otherlv_3=(Token)match(input,Extends,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getClassImplementsListAccess().getExtendsKeyword_1_0_2());
            	                  
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getClassImplementsListAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_147);
            	    lv_implementedInterfaceRefs_4_0=ruleParameterizedTypeRefNominal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getClassImplementsListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"implementedInterfaceRefs",
            	              		lv_implementedInterfaceRefs_4_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop453;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4ClassExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4ClassExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4ClassExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4ClassExpression=ruleN4ClassExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4ClassExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4ClassExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ClassExtendsClause_3 = null;

        EObject this_Members_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassExpressionAccess().getN4ClassExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Class,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getN4ClassExpressionAccess().getClassKeyword_1());
                  
            }
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( ((LA454_0>=Intersection && LA454_0<=Constructor)||(LA454_0>=Promisify && LA454_0<=Abstract)||LA454_0==External||(LA454_0>=Private && LA454_0<=Project)||LA454_0==Public||LA454_0==Static||LA454_0==Target||(LA454_0>=Async && LA454_0<=Await)||LA454_0==Union||(LA454_0>=Yield && LA454_0<=This)||LA454_0==From||LA454_0==Type||(LA454_0>=Get && LA454_0<=Let)||(LA454_0>=Out && LA454_0<=Set)||LA454_0==As||LA454_0==Of||LA454_0==RULE_IDENTIFIER) ) {
                alt454=1;
            }
            else if ( (LA454_0==Implements) ) {
                int LA454_2 = input.LA(2);

                if ( (LA454_2==Implements||LA454_2==Extends||LA454_2==LeftCurlyBracket) ) {
                    alt454=1;
                }
            }
            switch (alt454) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getNameBindingIdentifierParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_2_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt455=2;
            int LA455_0 = input.LA(1);

            if ( (LA455_0==Implements||LA455_0==Extends) ) {
                alt455=1;
            }
            switch (alt455) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getClassExtendsClauseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_ClassExtendsClause_3=ruleClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getMembersParserRuleCall_4()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_4=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4ClassExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject this_ClassExtendsClause_3 = null;

        EObject this_Members_4 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4ClassExpressionAccess().getN4ClassExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Class,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getN4ClassExpressionAccess().getClassKeyword_1());
                  
            }
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( ((LA456_0>=Intersection && LA456_0<=Constructor)||(LA456_0>=Promisify && LA456_0<=Abstract)||LA456_0==External||(LA456_0>=Private && LA456_0<=Project)||LA456_0==Public||LA456_0==Static||LA456_0==Target||(LA456_0>=Async && LA456_0<=Await)||LA456_0==Union||LA456_0==This||LA456_0==From||LA456_0==Type||(LA456_0>=Get && LA456_0<=Let)||(LA456_0>=Out && LA456_0<=Set)||LA456_0==As||LA456_0==Of||LA456_0==RULE_IDENTIFIER) ) {
                alt456=1;
            }
            else if ( (LA456_0==Implements) ) {
                int LA456_2 = input.LA(2);

                if ( (LA456_2==Implements||LA456_2==Extends||LA456_2==LeftCurlyBracket) ) {
                    alt456=1;
                }
            }
            switch (alt456) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getNameBindingIdentifierParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_68);
                    lv_name_2_0=norm1_BindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4ClassExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( (LA457_0==Implements||LA457_0==Extends) ) {
                alt457=1;
            }
            switch (alt457) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getClassExtendsClauseParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_68);
                    this_ClassExtendsClause_3=norm1_ClassExtendsClause(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ClassExtendsClause_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4ClassExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getN4ClassExpressionAccess().getMembersParserRuleCall_4()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_4=norm1_Members(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_4;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4InterfaceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4InterfaceDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4InterfaceDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4InterfaceDeclaration=ruleN4InterfaceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4InterfaceDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4InterfaceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_typingStrategy_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject this_TypeVariables_5 = null;

        EObject this_InterfaceImplementsList_6 = null;

        EObject this_Members_7 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4InterfaceDeclarationAccess().getN4InterfaceDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop458:
            do {
                int alt458=2;
                int LA458_0 = input.LA(1);

                if ( ((LA458_0>=Protected && LA458_0<=Abstract)||LA458_0==External||(LA458_0>=Private && LA458_0<=Project)||LA458_0==Public||LA458_0==Static||LA458_0==Const) ) {
                    alt458=1;
                }


                switch (alt458) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop458;
                }
            } while (true);

            otherlv_2=(Token)match(input,Interface,FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4InterfaceDeclarationAccess().getInterfaceKeyword_0_0_2());
                  
            }
            int alt459=2;
            int LA459_0 = input.LA(1);

            if ( (LA459_0==Tilde) ) {
                alt459=1;
            }
            switch (alt459) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_67);
                    lv_typingStrategy_3_0=ruleTypingStrategyDefSiteOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"typingStrategy",
                              		lv_typingStrategy_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyDefSiteOperator");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt460=2;
            int LA460_0 = input.LA(1);

            if ( ((LA460_0>=Intersection && LA460_0<=Constructor)||(LA460_0>=Promisify && LA460_0<=Abstract)||LA460_0==External||(LA460_0>=Private && LA460_0<=Project)||LA460_0==Public||LA460_0==Static||LA460_0==Target||(LA460_0>=Async && LA460_0<=Await)||LA460_0==Union||(LA460_0>=Yield && LA460_0<=This)||LA460_0==From||LA460_0==Type||(LA460_0>=Get && LA460_0<=Let)||(LA460_0>=Out && LA460_0<=Set)||LA460_0==As||LA460_0==Of||LA460_0==RULE_IDENTIFIER) ) {
                alt460=1;
            }
            else if ( (LA460_0==Implements) ) {
                int LA460_2 = input.LA(2);

                if ( (LA460_2==Implements||LA460_2==Extends||LA460_2==LessThanSign||LA460_2==LeftCurlyBracket) ) {
                    alt460=1;
                }
            }
            switch (alt460) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_4_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4InterfaceDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_4_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }
            int alt461=2;
            int LA461_0 = input.LA(1);

            if ( (LA461_0==LessThanSign) ) {
                alt461=1;
            }
            switch (alt461) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getTypeVariablesParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_TypeVariables_5=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt462=2;
            int LA462_0 = input.LA(1);

            if ( (LA462_0==Implements||LA462_0==Extends) ) {
                alt462=1;
            }
            switch (alt462) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getInterfaceImplementsListParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_22);
                    this_InterfaceImplementsList_6=ruleInterfaceImplementsList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InterfaceImplementsList_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4InterfaceDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4InterfaceDeclarationAccess().getMembersParserRuleCall_3()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_Members_7=ruleMembers(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_Members_7;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleInterfaceImplementsList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_superInterfaceRefs_2_0 = null;

        EObject lv_superInterfaceRefs_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( (LA463_0==Extends) ) {
                alt463=1;
            }
            else if ( (LA463_0==Implements) ) {
                alt463=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 463, 0, input);

                throw nvae;
            }
            switch (alt463) {
                case 1 :
                    {
                    otherlv_0=(Token)match(input,Extends,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getInterfaceImplementsListAccess().getExtendsKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    otherlv_1=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getInterfaceImplementsListAccess().getImplementsKeyword_0_1());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterfaceImplementsListAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_147);
            lv_superInterfaceRefs_2_0=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterfaceImplementsListRule());
              	        }
                     		add(
                     			current, 
                     			"superInterfaceRefs",
                      		lv_superInterfaceRefs_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop465:
            do {
                int alt465=2;
                int LA465_0 = input.LA(1);

                if ( (LA465_0==Implements||LA465_0==Extends||LA465_0==Comma) ) {
                    alt465=1;
                }


                switch (alt465) {
            	case 1 :
            	    {
            	    int alt464=3;
            	    switch ( input.LA(1) ) {
            	    case Comma:
            	        {
            	        alt464=1;
            	        }
            	        break;
            	    case Implements:
            	        {
            	        alt464=2;
            	        }
            	        break;
            	    case Extends:
            	        {
            	        alt464=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 464, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt464) {
            	        case 1 :
            	            {
            	            otherlv_3=(Token)match(input,Comma,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getInterfaceImplementsListAccess().getCommaKeyword_2_0_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_4=(Token)match(input,Implements,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_4, grammarAccess.getInterfaceImplementsListAccess().getImplementsKeyword_2_0_1());
            	                  
            	            }

            	            }
            	            break;
            	        case 3 :
            	            {
            	            otherlv_5=(Token)match(input,Extends,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_5, grammarAccess.getInterfaceImplementsListAccess().getExtendsKeyword_2_0_2());
            	                  
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInterfaceImplementsListAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_147);
            	    lv_superInterfaceRefs_6_0=ruleParameterizedTypeRefNominal();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInterfaceImplementsListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"superInterfaceRefs",
            	              		lv_superInterfaceRefs_6_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.ParameterizedTypeRefNominal");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop465;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4EnumDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4EnumDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4EnumDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4EnumDeclaration=ruleN4EnumDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4EnumDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4EnumDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_literals_5_0 = null;

        EObject lv_literals_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4EnumDeclarationAccess().getN4EnumDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop466:
            do {
                int alt466=2;
                int LA466_0 = input.LA(1);

                if ( ((LA466_0>=Protected && LA466_0<=Abstract)||LA466_0==External||(LA466_0>=Private && LA466_0<=Project)||LA466_0==Public||LA466_0==Static||LA466_0==Const) ) {
                    alt466=1;
                }


                switch (alt466) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop466;
                }
            } while (true);

            otherlv_2=(Token)match(input,Enum,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4EnumDeclarationAccess().getEnumKeyword_0_0_2());
                  
            }
            int alt467=2;
            int LA467_0 = input.LA(1);

            if ( ((LA467_0>=Intersection && LA467_0<=Implements)||(LA467_0>=Promisify && LA467_0<=Abstract)||LA467_0==External||(LA467_0>=Private && LA467_0<=Project)||LA467_0==Public||LA467_0==Static||LA467_0==Target||(LA467_0>=Async && LA467_0<=Await)||LA467_0==Union||(LA467_0>=Yield && LA467_0<=This)||LA467_0==From||LA467_0==Type||(LA467_0>=Get && LA467_0<=Let)||(LA467_0>=Out && LA467_0<=Set)||LA467_0==As||LA467_0==Of||LA467_0==RULE_IDENTIFIER) ) {
                alt467=1;
            }
            switch (alt467) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getNameBindingIdentifierParserRuleCall_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_3_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            otherlv_4=(Token)match(input,LeftCurlyBracket,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4EnumDeclarationAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt469=2;
            int LA469_0 = input.LA(1);

            if ( (LA469_0==Promisify||LA469_0==Target||LA469_0==This||LA469_0==RULE_IDENTIFIER) ) {
                alt469=1;
            }
            switch (alt469) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getLiteralsN4EnumLiteralParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_literals_5_0=ruleN4EnumLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                      	        }
                             		add(
                             			current, 
                             			"literals",
                              		lv_literals_5_0, 
                              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop468:
                    do {
                        int alt468=2;
                        int LA468_0 = input.LA(1);

                        if ( (LA468_0==Comma) ) {
                            alt468=1;
                        }


                        switch (alt468) {
                    	case 1 :
                    	    {
                    	    otherlv_6=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getN4EnumDeclarationAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getN4EnumDeclarationAccess().getLiteralsN4EnumLiteralParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_literals_7_0=ruleN4EnumLiteral();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getN4EnumDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"literals",
                    	              		lv_literals_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4EnumLiteral");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop468;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_8=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getN4EnumDeclarationAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4EnumLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4EnumLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4EnumLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4EnumLiteral=ruleN4EnumLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4EnumLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4EnumLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_value_2_0=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4EnumLiteralAccess().getNameIdentifierOrThisParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_54);
            lv_name_0_0=ruleIdentifierOrThis();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4EnumLiteralRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.N4JS.IdentifierOrThis");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt470=2;
            int LA470_0 = input.LA(1);

            if ( (LA470_0==Colon) ) {
                alt470=1;
            }
            switch (alt470) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4EnumLiteralAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getN4EnumLiteralAccess().getValueSTRINGTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4EnumLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MemberDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MemberDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MemberDeclaration=ruleN4MemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MemberDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedN4MemberDeclaration_0 = null;

        EObject this_N4GetterDeclaration_1 = null;

        EObject this_N4SetterDeclaration_2 = null;

        EObject this_N4MethodDeclaration_3 = null;

        EObject this_N4FieldDeclaration_4 = null;

        EObject this_N4CallableConstructorDeclaration_5 = null;


         enterRule(); 
            
        try {
            {
            int alt471=6;
            alt471 = dfa471.predict(input);
            switch (alt471) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getAnnotatedN4MemberDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedN4MemberDeclaration_0=ruleAnnotatedN4MemberDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedN4MemberDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4GetterDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4GetterDeclaration_1=ruleN4GetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4GetterDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4SetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4SetterDeclaration_2=ruleN4SetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4SetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4MethodDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4MethodDeclaration_3=ruleN4MethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4MethodDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4FieldDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4FieldDeclaration_4=ruleN4FieldDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4FieldDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4CallableConstructorDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4CallableConstructorDeclaration_5=ruleN4CallableConstructorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4CallableConstructorDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_AnnotatedN4MemberDeclaration_0 = null;

        EObject this_N4GetterDeclaration_1 = null;

        EObject this_N4SetterDeclaration_2 = null;

        EObject this_N4MethodDeclaration_3 = null;

        EObject this_N4FieldDeclaration_4 = null;

        EObject this_N4CallableConstructorDeclaration_5 = null;


         enterRule(); 
            
        try {
            {
            int alt472=6;
            alt472 = dfa472.predict(input);
            switch (alt472) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getAnnotatedN4MemberDeclarationParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnnotatedN4MemberDeclaration_0=norm1_AnnotatedN4MemberDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AnnotatedN4MemberDeclaration_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4GetterDeclarationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4GetterDeclaration_1=norm1_N4GetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4GetterDeclaration_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4SetterDeclarationParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4SetterDeclaration_2=norm1_N4SetterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4SetterDeclaration_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4MethodDeclarationParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4MethodDeclaration_3=norm1_N4MethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4MethodDeclaration_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4FieldDeclarationParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4FieldDeclaration_4=norm1_N4FieldDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4FieldDeclaration_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getN4MemberDeclarationAccess().getN4CallableConstructorDeclarationParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4CallableConstructorDeclaration_5=norm1_N4CallableConstructorDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_N4CallableConstructorDeclaration_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleAnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedN4MemberDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedN4MemberDeclaration=ruleAnnotatedN4MemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedN4MemberDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleAnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_25=null;
        EObject this_N4MemberAnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_GetterHeader_3 = null;

        EObject lv_body_4_0 = null;

        Enumerator lv_declaredModifiers_7_0 = null;

        EObject lv_declaredName_9_0 = null;

        EObject lv_fpar_11_0 = null;

        EObject lv_body_13_0 = null;

        Enumerator lv_declaredModifiers_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_BogusTypeRefFragment_18 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsReturnAndBody_21 = null;

        EObject this_AsyncNoTrailingLineBreak_22 = null;

        EObject lv_declaredName_23_0 = null;

        EObject this_MethodParamsReturnAndBody_24 = null;

        EObject this_FieldDeclarationImpl_27 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MemberAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_150);
            this_N4MemberAnnotationList_0=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_N4MemberAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt484=4;
            alt484 = dfa484.predict(input);
            switch (alt484) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4GetterDeclarationAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop473:
                    do {
                        int alt473=2;
                        int LA473_0 = input.LA(1);

                        if ( ((LA473_0>=Protected && LA473_0<=Abstract)||LA473_0==External||(LA473_0>=Private && LA473_0<=Project)||LA473_0==Public||LA473_0==Static||LA473_0==Const) ) {
                            alt473=1;
                        }


                        switch (alt473) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_151);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop473;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGetterHeaderParserRuleCall_1_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_152);
                    this_GetterHeader_3=ruleGetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    int alt474=2;
                    alt474 = dfa474.predict(input);
                    switch (alt474) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_4_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_4_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt475=2;
                    int LA475_0 = input.LA(1);

                    if ( (LA475_0==Semicolon) ) {
                        alt475=1;
                    }
                    switch (alt475) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4SetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop476:
                    do {
                        int alt476=2;
                        int LA476_0 = input.LA(1);

                        if ( ((LA476_0>=Protected && LA476_0<=Abstract)||LA476_0==External||(LA476_0>=Private && LA476_0<=Project)||LA476_0==Public||LA476_0==Static||LA476_0==Const) ) {
                            alt476=1;
                        }


                        switch (alt476) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_153);
                    	    lv_declaredModifiers_7_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop476;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSetKeyword_1_1_0_0_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_1_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_9_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_9_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getLeftParenthesisKeyword_1_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFparFormalParameterParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_11_0=ruleFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_11_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getRightParenthesisKeyword_1_1_3());
                          
                    }
                    int alt477=2;
                    alt477 = dfa477.predict(input);
                    switch (alt477) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_13_0=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_13_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt478=2;
                    int LA478_0 = input.LA(1);

                    if ( (LA478_0==Semicolon) ) {
                        alt478=1;
                    }
                    switch (alt478) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_1_5());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MethodDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop479:
                    do {
                        int alt479=2;
                        alt479 = dfa479.predict(input);
                        switch (alt479) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_150);
                    	    lv_declaredModifiers_16_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_16_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop479;
                        }
                    } while (true);
                    int alt480=2;
                    int LA480_0 = input.LA(1);

                    if ( (LA480_0==LessThanSign) ) {
                        alt480=1;
                    }
                    switch (alt480) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getTypeVariablesParserRuleCall_1_2_0_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt481=2;
                    alt481 = dfa481.predict(input);
                    switch (alt481) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_1_2_0_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_BogusTypeRefFragment_18=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_18;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt482=2;
                    int LA482_0 = input.LA(1);

                    if ( (LA482_0==Asterisk) ) {
                        alt482=1;
                    }
                    else if ( ((LA482_0>=Intersection && LA482_0<=With)||(LA482_0>=For && LA482_0<=Var)||(LA482_0>=As && LA482_0<=Of)||LA482_0==LeftSquareBracket||LA482_0==RULE_DOUBLE||LA482_0==RULE_HEX_INT||LA482_0==RULE_OCTAL_INT||LA482_0==RULE_SCIENTIFIC_INT||LA482_0==RULE_IDENTIFIER||LA482_0==RULE_STRING||LA482_0==RULE_INT) ) {
                        alt482=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 482, 0, input);

                        throw nvae;
                    }
                    switch (alt482) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGeneratorAsteriskKeyword_1_2_0_0_4_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_21=norm1_MethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_0_0_4_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_102);
                            this_AsyncNoTrailingLineBreak_22=ruleAsyncNoTrailingLineBreak(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_AsyncNoTrailingLineBreak_22;
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_100);
                            lv_declaredName_23_0=ruleLiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_23_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_24=ruleMethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_24;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt483=2;
                    int LA483_0 = input.LA(1);

                    if ( (LA483_0==Semicolon) ) {
                        alt483=1;
                    }
                    switch (alt483) {
                        case 1 :
                            {
                            otherlv_25=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_25, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4FieldDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFieldDeclarationImplParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FieldDeclarationImpl_27=ruleFieldDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FieldDeclarationImpl_27;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_AnnotatedN4MemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_generator_19_0=null;
        Token otherlv_25=null;
        EObject this_N4MemberAnnotationList_0 = null;

        Enumerator lv_declaredModifiers_2_0 = null;

        EObject this_GetterHeader_3 = null;

        EObject lv_body_4_0 = null;

        Enumerator lv_declaredModifiers_7_0 = null;

        EObject lv_declaredName_9_0 = null;

        EObject lv_fpar_11_0 = null;

        EObject lv_body_13_0 = null;

        Enumerator lv_declaredModifiers_16_0 = null;

        EObject this_TypeVariables_17 = null;

        EObject this_BogusTypeRefFragment_18 = null;

        EObject lv_declaredName_20_0 = null;

        EObject this_MethodParamsReturnAndBody_21 = null;

        EObject this_AsyncNoTrailingLineBreak_22 = null;

        EObject lv_declaredName_23_0 = null;

        EObject this_MethodParamsReturnAndBody_24 = null;

        EObject this_FieldDeclarationImpl_27 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MemberAnnotationListParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_150);
            this_N4MemberAnnotationList_0=ruleN4MemberAnnotationList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_N4MemberAnnotationList_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt496=4;
            alt496 = dfa496.predict(input);
            switch (alt496) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4GetterDeclarationAnnotationListAction_1_0_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop485:
                    do {
                        int alt485=2;
                        int LA485_0 = input.LA(1);

                        if ( ((LA485_0>=Protected && LA485_0<=Abstract)||LA485_0==External||(LA485_0>=Private && LA485_0<=Project)||LA485_0==Public||LA485_0==Static||LA485_0==Const) ) {
                            alt485=1;
                        }


                        switch (alt485) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_0_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_151);
                    	    lv_declaredModifiers_2_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_2_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop485;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGetterHeaderParserRuleCall_1_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_152);
                    this_GetterHeader_3=norm1_GetterHeader(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_GetterHeader_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    int alt486=2;
                    alt486 = dfa486.predict(input);
                    switch (alt486) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_4_0=norm1_Block();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_4_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt487=2;
                    int LA487_0 = input.LA(1);

                    if ( (LA487_0==Semicolon) ) {
                        alt487=1;
                    }
                    switch (alt487) {
                        case 1 :
                            {
                            otherlv_5=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_0_2());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4SetterDeclarationAnnotationListAction_1_1_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop488:
                    do {
                        int alt488=2;
                        int LA488_0 = input.LA(1);

                        if ( ((LA488_0>=Protected && LA488_0<=Abstract)||LA488_0==External||(LA488_0>=Private && LA488_0<=Project)||LA488_0==Public||LA488_0==Static||LA488_0==Const) ) {
                            alt488=1;
                        }


                        switch (alt488) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_1_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_153);
                    	    lv_declaredModifiers_7_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_7_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop488;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSetKeyword_1_1_0_0_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_1_0_0_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_64);
                    lv_declaredName_9_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_9_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }

                    otherlv_10=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getLeftParenthesisKeyword_1_1_1());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFparFormalParameterParserRuleCall_1_1_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_fpar_11_0=norm1_FormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"fpar",
                              		lv_fpar_11_0, 
                              		"eu.numberfour.n4js.N4JS.FormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,RightParenthesis,FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getRightParenthesisKeyword_1_1_3());
                          
                    }
                    int alt489=2;
                    alt489 = dfa489.predict(input);
                    switch (alt489) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBodyBlockParserRuleCall_1_1_4_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_104);
                            lv_body_13_0=norm1_Block();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"body",
                                      		lv_body_13_0, 
                                      		"eu.numberfour.n4js.N4JS.Block");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }
                    int alt490=2;
                    int LA490_0 = input.LA(1);

                    if ( (LA490_0==Semicolon) ) {
                        alt490=1;
                    }
                    switch (alt490) {
                        case 1 :
                            {
                            otherlv_14=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_14, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_1_5());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4MethodDeclarationAnnotationListAction_1_2_0_0_0(),
                                  current);
                          
                    }

                    }
                    loop491:
                    do {
                        int alt491=2;
                        alt491 = dfa491.predict(input);
                        switch (alt491) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_1_2_0_0_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_150);
                    	    lv_declaredModifiers_16_0=ruleN4Modifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"declaredModifiers",
                    	              		lv_declaredModifiers_16_0, 
                    	              		"eu.numberfour.n4js.N4JS.N4Modifier");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop491;
                        }
                    } while (true);
                    int alt492=2;
                    int LA492_0 = input.LA(1);

                    if ( (LA492_0==LessThanSign) ) {
                        alt492=1;
                    }
                    switch (alt492) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getTypeVariablesParserRuleCall_1_2_0_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_TypeVariables_17=ruleTypeVariables(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_TypeVariables_17;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt493=2;
                    alt493 = dfa493.predict(input);
                    switch (alt493) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_1_2_0_0_3()); 
                                  
                            }
                            pushFollow(FOLLOW_103);
                            this_BogusTypeRefFragment_18=ruleBogusTypeRefFragment(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_BogusTypeRefFragment_18;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt494=2;
                    int LA494_0 = input.LA(1);

                    if ( (LA494_0==Asterisk) ) {
                        alt494=1;
                    }
                    else if ( ((LA494_0>=Intersection && LA494_0<=With)||(LA494_0>=For && LA494_0<=Var)||(LA494_0>=As && LA494_0<=Of)||LA494_0==LeftSquareBracket||LA494_0==RULE_DOUBLE||LA494_0==RULE_HEX_INT||LA494_0==RULE_OCTAL_INT||LA494_0==RULE_SCIENTIFIC_INT||LA494_0==RULE_IDENTIFIER||LA494_0==RULE_STRING||LA494_0==RULE_INT) ) {
                        alt494=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 494, 0, input);

                        throw nvae;
                    }
                    switch (alt494) {
                        case 1 :
                            {
                            {
                            {
                            {
                            lv_generator_19_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_generator_19_0, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getGeneratorAsteriskKeyword_1_2_0_0_4_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "generator", true, "*");
                              	    
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_53);
                            lv_declaredName_20_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_20_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_0_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_21=norm1_MethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_21;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_1_2_0_0_4_1_0()); 
                                  
                            }
                            pushFollow(FOLLOW_102);
                            this_AsyncNoTrailingLineBreak_22=ruleAsyncNoTrailingLineBreak(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_AsyncNoTrailingLineBreak_22;
                                      afterParserOrEnumRuleCall();
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_1_2_0_0_4_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_100);
                            lv_declaredName_23_0=norm1_LiteralOrComputedPropertyName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"declaredName",
                                      		lv_declaredName_23_0, 
                                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            {
                            if ( state.backtracking==0 ) {
                               
                              		if (current==null) {
                              			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                              		}
                                      newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_1_2_0_0_4_1_2()); 
                                  
                            }
                            pushFollow(FOLLOW_104);
                            this_MethodParamsReturnAndBody_24=ruleMethodParamsReturnAndBody(current);

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_MethodParamsReturnAndBody_24;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    int alt495=2;
                    int LA495_0 = input.LA(1);

                    if ( (LA495_0==Semicolon) ) {
                        alt495=1;
                    }
                    switch (alt495) {
                        case 1 :
                            {
                            otherlv_25=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_25, grammarAccess.getAnnotatedN4MemberDeclarationAccess().getSemicolonKeyword_1_2_1());
                                  
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAnnotatedN4MemberDeclarationAccess().getN4FieldDeclarationAnnotationListAction_1_3_0(),
                                  current);
                          
                    }

                    }

                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getAnnotatedN4MemberDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getAnnotatedN4MemberDeclarationAccess().getFieldDeclarationImplParserRuleCall_1_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FieldDeclarationImpl_27=norm1_FieldDeclarationImpl(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FieldDeclarationImpl_27;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFieldDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_0_0 = null;

        EObject this_BogusTypeRefFragment_1 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_3 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop497:
            do {
                int alt497=2;
                alt497 = dfa497.predict(input);
                switch (alt497) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_declaredModifiers_0_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_0_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop497;
                }
            } while (true);
            int alt498=2;
            alt498 = dfa498.predict(input);
            switch (alt498) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getBogusTypeRefFragmentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_BogusTypeRefFragment_1=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_154);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt499=2;
            int LA499_0 = input.LA(1);

            if ( (LA499_0==Colon) ) {
                alt499=1;
            }
            switch (alt499) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getColonSepTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_155);
                    this_ColonSepTypeRef_3=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt500=2;
            int LA500_0 = input.LA(1);

            if ( (LA500_0==EqualsSign) ) {
                alt500=1;
            }
            switch (alt500) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFieldDeclarationImplAccess().getEqualsSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getExpressionExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_5_0=norm1_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_FieldDeclarationImpl(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_0_0 = null;

        EObject this_BogusTypeRefFragment_1 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_3 = null;

        EObject lv_expression_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            loop501:
            do {
                int alt501=2;
                alt501 = dfa501.predict(input);
                switch (alt501) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_declaredModifiers_0_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_0_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop501;
                }
            } while (true);
            int alt502=2;
            alt502 = dfa502.predict(input);
            switch (alt502) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getBogusTypeRefFragmentParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_BogusTypeRefFragment_1=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_154);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt503=2;
            int LA503_0 = input.LA(1);

            if ( (LA503_0==Colon) ) {
                alt503=1;
            }
            switch (alt503) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getFieldDeclarationImplRule());
                      		}
                              newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getColonSepTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_155);
                    this_ColonSepTypeRef_3=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt504=2;
            int LA504_0 = input.LA(1);

            if ( (LA504_0==EqualsSign) ) {
                alt504=1;
            }
            switch (alt504) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFieldDeclarationImplAccess().getEqualsSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getExpressionExpressionParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_32);
                    lv_expression_5_0=norm3_Expression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFieldDeclarationImplRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_5_0, 
                              		"eu.numberfour.n4js.N4JS.Expression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getFieldDeclarationImplAccess().getSemiParserRuleCall_5()); 
                  
            }
            pushFollow(FOLLOW_2);
            ruleSemi();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4FieldDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4FieldDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4FieldDeclaration=ruleN4FieldDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4FieldDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FieldDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4FieldDeclarationAccess().getN4FieldDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4FieldDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4FieldDeclarationAccess().getFieldDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FieldDeclarationImpl_1=ruleFieldDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FieldDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4FieldDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_FieldDeclarationImpl_1 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4FieldDeclarationAccess().getN4FieldDeclarationAction_0(),
                          current);
                  
            }

            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4FieldDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4FieldDeclarationAccess().getFieldDeclarationImplParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_FieldDeclarationImpl_1=norm1_FieldDeclarationImpl(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_FieldDeclarationImpl_1;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4MethodDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4MethodDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4MethodDeclaration=ruleN4MethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4MethodDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_4_0=null;
        Token otherlv_10=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_TypeVariables_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        EObject lv_declaredName_5_0 = null;

        EObject this_MethodParamsReturnAndBody_6 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject lv_declaredName_8_0 = null;

        EObject this_MethodParamsReturnAndBody_9 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MethodDeclarationAccess().getN4MethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop505:
            do {
                int alt505=2;
                alt505 = dfa505.predict(input);
                switch (alt505) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_150);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop505;
                }
            } while (true);
            int alt506=2;
            int LA506_0 = input.LA(1);

            if ( (LA506_0==LessThanSign) ) {
                alt506=1;
            }
            switch (alt506) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_2=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt507=2;
            alt507 = dfa507.predict(input);
            switch (alt507) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_0_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt508=2;
            int LA508_0 = input.LA(1);

            if ( (LA508_0==Asterisk) ) {
                alt508=1;
            }
            else if ( ((LA508_0>=Intersection && LA508_0<=With)||(LA508_0>=For && LA508_0<=Var)||(LA508_0>=As && LA508_0<=Of)||LA508_0==LeftSquareBracket||LA508_0==RULE_DOUBLE||LA508_0==RULE_HEX_INT||LA508_0==RULE_OCTAL_INT||LA508_0==RULE_SCIENTIFIC_INT||LA508_0==RULE_IDENTIFIER||LA508_0==RULE_STRING||LA508_0==RULE_INT) ) {
                alt508=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 508, 0, input);

                throw nvae;
            }
            switch (alt508) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_4_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_4_0, grammarAccess.getN4MethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_4_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_5_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_5_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_6=norm1_MethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_4_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_100);
                    lv_declaredName_8_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_8_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_9=ruleMethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt509=2;
            int LA509_0 = input.LA(1);

            if ( (LA509_0==Semicolon) ) {
                alt509=1;
            }
            switch (alt509) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getN4MethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4MethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_generator_4_0=null;
        Token otherlv_10=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_TypeVariables_2 = null;

        EObject this_BogusTypeRefFragment_3 = null;

        EObject lv_declaredName_5_0 = null;

        EObject this_MethodParamsReturnAndBody_6 = null;

        EObject this_AsyncNoTrailingLineBreak_7 = null;

        EObject lv_declaredName_8_0 = null;

        EObject this_MethodParamsReturnAndBody_9 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4MethodDeclarationAccess().getN4MethodDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop510:
            do {
                int alt510=2;
                alt510 = dfa510.predict(input);
                switch (alt510) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_150);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop510;
                }
            } while (true);
            int alt511=2;
            int LA511_0 = input.LA(1);

            if ( (LA511_0==LessThanSign) ) {
                alt511=1;
            }
            switch (alt511) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getTypeVariablesParserRuleCall_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_TypeVariables_2=ruleTypeVariables(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeVariables_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt512=2;
            alt512 = dfa512.predict(input);
            switch (alt512) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getBogusTypeRefFragmentParserRuleCall_0_0_3()); 
                          
                    }
                    pushFollow(FOLLOW_103);
                    this_BogusTypeRefFragment_3=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }
            int alt513=2;
            int LA513_0 = input.LA(1);

            if ( (LA513_0==Asterisk) ) {
                alt513=1;
            }
            else if ( ((LA513_0>=Intersection && LA513_0<=With)||(LA513_0>=For && LA513_0<=Var)||(LA513_0>=As && LA513_0<=Of)||LA513_0==LeftSquareBracket||LA513_0==RULE_DOUBLE||LA513_0==RULE_HEX_INT||LA513_0==RULE_OCTAL_INT||LA513_0==RULE_SCIENTIFIC_INT||LA513_0==RULE_IDENTIFIER||LA513_0==RULE_STRING||LA513_0==RULE_INT) ) {
                alt513=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 513, 0, input);

                throw nvae;
            }
            switch (alt513) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_generator_4_0=(Token)match(input,Asterisk,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_generator_4_0, grammarAccess.getN4MethodDeclarationAccess().getGeneratorAsteriskKeyword_0_0_4_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "generator", true, "*");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_53);
                    lv_declaredName_5_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_5_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_6=norm1_MethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getAsyncNoTrailingLineBreakParserRuleCall_0_0_4_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_102);
                    this_AsyncNoTrailingLineBreak_7=ruleAsyncNoTrailingLineBreak(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AsyncNoTrailingLineBreak_7;
                              afterParserOrEnumRuleCall();
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_100);
                    lv_declaredName_8_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4MethodDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_8_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getN4MethodDeclarationRule());
                      		}
                              newCompositeNode(grammarAccess.getN4MethodDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0_0_4_1_2()); 
                          
                    }
                    pushFollow(FOLLOW_104);
                    this_MethodParamsReturnAndBody_9=ruleMethodParamsReturnAndBody(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_MethodParamsReturnAndBody_9;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }
            int alt514=2;
            int LA514_0 = input.LA(1);

            if ( (LA514_0==Semicolon) ) {
                alt514=1;
            }
            switch (alt514) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getN4MethodDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4CallableConstructorDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4CallableConstructorDeclaration=ruleN4CallableConstructorDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4CallableConstructorDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MethodParamsReturnAndBody_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4CallableConstructorDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_104);
            this_MethodParamsReturnAndBody_0=ruleMethodParamsReturnAndBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MethodParamsReturnAndBody_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt515=2;
            int LA515_0 = input.LA(1);

            if ( (LA515_0==Semicolon) ) {
                alt515=1;
            }
            switch (alt515) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4CallableConstructorDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4CallableConstructorDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject this_MethodParamsReturnAndBody_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4CallableConstructorDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4CallableConstructorDeclarationAccess().getMethodParamsReturnAndBodyParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_104);
            this_MethodParamsReturnAndBody_0=ruleMethodParamsReturnAndBody(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_MethodParamsReturnAndBody_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt516=2;
            int LA516_0 = input.LA(1);

            if ( (LA516_0==Semicolon) ) {
                alt516=1;
            }
            switch (alt516) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getN4CallableConstructorDeclarationAccess().getSemicolonKeyword_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMethodParamsAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_StrictFormalParameters_0 = null;

        EObject lv_body_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_156);
            this_StrictFormalParameters_0=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt517=2;
            int LA517_0 = input.LA(1);

            if ( (LA517_0==LeftCurlyBracket) && (synpred311_InternalN4JSXParser())) {
                alt517=1;
            }
            switch (alt517) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_1_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_1_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MethodParamsAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        EObject this_StrictFormalParameters_0 = null;

        EObject lv_body_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_156);
            this_StrictFormalParameters_0=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt518=2;
            int LA518_0 = input.LA(1);

            if ( (LA518_0==LeftCurlyBracket) && (synpred312_InternalN4JSXParser())) {
                alt518=1;
            }
            switch (alt518) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsAndBodyAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_1_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_1_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleMethodParamsReturnAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_StrictFormalParameters_0 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsReturnAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_157);
            this_StrictFormalParameters_0=ruleStrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt519=2;
            int LA519_0 = input.LA(1);

            if ( (LA519_0==Colon) ) {
                alt519=1;
            }
            switch (alt519) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodParamsReturnAndBodyAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getReturnTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_156);
                    lv_returnTypeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            int alt520=2;
            alt520 = dfa520.predict(input);
            switch (alt520) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getBodyBlockParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_MethodParamsReturnAndBody(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject this_StrictFormalParameters_0 = null;

        EObject lv_returnTypeRef_2_0 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getMethodParamsReturnAndBodyRule());
              		}
                      newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getStrictFormalParametersParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_157);
            this_StrictFormalParameters_0=norm1_StrictFormalParameters(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_StrictFormalParameters_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt521=2;
            int LA521_0 = input.LA(1);

            if ( (LA521_0==Colon) ) {
                alt521=1;
            }
            switch (alt521) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getMethodParamsReturnAndBodyAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getReturnTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_156);
                    lv_returnTypeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }
            int alt522=2;
            alt522 = dfa522.predict(input);
            switch (alt522) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getMethodParamsReturnAndBodyAccess().getBodyBlockParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_body_3_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getMethodParamsReturnAndBodyRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4GetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4GetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4GetterDeclaration=ruleN4GetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4GetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_GetterHeader_2 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4GetterDeclarationAccess().getN4GetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop523:
            do {
                int alt523=2;
                int LA523_0 = input.LA(1);

                if ( ((LA523_0>=Protected && LA523_0<=Abstract)||LA523_0==External||(LA523_0>=Private && LA523_0<=Project)||LA523_0==Public||LA523_0==Static||LA523_0==Const) ) {
                    alt523=1;
                }


                switch (alt523) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop523;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4GetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_152);
            this_GetterHeader_2=ruleGetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            int alt524=2;
            alt524 = dfa524.predict(input);
            switch (alt524) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt525=2;
            int LA525_0 = input.LA(1);

            if ( (LA525_0==Semicolon) ) {
                alt525=1;
            }
            switch (alt525) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getN4GetterDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4GetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject this_GetterHeader_2 = null;

        EObject lv_body_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4GetterDeclarationAccess().getN4GetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop526:
            do {
                int alt526=2;
                int LA526_0 = input.LA(1);

                if ( ((LA526_0>=Protected && LA526_0<=Abstract)||LA526_0==External||(LA526_0>=Private && LA526_0<=Project)||LA526_0==Public||LA526_0==Static||LA526_0==Const) ) {
                    alt526=1;
                }


                switch (alt526) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop526;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getN4GetterDeclarationRule());
              		}
                      newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getGetterHeaderParserRuleCall_0_0_2()); 
                  
            }
            pushFollow(FOLLOW_152);
            this_GetterHeader_2=norm1_GetterHeader(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_GetterHeader_2;
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }
            int alt527=2;
            alt527 = dfa527.predict(input);
            switch (alt527) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4GetterDeclarationAccess().getBodyBlockParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_3_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4GetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_3_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt528=2;
            int LA528_0 = input.LA(1);

            if ( (LA528_0==Semicolon) ) {
                alt528=1;
            }
            switch (alt528) {
                case 1 :
                    {
                    otherlv_4=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getN4GetterDeclarationAccess().getSemicolonKeyword_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleGetterHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_BogusTypeRefFragment_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_5 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt529=2;
            int LA529_0 = input.LA(1);

            if ( ((LA529_0>=Intersection && LA529_0<=Constructor)||LA529_0==Promisify||LA529_0==Target||LA529_0==Await||LA529_0==Union||LA529_0==This||LA529_0==This_1||(LA529_0>=Type && LA529_0<=Void)||LA529_0==QuestionMark||LA529_0==LeftCurlyBracket||LA529_0==Tilde||LA529_0==RULE_IDENTIFIER) ) {
                alt529=1;
            }
            switch (alt529) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getBogusTypeRefFragmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_158);
                    this_BogusTypeRefFragment_0=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGetterHeaderAccess().getGetKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGetterHeaderAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGetterHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGetterHeaderAccess().getLeftParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGetterHeaderAccess().getRightParenthesisKeyword_4());
                  
            }
            int alt530=2;
            int LA530_0 = input.LA(1);

            if ( (LA530_0==Colon) ) {
                alt530=1;
            }
            switch (alt530) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getColonSepTypeRefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_GetterHeader(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_BogusTypeRefFragment_0 = null;

        EObject lv_declaredName_2_0 = null;

        EObject this_ColonSepTypeRef_5 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt531=2;
            int LA531_0 = input.LA(1);

            if ( ((LA531_0>=Intersection && LA531_0<=Constructor)||LA531_0==Promisify||LA531_0==Target||LA531_0==Await||LA531_0==Union||LA531_0==This||LA531_0==This_1||(LA531_0>=Type && LA531_0<=Void)||LA531_0==QuestionMark||LA531_0==LeftCurlyBracket||LA531_0==Tilde||LA531_0==RULE_IDENTIFIER) ) {
                alt531=1;
            }
            switch (alt531) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getBogusTypeRefFragmentParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_158);
                    this_BogusTypeRefFragment_0=ruleBogusTypeRefFragment(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_BogusTypeRefFragment_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGetterHeaderAccess().getGetKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGetterHeaderAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_2_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGetterHeaderRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_2_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getGetterHeaderAccess().getLeftParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGetterHeaderAccess().getRightParenthesisKeyword_4());
                  
            }
            int alt532=2;
            int LA532_0 = input.LA(1);

            if ( (LA532_0==Colon) ) {
                alt532=1;
            }
            switch (alt532) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getGetterHeaderRule());
                      		}
                              newCompositeNode(grammarAccess.getGetterHeaderAccess().getColonSepTypeRefParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ColonSepTypeRef_5=ruleColonSepTypeRef(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ColonSepTypeRef_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleN4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleN4SetterDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4SetterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4SetterDeclaration=ruleN4SetterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4SetterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleN4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_fpar_5_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4SetterDeclarationAccess().getN4SetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop533:
            do {
                int alt533=2;
                int LA533_0 = input.LA(1);

                if ( ((LA533_0>=Protected && LA533_0<=Abstract)||LA533_0==External||(LA533_0>=Private && LA533_0<=Project)||LA533_0==Public||LA533_0==Static||LA533_0==Const) ) {
                    alt533=1;
                }


                switch (alt533) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop533;
                }
            } while (true);

            otherlv_2=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4SetterDeclarationAccess().getSetKeyword_0_0_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_3_0=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_3_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4SetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_5_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_5_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getN4SetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            int alt534=2;
            alt534 = dfa534.predict(input);
            switch (alt534) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_7_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt535=2;
            int LA535_0 = input.LA(1);

            if ( (LA535_0==Semicolon) ) {
                alt535=1;
            }
            switch (alt535) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getN4SetterDeclarationAccess().getSemicolonKeyword_5());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_N4SetterDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Enumerator lv_declaredModifiers_1_0 = null;

        EObject lv_declaredName_3_0 = null;

        EObject lv_fpar_5_0 = null;

        EObject lv_body_7_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getN4SetterDeclarationAccess().getN4SetterDeclarationAction_0_0_0(),
                          current);
                  
            }

            }
            loop536:
            do {
                int alt536=2;
                int LA536_0 = input.LA(1);

                if ( ((LA536_0>=Protected && LA536_0<=Abstract)||LA536_0==External||(LA536_0>=Private && LA536_0<=Project)||LA536_0==Public||LA536_0==Static||LA536_0==Const) ) {
                    alt536=1;
                }


                switch (alt536) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredModifiersN4ModifierEnumRuleCall_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_declaredModifiers_1_0=ruleN4Modifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declaredModifiers",
            	              		lv_declaredModifiers_1_0, 
            	              		"eu.numberfour.n4js.N4JS.N4Modifier");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop536;
                }
            } while (true);

            otherlv_2=(Token)match(input,Set,FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getN4SetterDeclarationAccess().getSetKeyword_0_0_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_3_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_declaredName_3_0=norm1_LiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"declaredName",
                      		lv_declaredName_3_0, 
                      		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getN4SetterDeclarationAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getFparFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_5_0=norm1_FormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_5_0, 
                      		"eu.numberfour.n4js.N4JS.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getN4SetterDeclarationAccess().getRightParenthesisKeyword_3());
                  
            }
            int alt537=2;
            alt537 = dfa537.predict(input);
            switch (alt537) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getN4SetterDeclarationAccess().getBodyBlockParserRuleCall_4_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_body_7_0=norm1_Block();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getN4SetterDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"body",
                              		lv_body_7_0, 
                              		"eu.numberfour.n4js.N4JS.Block");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt538=2;
            int LA538_0 = input.LA(1);

            if ( (LA538_0==Semicolon) ) {
                alt538=1;
            }
            switch (alt538) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getN4SetterDeclarationAccess().getSemicolonKeyword_5());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingPattern=ruleBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectBindingPattern_0 = null;

        EObject this_ArrayBindingPattern_1 = null;


         enterRule(); 
            
        try {
            {
            int alt539=2;
            int LA539_0 = input.LA(1);

            if ( (LA539_0==LeftCurlyBracket) ) {
                alt539=1;
            }
            else if ( (LA539_0==LeftSquareBracket) ) {
                alt539=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 539, 0, input);

                throw nvae;
            }
            switch (alt539) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getObjectBindingPatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectBindingPattern_0=ruleObjectBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectBindingPattern_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getArrayBindingPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayBindingPattern_1=ruleArrayBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayBindingPattern_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingPattern() throws RecognitionException {
        EObject current = null;

        EObject this_ObjectBindingPattern_0 = null;

        EObject this_ArrayBindingPattern_1 = null;


         enterRule(); 
            
        try {
            {
            int alt540=2;
            int LA540_0 = input.LA(1);

            if ( (LA540_0==LeftCurlyBracket) ) {
                alt540=1;
            }
            else if ( (LA540_0==LeftSquareBracket) ) {
                alt540=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 540, 0, input);

                throw nvae;
            }
            switch (alt540) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getObjectBindingPatternParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectBindingPattern_0=norm1_ObjectBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ObjectBindingPattern_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingPatternAccess().getArrayBindingPatternParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayBindingPattern_1=norm1_ArrayBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayBindingPattern_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObjectBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectBindingPattern=ruleObjectBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_properties_2_0 = null;

        EObject lv_properties_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectBindingPatternAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt542=2;
            int LA542_0 = input.LA(1);

            if ( ((LA542_0>=Intersection && LA542_0<=With)||(LA542_0>=For && LA542_0<=Var)||(LA542_0>=As && LA542_0<=Of)||(LA542_0>=CommercialAt && LA542_0<=LeftSquareBracket)||LA542_0==RULE_DOUBLE||LA542_0==RULE_HEX_INT||LA542_0==RULE_OCTAL_INT||LA542_0==RULE_SCIENTIFIC_INT||LA542_0==RULE_IDENTIFIER||LA542_0==RULE_STRING||LA542_0==RULE_INT) ) {
                alt542=1;
            }
            switch (alt542) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_properties_2_0=ruleBindingProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"properties",
                              		lv_properties_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop541:
                    do {
                        int alt541=2;
                        int LA541_0 = input.LA(1);

                        if ( (LA541_0==Comma) ) {
                            alt541=1;
                        }


                        switch (alt541) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectBindingPatternAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_properties_4_0=ruleBindingProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"properties",
                    	              		lv_properties_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop541;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getObjectBindingPatternAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ObjectBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_properties_2_0 = null;

        EObject lv_properties_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectBindingPatternAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt544=2;
            int LA544_0 = input.LA(1);

            if ( ((LA544_0>=Intersection && LA544_0<=With)||(LA544_0>=For && LA544_0<=Var)||(LA544_0>=As && LA544_0<=Of)||(LA544_0>=CommercialAt && LA544_0<=LeftSquareBracket)||LA544_0==RULE_DOUBLE||LA544_0==RULE_HEX_INT||LA544_0==RULE_OCTAL_INT||LA544_0==RULE_SCIENTIFIC_INT||LA544_0==RULE_IDENTIFIER||LA544_0==RULE_STRING||LA544_0==RULE_INT) ) {
                alt544=1;
            }
            switch (alt544) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_27);
                    lv_properties_2_0=norm1_BindingProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"properties",
                              		lv_properties_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingProperty");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop543:
                    do {
                        int alt543=2;
                        int LA543_0 = input.LA(1);

                        if ( (LA543_0==Comma) ) {
                            alt543=1;
                        }


                        switch (alt543) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_160); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getObjectBindingPatternAccess().getCommaKeyword_2_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getObjectBindingPatternAccess().getPropertiesBindingPropertyParserRuleCall_2_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_properties_4_0=norm1_BindingProperty();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getObjectBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"properties",
                    	              		lv_properties_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingProperty");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop543;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getObjectBindingPatternAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayBindingPattern = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBindingPatternRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBindingPattern=ruleArrayBindingPattern();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBindingPattern; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_161); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayBindingPatternAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop545:
            do {
                int alt545=2;
                int LA545_0 = input.LA(1);

                if ( (LA545_0==Comma) ) {
                    alt545=1;
                }


                switch (alt545) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_elements_2_0=ruleElision();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Elision");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop545;
                }
            } while (true);
            int alt550=2;
            int LA550_0 = input.LA(1);

            if ( ((LA550_0>=Intersection && LA550_0<=Implements)||(LA550_0>=Promisify && LA550_0<=Abstract)||LA550_0==External||(LA550_0>=Private && LA550_0<=Project)||LA550_0==Public||LA550_0==Static||LA550_0==Target||(LA550_0>=Async && LA550_0<=Await)||LA550_0==Union||(LA550_0>=Yield && LA550_0<=This)||LA550_0==From||LA550_0==Type||LA550_0==FullStopFullStopFullStop||(LA550_0>=Get && LA550_0<=Let)||(LA550_0>=Out && LA550_0<=Set)||LA550_0==As||LA550_0==Of||(LA550_0>=CommercialAt && LA550_0<=LeftSquareBracket)||LA550_0==LeftCurlyBracket||LA550_0==RULE_IDENTIFIER) ) {
                alt550=1;
            }
            switch (alt550) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=ruleBindingRestElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop547:
                    do {
                        int alt547=2;
                        alt547 = dfa547.predict(input);
                        switch (alt547) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop546:
                    	    do {
                    	        int alt546=2;
                    	        int LA546_0 = input.LA(1);

                    	        if ( (LA546_0==Comma) ) {
                    	            alt546=1;
                    	        }


                    	        switch (alt546) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_162);
                    	    	    lv_elements_5_0=ruleElision();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.Elision");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop546;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=ruleBindingRestElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop547;
                        }
                    } while (true);
                    int alt549=2;
                    int LA549_0 = input.LA(1);

                    if ( (LA549_0==Comma) ) {
                        alt549=1;
                    }
                    switch (alt549) {
                        case 1 :
                            {
                            otherlv_7=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_2_0());
                                  
                            }
                            loop548:
                            do {
                                int alt548=2;
                                int LA548_0 = input.LA(1);

                                if ( (LA548_0==Comma) ) {
                                    alt548=1;
                                }


                                switch (alt548) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleElision();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.Elision");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop548;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayBindingPatternAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_ArrayBindingPattern() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;

        EObject lv_elements_6_0 = null;

        EObject lv_elements_8_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrayBindingPatternAccess().getBindingPatternAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_161); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrayBindingPatternAccess().getLeftSquareBracketKeyword_1());
                  
            }
            loop551:
            do {
                int alt551=2;
                int LA551_0 = input.LA(1);

                if ( (LA551_0==Comma) ) {
                    alt551=1;
                }


                switch (alt551) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_161);
            	    lv_elements_2_0=ruleElision();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"elements",
            	              		lv_elements_2_0, 
            	              		"eu.numberfour.n4js.N4JS.Elision");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop551;
                }
            } while (true);
            int alt556=2;
            int LA556_0 = input.LA(1);

            if ( ((LA556_0>=Intersection && LA556_0<=Implements)||(LA556_0>=Promisify && LA556_0<=Abstract)||LA556_0==External||(LA556_0>=Private && LA556_0<=Project)||LA556_0==Public||LA556_0==Static||LA556_0==Target||(LA556_0>=Async && LA556_0<=Await)||LA556_0==Union||LA556_0==This||LA556_0==From||LA556_0==Type||LA556_0==FullStopFullStopFullStop||(LA556_0>=Get && LA556_0<=Let)||(LA556_0>=Out && LA556_0<=Set)||LA556_0==As||LA556_0==Of||(LA556_0>=CommercialAt && LA556_0<=LeftSquareBracket)||LA556_0==LeftCurlyBracket||LA556_0==RULE_IDENTIFIER) ) {
                alt556=1;
            }
            switch (alt556) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_97);
                    lv_elements_3_0=norm1_BindingRestElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                      	        }
                             		add(
                             			current, 
                             			"elements",
                              		lv_elements_3_0, 
                              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop553:
                    do {
                        int alt553=2;
                        alt553 = dfa553.predict(input);
                        switch (alt553) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_162); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    loop552:
                    	    do {
                    	        int alt552=2;
                    	        int LA552_0 = input.LA(1);

                    	        if ( (LA552_0==Comma) ) {
                    	            alt552=1;
                    	        }


                    	        switch (alt552) {
                    	    	case 1 :
                    	    	    {
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_162);
                    	    	    lv_elements_5_0=ruleElision();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"elements",
                    	    	              		lv_elements_5_0, 
                    	    	              		"eu.numberfour.n4js.N4JS.Elision");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop552;
                    	        }
                    	    } while (true);
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsBindingRestElementParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_97);
                    	    lv_elements_6_0=norm1_BindingRestElement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"elements",
                    	              		lv_elements_6_0, 
                    	              		"eu.numberfour.n4js.N4JS.BindingRestElement");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop553;
                        }
                    } while (true);
                    int alt555=2;
                    int LA555_0 = input.LA(1);

                    if ( (LA555_0==Comma) ) {
                        alt555=1;
                    }
                    switch (alt555) {
                        case 1 :
                            {
                            otherlv_7=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_7, grammarAccess.getArrayBindingPatternAccess().getCommaKeyword_3_2_0());
                                  
                            }
                            loop554:
                            do {
                                int alt554=2;
                                int LA554_0 = input.LA(1);

                                if ( (LA554_0==Comma) ) {
                                    alt554=1;
                                }


                                switch (alt554) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getArrayBindingPatternAccess().getElementsElisionParserRuleCall_3_2_1_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FOLLOW_97);
                            	    lv_elements_8_0=ruleElision();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getArrayBindingPatternRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"elements",
                            	              		lv_elements_8_0, 
                            	              		"eu.numberfour.n4js.N4JS.Elision");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop554;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getArrayBindingPatternAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingProperty = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingProperty=ruleBindingProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declaredName_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt557=2;
            alt557 = dfa557.predict(input);
            switch (alt557) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_0_0=ruleLiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_0_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Colon,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBindingPropertyAccess().getColonKeyword_0_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueBindingElementParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=ruleBindingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueSingleNameBindingParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSingleNameBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"eu.numberfour.n4js.N4JS.SingleNameBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingProperty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_declaredName_0_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt558=2;
            alt558 = dfa558.predict(input);
            switch (alt558) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getDeclaredNameLiteralOrComputedPropertyNameParserRuleCall_0_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_declaredName_0_0=norm1_LiteralOrComputedPropertyName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredName",
                              		lv_declaredName_0_0, 
                              		"eu.numberfour.n4js.N4JS.LiteralOrComputedPropertyName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,Colon,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getBindingPropertyAccess().getColonKeyword_0_0_0_1());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueBindingElementParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_2_0=norm1_BindingElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"eu.numberfour.n4js.N4JS.BindingElement");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingPropertyAccess().getValueSingleNameBindingParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=norm1_SingleNameBinding();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingPropertyRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"eu.numberfour.n4js.N4JS.SingleNameBinding");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleSingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSingleNameBinding = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSingleNameBindingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSingleNameBinding=ruleSingleNameBinding();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSingleNameBinding; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleSingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm1_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm3_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm2_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm5_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm3_SingleNameBinding() throws RecognitionException {
        EObject current = null;

        EObject lv_varDecl_0_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSingleNameBindingAccess().getVarDeclVariableDeclarationParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_varDecl_0_0=norm7_VariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSingleNameBindingRule());
              	        }
                     		set(
                     			current, 
                     			"varDecl",
                      		lv_varDecl_0_0, 
                      		"eu.numberfour.n4js.N4JS.VariableDeclaration");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingElement=ruleBindingElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_nestedPattern_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_varDecl_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt560=2;
            int LA560_0 = input.LA(1);

            if ( (LA560_0==LeftCurlyBracket) && (synpred329_InternalN4JSXParser())) {
                alt560=1;
            }
            else if ( (LA560_0==LeftSquareBracket) && (synpred329_InternalN4JSXParser())) {
                alt560=1;
            }
            else if ( ((LA560_0>=Intersection && LA560_0<=Implements)||(LA560_0>=Promisify && LA560_0<=Abstract)||LA560_0==External||(LA560_0>=Private && LA560_0<=Project)||LA560_0==Public||LA560_0==Static||LA560_0==Target||(LA560_0>=Async && LA560_0<=Await)||LA560_0==Union||(LA560_0>=Yield && LA560_0<=This)||LA560_0==From||LA560_0==Type||(LA560_0>=Get && LA560_0<=Let)||(LA560_0>=Out && LA560_0<=Set)||LA560_0==As||LA560_0==Of||LA560_0==CommercialAt||LA560_0==RULE_IDENTIFIER) ) {
                alt560=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 560, 0, input);

                throw nvae;
            }
            switch (alt560) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getNestedPatternBindingPatternParserRuleCall_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_nestedPattern_0_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt559=2;
                    int LA559_0 = input.LA(1);

                    if ( (LA559_0==EqualsSign) ) {
                        alt559=1;
                    }
                    switch (alt559) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getBindingElementAccess().getEqualsSignKeyword_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingElementAccess().getExpressionAssignmentExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_2_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_3_0=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_3_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_nestedPattern_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_varDecl_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt562=2;
            int LA562_0 = input.LA(1);

            if ( (LA562_0==LeftCurlyBracket) && (synpred330_InternalN4JSXParser())) {
                alt562=1;
            }
            else if ( (LA562_0==LeftSquareBracket) && (synpred330_InternalN4JSXParser())) {
                alt562=1;
            }
            else if ( ((LA562_0>=Intersection && LA562_0<=Implements)||(LA562_0>=Promisify && LA562_0<=Abstract)||LA562_0==External||(LA562_0>=Private && LA562_0<=Project)||LA562_0==Public||LA562_0==Static||LA562_0==Target||(LA562_0>=Async && LA562_0<=Await)||LA562_0==Union||LA562_0==This||LA562_0==From||LA562_0==Type||(LA562_0>=Get && LA562_0<=Let)||(LA562_0>=Out && LA562_0<=Set)||LA562_0==As||LA562_0==Of||LA562_0==CommercialAt||LA562_0==RULE_IDENTIFIER) ) {
                alt562=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 562, 0, input);

                throw nvae;
            }
            switch (alt562) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getNestedPatternBindingPatternParserRuleCall_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_nestedPattern_0_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_0_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt561=2;
                    int LA561_0 = input.LA(1);

                    if ( (LA561_0==EqualsSign) ) {
                        alt561=1;
                    }
                    switch (alt561) {
                        case 1 :
                            {
                            otherlv_1=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_1, grammarAccess.getBindingElementAccess().getEqualsSignKeyword_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingElementAccess().getExpressionAssignmentExpressionParserRuleCall_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_2_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_2_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_3_0=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_3_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBindingRestElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBindingRestElement = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingRestElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingRestElement=ruleBindingRestElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingRestElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBindingRestElement() throws RecognitionException {
        EObject current = null;

        Token lv_rest_0_0=null;
        Token otherlv_2=null;
        EObject lv_nestedPattern_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_varDecl_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt563=2;
            int LA563_0 = input.LA(1);

            if ( (LA563_0==FullStopFullStopFullStop) ) {
                alt563=1;
            }
            switch (alt563) {
                case 1 :
                    {
                    {
                    lv_rest_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rest_0_0, grammarAccess.getBindingRestElementAccess().getRestFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBindingRestElementRule());
                      	        }
                             		setWithLastConsumed(current, "rest", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt565=2;
            int LA565_0 = input.LA(1);

            if ( (LA565_0==LeftCurlyBracket) && (synpred331_InternalN4JSXParser())) {
                alt565=1;
            }
            else if ( (LA565_0==LeftSquareBracket) && (synpred331_InternalN4JSXParser())) {
                alt565=1;
            }
            else if ( ((LA565_0>=Intersection && LA565_0<=Implements)||(LA565_0>=Promisify && LA565_0<=Abstract)||LA565_0==External||(LA565_0>=Private && LA565_0<=Project)||LA565_0==Public||LA565_0==Static||LA565_0==Target||(LA565_0>=Async && LA565_0<=Await)||LA565_0==Union||(LA565_0>=Yield && LA565_0<=This)||LA565_0==From||LA565_0==Type||(LA565_0>=Get && LA565_0<=Let)||(LA565_0>=Out && LA565_0<=Set)||LA565_0==As||LA565_0==Of||LA565_0==CommercialAt||LA565_0==RULE_IDENTIFIER) ) {
                alt565=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 565, 0, input);

                throw nvae;
            }
            switch (alt565) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getNestedPatternBindingPatternParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_nestedPattern_1_0=ruleBindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_1_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt564=2;
                    int LA564_0 = input.LA(1);

                    if ( (LA564_0==EqualsSign) ) {
                        alt564=1;
                    }
                    switch (alt564) {
                        case 1 :
                            {
                            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getBindingRestElementAccess().getEqualsSignKeyword_1_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_3_0=norm1_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_3_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_4_0=norm5_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_4_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_BindingRestElement() throws RecognitionException {
        EObject current = null;

        Token lv_rest_0_0=null;
        Token otherlv_2=null;
        EObject lv_nestedPattern_1_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_varDecl_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt566=2;
            int LA566_0 = input.LA(1);

            if ( (LA566_0==FullStopFullStopFullStop) ) {
                alt566=1;
            }
            switch (alt566) {
                case 1 :
                    {
                    {
                    lv_rest_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_rest_0_0, grammarAccess.getBindingRestElementAccess().getRestFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getBindingRestElementRule());
                      	        }
                             		setWithLastConsumed(current, "rest", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt568=2;
            int LA568_0 = input.LA(1);

            if ( (LA568_0==LeftCurlyBracket) && (synpred332_InternalN4JSXParser())) {
                alt568=1;
            }
            else if ( (LA568_0==LeftSquareBracket) && (synpred332_InternalN4JSXParser())) {
                alt568=1;
            }
            else if ( ((LA568_0>=Intersection && LA568_0<=Implements)||(LA568_0>=Promisify && LA568_0<=Abstract)||LA568_0==External||(LA568_0>=Private && LA568_0<=Project)||LA568_0==Public||LA568_0==Static||LA568_0==Target||(LA568_0>=Async && LA568_0<=Await)||LA568_0==Union||LA568_0==This||LA568_0==From||LA568_0==Type||(LA568_0>=Get && LA568_0<=Let)||(LA568_0>=Out && LA568_0<=Set)||LA568_0==As||LA568_0==Of||LA568_0==CommercialAt||LA568_0==RULE_IDENTIFIER) ) {
                alt568=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 568, 0, input);

                throw nvae;
            }
            switch (alt568) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getNestedPatternBindingPatternParserRuleCall_1_0_0_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_16);
                    lv_nestedPattern_1_0=norm1_BindingPattern();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"nestedPattern",
                              		lv_nestedPattern_1_0, 
                              		"eu.numberfour.n4js.N4JS.BindingPattern");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    int alt567=2;
                    int LA567_0 = input.LA(1);

                    if ( (LA567_0==EqualsSign) ) {
                        alt567=1;
                    }
                    switch (alt567) {
                        case 1 :
                            {
                            otherlv_2=(Token)match(input,EqualsSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getBindingRestElementAccess().getEqualsSignKeyword_1_0_1_0());
                                  
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getExpressionAssignmentExpressionParserRuleCall_1_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_3_0=norm3_AssignmentExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"expression",
                                      		lv_expression_3_0, 
                                      		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getBindingRestElementAccess().getVarDeclVariableDeclarationParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_varDecl_4_0=norm7_VariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getBindingRestElementRule());
                      	        }
                             		set(
                             			current, 
                             			"varDecl",
                              		lv_varDecl_4_0, 
                              		"eu.numberfour.n4js.N4JS.VariableDeclaration");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleElision() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElision = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElisionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElision=ruleElision();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElision; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleElision() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getElisionAccess().getBindingElementAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Comma,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getElisionAccess().getCommaKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleLiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrComputedPropertyName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrComputedPropertyName=ruleLiteralOrComputedPropertyName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrComputedPropertyName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleLiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        Token lv_literalName_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_literalName_0_0 = null;

        AntlrDatatypeRuleToken lv_literalName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt569=4;
            switch ( input.LA(1) ) {
            case Intersection:
            case Constructor:
            case Implements:
            case Instanceof:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case Continue:
            case Debugger:
            case External:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Private:
            case Project:
            case Delete:
            case Export:
            case Import:
            case Public:
            case Return:
            case Static:
            case Switch:
            case Target:
            case Typeof:
            case Async:
            case Await:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case Union:
            case While:
            case Yield:
            case This:
            case Case:
            case Else:
            case Enum:
            case From:
            case Null:
            case This_1:
            case True:
            case Type:
            case Void:
            case With:
            case For:
            case Get:
            case Let:
            case New:
            case Out:
            case Set:
            case Try:
            case Var:
            case As:
            case Do:
            case If:
            case In:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt569=1;
                }
                break;
            case RULE_STRING:
                {
                alt569=2;
                }
                break;
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt569=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt569=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 569, 0, input);

                throw nvae;
            }

            switch (alt569) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameIdentifierNameParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_0_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_literalName_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literalName_1_0, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"literalName",
                              		lv_literalName_1_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameNumericLiteralAsStringParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_2_0=ruleNumericLiteralAsString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_2_0, 
                              		"eu.numberfour.n4js.N4JS.NumericLiteralAsString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLeftSquareBracketKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_113);
                    lv_expression_4_0=norm1_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getLiteralOrComputedPropertyNameAccess().getRightSquareBracketKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject norm1_LiteralOrComputedPropertyName() throws RecognitionException {
        EObject current = null;

        Token lv_literalName_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_literalName_0_0 = null;

        AntlrDatatypeRuleToken lv_literalName_2_0 = null;

        EObject lv_expression_4_0 = null;


         enterRule(); 
            
        try {
            {
            int alt570=4;
            switch ( input.LA(1) ) {
            case Intersection:
            case Constructor:
            case Implements:
            case Instanceof:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case Continue:
            case Debugger:
            case External:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Private:
            case Project:
            case Delete:
            case Export:
            case Import:
            case Public:
            case Return:
            case Static:
            case Switch:
            case Target:
            case Typeof:
            case Async:
            case Await:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case Union:
            case While:
            case Yield:
            case This:
            case Case:
            case Else:
            case Enum:
            case From:
            case Null:
            case This_1:
            case True:
            case Type:
            case Void:
            case With:
            case For:
            case Get:
            case Let:
            case New:
            case Out:
            case Set:
            case Try:
            case Var:
            case As:
            case Do:
            case If:
            case In:
            case Of:
            case RULE_IDENTIFIER:
                {
                alt570=1;
                }
                break;
            case RULE_STRING:
                {
                alt570=2;
                }
                break;
            case RULE_DOUBLE:
            case RULE_HEX_INT:
            case RULE_OCTAL_INT:
            case RULE_SCIENTIFIC_INT:
            case RULE_INT:
                {
                alt570=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt570=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 570, 0, input);

                throw nvae;
            }

            switch (alt570) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameIdentifierNameParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_0_0=ruleIdentifierName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_literalName_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_literalName_1_0, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"literalName",
                              		lv_literalName_1_0, 
                              		"eu.numberfour.n4js.N4JS.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getLiteralNameNumericLiteralAsStringParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_literalName_2_0=ruleNumericLiteralAsString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"literalName",
                              		lv_literalName_2_0, 
                              		"eu.numberfour.n4js.N4JS.NumericLiteralAsString");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_3=(Token)match(input,LeftSquareBracket,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getLiteralOrComputedPropertyNameAccess().getLeftSquareBracketKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getLiteralOrComputedPropertyNameAccess().getExpressionAssignmentExpressionParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_113);
                    lv_expression_4_0=norm3_AssignmentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getLiteralOrComputedPropertyNameRule());
                      	        }
                             		set(
                             			current, 
                             			"expression",
                              		lv_expression_4_0, 
                              		"eu.numberfour.n4js.N4JS.AssignmentExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getLiteralOrComputedPropertyNameAccess().getRightSquareBracketKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRef=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_UnionTypeExpression_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getTypeRefAccess().getUnionTypeExpressionParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_UnionTypeExpression_0=ruleUnionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_UnionTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionTypeExpression=ruleUnionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_IntersectionTypeExpression_0 = null;

        EObject lv_typeRefs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getUnionTypeExpressionAccess().getIntersectionTypeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_126);
            this_IntersectionTypeExpression_0=ruleIntersectionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_IntersectionTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt572=2;
            int LA572_0 = input.LA(1);

            if ( (LA572_0==VerticalLine) ) {
                alt572=1;
            }
            switch (alt572) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getUnionTypeExpressionAccess().getUnionTypeExpressionTypeRefsAction_1_0(),
                                  current);
                          
                    }

                    }
                    int cnt571=0;
                    loop571:
                    do {
                        int alt571=2;
                        int LA571_0 = input.LA(1);

                        if ( (LA571_0==VerticalLine) ) {
                            alt571=1;
                        }


                        switch (alt571) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,VerticalLine,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getUnionTypeExpressionAccess().getVerticalLineKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsIntersectionTypeExpressionParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_126);
                    	    lv_typeRefs_3_0=ruleIntersectionTypeExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeRefs",
                    	              		lv_typeRefs_3_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.IntersectionTypeExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt571 >= 1 ) break loop571;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(571, input);
                                throw eee;
                        }
                        cnt571++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntersectionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersectionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersectionTypeExpression=ruleIntersectionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersectionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntersectionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_PrimaryTypeExpression_0 = null;

        EObject lv_typeRefs_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getIntersectionTypeExpressionAccess().getPrimaryTypeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FOLLOW_124);
            this_PrimaryTypeExpression_0=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_PrimaryTypeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            int alt574=2;
            int LA574_0 = input.LA(1);

            if ( (LA574_0==Ampersand) ) {
                alt574=1;
            }
            switch (alt574) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndAdd(
                                  grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionTypeExpressionTypeRefsAction_1_0(),
                                  current);
                          
                    }

                    }
                    int cnt573=0;
                    loop573:
                    do {
                        int alt573=2;
                        int LA573_0 = input.LA(1);

                        if ( (LA573_0==Ampersand) ) {
                            alt573=1;
                        }


                        switch (alt573) {
                    	case 1 :
                    	    {
                    	    otherlv_2=(Token)match(input,Ampersand,FOLLOW_55); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_2, grammarAccess.getIntersectionTypeExpressionAccess().getAmpersandKeyword_1_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsPrimaryTypeExpressionParserRuleCall_1_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_124);
                    	    lv_typeRefs_3_0=rulePrimaryTypeExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeRefs",
                    	              		lv_typeRefs_3_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt573 >= 1 ) break loop573;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(573, input);
                                throw eee;
                        }
                        cnt573++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRulePrimaryTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryTypeExpression=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject rulePrimaryTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject this_TAnonymousFormalParameterList_2 = null;

        EObject lv_returnTypeRef_5_0 = null;

        EObject this_ArrayTypeRef_6 = null;

        EObject this_TypeRefWithModifiers_7 = null;

        EObject this_TypeRef_9 = null;


         enterRule(); 
            
        try {
            {
            int alt575=4;
            alt575 = dfa575.predict(input);
            switch (alt575) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getPrimaryTypeExpressionAccess().getFunctionTypeExpressionAction_0_0_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPrimaryTypeExpressionAccess().getLeftParenthesisKeyword_0_0_0_1());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getPrimaryTypeExpressionRule());
                      		}
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_0_0_0_2()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_TAnonymousFormalParameterList_2=ruleTAnonymousFormalParameterList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TAnonymousFormalParameterList_2;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPrimaryTypeExpressionAccess().getRightParenthesisKeyword_0_0_0_3());
                          
                    }
                    otherlv_4=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrimaryTypeExpressionAccess().getEqualsSignGreaterThanSignKeyword_0_0_0_4());
                          
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getReturnTypeRefPrimaryTypeExpressionParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_5_0=rulePrimaryTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPrimaryTypeExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_6=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTypeRefWithModifiersParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRefWithModifiers_7=ruleTypeRefWithModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefWithModifiers_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    {
                    otherlv_8=(Token)match(input,LeftParenthesis,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getPrimaryTypeExpressionAccess().getLeftParenthesisKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryTypeExpressionAccess().getTypeRefParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_75);
                    this_TypeRef_9=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRef_9;
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_10=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getPrimaryTypeExpressionAccess().getRightParenthesisKeyword_3_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleBogusTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBogusTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBogusTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBogusTypeRef=ruleBogusTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBogusTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleBogusTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_TypeRefWithModifiers_0 = null;


         enterRule(); 
            
        try {
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getBogusTypeRefAccess().getTypeRefWithModifiersParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_TypeRefWithModifiers_0=ruleTypeRefWithModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TypeRefWithModifiers_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefWithModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefWithModifiers = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefWithModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefWithModifiers=ruleTypeRefWithModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefWithModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefWithModifiers() throws RecognitionException {
        EObject current = null;

        EObject this_TypeRefWithoutModifiers_0 = null;

        AntlrDatatypeRuleToken lv_undefModifier_1_0 = null;

        AntlrDatatypeRuleToken lv_undefModifier_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt577=2;
            int LA577_0 = input.LA(1);

            if ( ((LA577_0>=Intersection && LA577_0<=Constructor)||LA577_0==Promisify||LA577_0==Target||LA577_0==Await||LA577_0==Union||LA577_0==This||LA577_0==This_1||(LA577_0>=Type && LA577_0<=Void)||LA577_0==LeftCurlyBracket||LA577_0==Tilde||LA577_0==RULE_IDENTIFIER) ) {
                alt577=1;
            }
            else if ( (LA577_0==QuestionMark) ) {
                alt577=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 577, 0, input);

                throw nvae;
            }
            switch (alt577) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getTypeRefWithoutModifiersParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_164);
                    this_TypeRefWithoutModifiers_0=ruleTypeRefWithoutModifiers();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRefWithoutModifiers_0;
                              afterParserOrEnumRuleCall();
                          
                    }
                    int alt576=2;
                    int LA576_0 = input.LA(1);

                    if ( (LA576_0==QuestionMark) ) {
                        int LA576_1 = input.LA(2);

                        if ( (synpred334_InternalN4JSXParser()) ) {
                            alt576=1;
                        }
                    }
                    switch (alt576) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getUndefModifierUndefModifierTokenParserRuleCall_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_2);
                            lv_undefModifier_1_0=ruleUndefModifierToken();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getTypeRefWithModifiersRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"undefModifier",
                                      		lv_undefModifier_1_0, 
                                      		"eu.numberfour.n4js.ts.TypeExpressions.UndefModifierToken");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefWithModifiersAccess().getParameterizedTypeRefAction_1_0(),
                                  current);
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeRefWithModifiersAccess().getUndefModifierUndefModifierTokenParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_undefModifier_3_0=ruleUndefModifierToken();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTypeRefWithModifiersRule());
                      	        }
                             		set(
                             			current, 
                             			"undefModifier",
                              		lv_undefModifier_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.UndefModifierToken");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefWithoutModifiers() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefWithoutModifiers = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefWithoutModifiersRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefWithoutModifiers=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefWithoutModifiers; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefWithoutModifiers() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_2_0=null;
        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ThisTypeRef_1 = null;

        EObject this_TypeTypeRef_3 = null;

        EObject this_FunctionTypeExpressionOLD_4 = null;

        EObject this_UnionTypeExpressionOLD_5 = null;

        EObject this_IntersectionTypeExpressionOLD_6 = null;


         enterRule(); 
            
        try {
            {
            int alt580=5;
            switch ( input.LA(1) ) {
            case Promisify:
            case Target:
            case Await:
            case This:
            case This_1:
            case Void:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt580=1;
                }
                break;
            case Constructor:
            case Type:
                {
                alt580=2;
                }
                break;
            case LeftCurlyBracket:
                {
                alt580=3;
                }
                break;
            case Union:
                {
                alt580=4;
                }
                break;
            case Intersection:
                {
                alt580=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 580, 0, input);

                throw nvae;
            }

            switch (alt580) {
                case 1 :
                    {
                    {
                    int alt578=2;
                    switch ( input.LA(1) ) {
                    case Promisify:
                    case Target:
                    case Await:
                    case This:
                    case Void:
                    case RULE_IDENTIFIER:
                        {
                        alt578=1;
                        }
                        break;
                    case Tilde:
                        {
                        switch ( input.LA(2) ) {
                        case Tilde:
                            {
                            int LA578_4 = input.LA(3);

                            if ( (LA578_4==Promisify||LA578_4==Target||LA578_4==Await||LA578_4==This||LA578_4==Void||LA578_4==RULE_IDENTIFIER) ) {
                                alt578=1;
                            }
                            else if ( (LA578_4==This_1) ) {
                                alt578=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 578, 4, input);

                                throw nvae;
                            }
                            }
                            break;
                        case RULE_STRUCTMODSUFFIX:
                            {
                            int LA578_5 = input.LA(3);

                            if ( (LA578_5==This_1) ) {
                                alt578=2;
                            }
                            else if ( (LA578_5==Promisify||LA578_5==Target||LA578_5==Await||LA578_5==This||LA578_5==Void||LA578_5==RULE_IDENTIFIER) ) {
                                alt578=1;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 578, 5, input);

                                throw nvae;
                            }
                            }
                            break;
                        case Promisify:
                        case Target:
                        case Await:
                        case This:
                        case Void:
                        case RULE_IDENTIFIER:
                            {
                            alt578=1;
                            }
                            break;
                        case This_1:
                            {
                            alt578=2;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 578, 2, input);

                            throw nvae;
                        }

                        }
                        break;
                    case This_1:
                        {
                        alt578=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 578, 0, input);

                        throw nvae;
                    }

                    switch (alt578) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getParameterizedTypeRefParserRuleCall_0_0_0()); 
                                  
                            }
                            pushFollow(FOLLOW_48);
                            this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ParameterizedTypeRef_0;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {
                               
                                      newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getThisTypeRefParserRuleCall_0_0_1()); 
                                  
                            }
                            pushFollow(FOLLOW_48);
                            this_ThisTypeRef_1=ruleThisTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      current = this_ThisTypeRef_1;
                                      afterParserOrEnumRuleCall();
                                  
                            }

                            }
                            break;

                    }
                    int alt579=2;
                    alt579 = dfa579.predict(input);
                    switch (alt579) {
                        case 1 :
                            {
                            {
                            lv_dynamic_2_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_dynamic_2_0, grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getTypeRefWithoutModifiersRule());
                              	        }
                                     		setWithLastConsumed(current, "dynamic", true, "+");
                              	    
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getTypeTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_3=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getFunctionTypeExpressionOLDParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTypeExpressionOLD_4=ruleFunctionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getUnionTypeExpressionOLDParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_5=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefWithoutModifiersAccess().getIntersectionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_6=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefFunctionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefFunctionTypeExpression=ruleTypeRefFunctionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefFunctionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ArrayTypeRef_1 = null;

        EObject this_TypeTypeRef_2 = null;

        EObject this_UnionTypeExpressionOLD_3 = null;

        EObject this_IntersectionTypeExpressionOLD_4 = null;


         enterRule(); 
            
        try {
            {
            int alt581=5;
            switch ( input.LA(1) ) {
            case Promisify:
            case Target:
            case Await:
            case This:
            case Void:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt581=1;
                }
                break;
            case LeftSquareBracket:
                {
                alt581=2;
                }
                break;
            case Constructor:
            case Type:
                {
                alt581=3;
                }
                break;
            case Union:
                {
                alt581=4;
                }
                break;
            case Intersection:
                {
                alt581=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 581, 0, input);

                throw nvae;
            }

            switch (alt581) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getParameterizedTypeRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_1=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getTypeTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_2=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getUnionTypeExpressionOLDParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_3=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getIntersectionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_4=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeRefForCast() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRefForCast = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefForCastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRefForCast=ruleTypeRefForCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRefForCast; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeRefForCast() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRef_0 = null;

        EObject this_ArrayTypeRef_1 = null;

        EObject this_ThisTypeRef_2 = null;

        EObject this_TypeTypeRef_3 = null;

        EObject this_FunctionTypeExpressionOLD_4 = null;

        EObject this_ArrowFunctionTypeExpression_5 = null;

        EObject this_UnionTypeExpressionOLD_6 = null;

        EObject this_IntersectionTypeExpressionOLD_7 = null;


         enterRule(); 
            
        try {
            {
            int alt582=8;
            alt582 = dfa582.predict(input);
            switch (alt582) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getParameterizedTypeRefParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRef_0=ruleParameterizedTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRef_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getArrayTypeRefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayTypeRef_1=ruleArrayTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrayTypeRef_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getThisTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRef_2=ruleThisTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getTypeTypeRefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeTypeRef_3=ruleTypeTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeTypeRef_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getFunctionTypeExpressionOLDParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTypeExpressionOLD_4=ruleFunctionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_FunctionTypeExpressionOLD_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getArrowFunctionTypeExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrowFunctionTypeExpression_5=ruleArrowFunctionTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ArrowFunctionTypeExpression_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getUnionTypeExpressionOLDParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionTypeExpressionOLD_6=ruleUnionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_UnionTypeExpressionOLD_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeRefForCastAccess().getIntersectionTypeExpressionOLDParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntersectionTypeExpressionOLD_7=ruleIntersectionTypeExpressionOLD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_IntersectionTypeExpressionOLD_7;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeArgInTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeArgInTypeTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeArgInTypeTypeRef=ruleTypeArgInTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeArgInTypeTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArgInTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRefNominal_0 = null;

        EObject this_ThisTypeRefNominal_1 = null;

        EObject this_Wildcard_2 = null;


         enterRule(); 
            
        try {
            {
            int alt583=3;
            int LA583_0 = input.LA(1);

            if ( (LA583_0==Promisify||LA583_0==Target||LA583_0==Await||LA583_0==This||LA583_0==Void||LA583_0==RULE_IDENTIFIER) ) {
                alt583=1;
            }
            else if ( (LA583_0==This_1) ) {
                alt583=2;
            }
            else if ( (LA583_0==QuestionMark) && (synpred336_InternalN4JSXParser())) {
                alt583=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 583, 0, input);

                throw nvae;
            }
            switch (alt583) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefNominal_0=ruleParameterizedTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getThisTypeRefNominalParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefNominal_1=ruleThisTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefNominal_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgInTypeTypeRefAccess().getWildcardParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Wildcard_2=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Wildcard_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRef=ruleThisTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ThisTypeRefNominal_0 = null;

        EObject this_ThisTypeRefStructural_1 = null;


         enterRule(); 
            
        try {
            {
            int alt584=2;
            int LA584_0 = input.LA(1);

            if ( (LA584_0==This_1) ) {
                alt584=1;
            }
            else if ( (LA584_0==Tilde) ) {
                alt584=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 584, 0, input);

                throw nvae;
            }
            switch (alt584) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getThisTypeRefAccess().getThisTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefNominal_0=ruleThisTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getThisTypeRefAccess().getThisTypeRefStructuralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ThisTypeRefStructural_1=ruleThisTypeRefStructural();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ThisTypeRefStructural_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRefNominal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRefNominal = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefNominalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRefNominal=ruleThisTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRefNominal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRefNominal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getThisTypeRefNominalAccess().getThisTypeRefNominalAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisTypeRefNominalAccess().getThisKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleThisTypeRefStructural() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThisTypeRefStructural = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisTypeRefStructuralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThisTypeRefStructural=ruleThisTypeRefStructural();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisTypeRefStructural; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleThisTypeRefStructural() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_definedTypingStrategy_0_0 = null;

        EObject this_TStructMemberList_3 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_165);
            lv_definedTypingStrategy_0_0=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getThisTypeRefStructuralRule());
              	        }
                     		set(
                     			current, 
                     			"definedTypingStrategy",
                      		lv_definedTypingStrategy_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyUseSiteOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,This_1,FOLLOW_166); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getThisTypeRefStructuralAccess().getThisKeyword_1());
                  
            }
            int alt585=2;
            int LA585_0 = input.LA(1);

            if ( (LA585_0==With) ) {
                int LA585_1 = input.LA(2);

                if ( (LA585_1==LeftCurlyBracket) ) {
                    alt585=1;
                }
            }
            switch (alt585) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getThisTypeRefStructuralAccess().getWithKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getThisTypeRefStructuralRule());
                      		}
                              newCompositeNode(grammarAccess.getThisTypeRefStructuralAccess().getTStructMemberListParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMemberList_3=ruleTStructMemberList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMemberList_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleFunctionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionTypeExpressionOLD=ruleFunctionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleFunctionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_declaredThisType_5_0 = null;

        EObject lv_ownedTypeVars_9_0 = null;

        EObject lv_ownedTypeVars_11_0 = null;

        EObject this_TAnonymousFormalParameterList_14 = null;

        EObject lv_returnTypeRef_17_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftCurlyBracket,FOLLOW_167); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            int alt586=2;
            int LA586_0 = input.LA(1);

            if ( (LA586_0==CommercialAt) ) {
                alt586=1;
            }
            switch (alt586) {
                case 1 :
                    {
                    otherlv_2=(Token)match(input,CommercialAt,FOLLOW_168); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getFunctionTypeExpressionOLDAccess().getCommercialAtKeyword_2_0());
                          
                    }
                    otherlv_3=(Token)match(input,This,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFunctionTypeExpressionOLDAccess().getThisKeyword_2_1());
                          
                    }
                    otherlv_4=(Token)match(input,LeftParenthesis,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_2_2());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getDeclaredThisTypeTypeRefFunctionTypeExpressionParserRuleCall_2_3_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_75);
                    lv_declaredThisType_5_0=ruleTypeRefFunctionTypeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredThisType",
                              		lv_declaredThisType_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefFunctionTypeExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_2_4());
                          
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,Function,FOLLOW_170); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getFunctionTypeExpressionOLDAccess().getFunctionKeyword_3());
                  
            }
            int alt588=2;
            int LA588_0 = input.LA(1);

            if ( (LA588_0==LessThanSign) ) {
                alt588=1;
            }
            switch (alt588) {
                case 1 :
                    {
                    otherlv_8=(Token)match(input,LessThanSign,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getFunctionTypeExpressionOLDAccess().getLessThanSignKeyword_4_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_ownedTypeVars_9_0=ruleTypeVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		add(
                             			current, 
                             			"ownedTypeVars",
                              		lv_ownedTypeVars_9_0, 
                              		"eu.numberfour.n4js.N4JS.TypeVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop587:
                    do {
                        int alt587=2;
                        int LA587_0 = input.LA(1);

                        if ( (LA587_0==Comma) ) {
                            alt587=1;
                        }


                        switch (alt587) {
                    	case 1 :
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getFunctionTypeExpressionOLDAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_ownedTypeVars_11_0=ruleTypeVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"ownedTypeVars",
                    	              		lv_ownedTypeVars_11_0, 
                    	              		"eu.numberfour.n4js.N4JS.TypeVariable");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop587;
                        }
                    } while (true);

                    otherlv_12=(Token)match(input,GreaterThanSign,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_12, grammarAccess.getFunctionTypeExpressionOLDAccess().getGreaterThanSignKeyword_4_3());
                          
                    }

                    }
                    break;

            }

            otherlv_13=(Token)match(input,LeftParenthesis,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getFunctionTypeExpressionOLDAccess().getLeftParenthesisKeyword_5());
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getFunctionTypeExpressionOLDRule());
              		}
                      newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getTAnonymousFormalParameterListParserRuleCall_6()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_TAnonymousFormalParameterList_14=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_14;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_15=(Token)match(input,RightParenthesis,FOLLOW_171); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_15, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightParenthesisKeyword_7());
                  
            }
            int alt589=2;
            int LA589_0 = input.LA(1);

            if ( (LA589_0==Colon) ) {
                alt589=1;
            }
            switch (alt589) {
                case 1 :
                    {
                    otherlv_16=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_16, grammarAccess.getFunctionTypeExpressionOLDAccess().getColonKeyword_8_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFunctionTypeExpressionOLDAccess().getReturnTypeRefTypeRefParserRuleCall_8_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_12);
                    lv_returnTypeRef_17_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFunctionTypeExpressionOLDRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_17_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_18, grammarAccess.getFunctionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_9());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrowFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrowFunctionTypeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrowFunctionTypeExpression=ruleArrowFunctionTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrowFunctionTypeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrowFunctionTypeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject this_TAnonymousFormalParameterList_2 = null;

        EObject lv_returnTypeRef_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getArrowFunctionTypeExpressionAccess().getFunctionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getArrowFunctionTypeExpressionAccess().getLeftParenthesisKeyword_1());
                  
            }
            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getArrowFunctionTypeExpressionRule());
              		}
                      newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_2()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_TAnonymousFormalParameterList_2=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_2;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_3=(Token)match(input,RightParenthesis,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getArrowFunctionTypeExpressionAccess().getRightParenthesisKeyword_3());
                  
            }
            otherlv_4=(Token)match(input,EqualsSignGreaterThanSign,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getArrowFunctionTypeExpressionAccess().getEqualsSignGreaterThanSignKeyword_4());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrowFunctionTypeExpressionAccess().getReturnTypeRefPrimaryTypeExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_returnTypeRef_5_0=rulePrimaryTypeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrowFunctionTypeExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"returnTypeRef",
                      		lv_returnTypeRef_5_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.PrimaryTypeExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTAnonymousFormalParameterList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        EObject lv_fpars_0_0 = null;

        EObject lv_fpars_2_0 = null;


         enterRule(); 
            
        try {
            {
            int alt591=2;
            int LA591_0 = input.LA(1);

            if ( ((LA591_0>=Intersection && LA591_0<=Implements)||(LA591_0>=Promisify && LA591_0<=Abstract)||LA591_0==External||(LA591_0>=Private && LA591_0<=Project)||LA591_0==Public||LA591_0==Static||LA591_0==Target||(LA591_0>=Async && LA591_0<=Await)||LA591_0==Union||(LA591_0>=Yield && LA591_0<=This)||LA591_0==From||LA591_0==This_1||(LA591_0>=Type && LA591_0<=Void)||LA591_0==FullStopFullStopFullStop||(LA591_0>=Get && LA591_0<=Let)||(LA591_0>=Out && LA591_0<=Set)||LA591_0==As||LA591_0==Of||LA591_0==LeftParenthesis||LA591_0==QuestionMark||LA591_0==LeftSquareBracket||LA591_0==LeftCurlyBracket||LA591_0==Tilde||LA591_0==RULE_IDENTIFIER) ) {
                alt591=1;
            }
            switch (alt591) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_44);
                    lv_fpars_0_0=ruleTAnonymousFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterListRule());
                      	        }
                             		add(
                             			current, 
                             			"fpars",
                              		lv_fpars_0_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop590:
                    do {
                        int alt590=2;
                        int LA590_0 = input.LA(1);

                        if ( (LA590_0==Comma) ) {
                            alt590=1;
                        }


                        switch (alt590) {
                    	case 1 :
                    	    {
                    	    otherlv_1=(Token)match(input,Comma,FOLLOW_172); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_1, grammarAccess.getTAnonymousFormalParameterListAccess().getCommaKeyword_1_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_fpars_2_0=ruleTAnonymousFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterListRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"fpars",
                    	              		lv_fpars_2_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop590;
                        }
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTAnonymousFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTAnonymousFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTAnonymousFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTAnonymousFormalParameter=ruleTAnonymousFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTAnonymousFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTAnonymousFormalParameter() throws RecognitionException {
        EObject current = null;

        Token lv_variadic_0_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_typeRef_3_0 = null;


         enterRule(); 
            
        try {
            {
            {
            int alt592=2;
            int LA592_0 = input.LA(1);

            if ( (LA592_0==FullStopFullStopFullStop) ) {
                alt592=1;
            }
            switch (alt592) {
                case 1 :
                    {
                    {
                    lv_variadic_0_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_variadic_0_0, grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTAnonymousFormalParameterRule());
                      	        }
                             		setWithLastConsumed(current, "variadic", true, "...");
                      	    
                    }

                    }


                    }
                    break;

            }
            int alt593=2;
            alt593 = dfa593.predict(input);
            switch (alt593) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterAccess().getNameBindingIdentifierParserRuleCall_1_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_92);
                    lv_name_1_0=ruleBindingIdentifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterRule());
                      	        }
                             		set(
                             			current, 
                             			"name",
                              		lv_name_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.BindingIdentifier");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getTAnonymousFormalParameterAccess().getColonKeyword_1_1());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefTypeRefParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_typeRef_3_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTAnonymousFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"typeRef",
                      		lv_typeRef_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleUnionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionTypeExpressionOLD=ruleUnionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleUnionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_typeRefs_3_0 = null;

        EObject lv_typeRefs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnionTypeExpressionOLDAccess().getUnionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Union,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnionTypeExpressionOLDAccess().getUnionKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUnionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_27);
            lv_typeRefs_3_0=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionOLDRule());
              	        }
                     		add(
                     			current, 
                     			"typeRefs",
                      		lv_typeRefs_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop594:
            do {
                int alt594=2;
                int LA594_0 = input.LA(1);

                if ( (LA594_0==Comma) ) {
                    alt594=1;
                }


                switch (alt594) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_174); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getUnionTypeExpressionOLDAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getUnionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_typeRefs_5_0=ruleTypeRefWithoutModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getUnionTypeExpressionOLDRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeRefs",
            	              		lv_typeRefs_5_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop594;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getUnionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleIntersectionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntersectionTypeExpressionOLD = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntersectionTypeExpressionOLD=ruleIntersectionTypeExpressionOLD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntersectionTypeExpressionOLD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleIntersectionTypeExpressionOLD() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_typeRefs_3_0 = null;

        EObject lv_typeRefs_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getIntersectionTypeExpressionOLDAccess().getIntersectionTypeExpressionAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Intersection,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getIntersectionTypeExpressionOLDAccess().getIntersectionKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftCurlyBracket,FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getIntersectionTypeExpressionOLDAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_27);
            lv_typeRefs_3_0=ruleTypeRefWithoutModifiers();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionOLDRule());
              	        }
                     		add(
                     			current, 
                     			"typeRefs",
                      		lv_typeRefs_3_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            loop595:
            do {
                int alt595=2;
                int LA595_0 = input.LA(1);

                if ( (LA595_0==Comma) ) {
                    alt595=1;
                }


                switch (alt595) {
            	case 1 :
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_174); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getIntersectionTypeExpressionOLDAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getIntersectionTypeExpressionOLDAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_typeRefs_5_0=ruleTypeRefWithoutModifiers();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getIntersectionTypeExpressionOLDRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"typeRefs",
            	              		lv_typeRefs_5_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRefWithoutModifiers");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop595;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getIntersectionTypeExpressionOLDAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRef=ruleParameterizedTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRef() throws RecognitionException {
        EObject current = null;

        EObject this_ParameterizedTypeRefNominal_0 = null;

        EObject this_ParameterizedTypeRefStructural_1 = null;


         enterRule(); 
            
        try {
            {
            int alt596=2;
            int LA596_0 = input.LA(1);

            if ( (LA596_0==Promisify||LA596_0==Target||LA596_0==Await||LA596_0==This||LA596_0==Void||LA596_0==RULE_IDENTIFIER) ) {
                alt596=1;
            }
            else if ( (LA596_0==Tilde) ) {
                alt596=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 596, 0, input);

                throw nvae;
            }
            switch (alt596) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefNominal_0=ruleParameterizedTypeRefNominal();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefNominal_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefStructuralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParameterizedTypeRefStructural_1=ruleParameterizedTypeRefStructural();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ParameterizedTypeRefStructural_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRefNominal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRefNominal = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefNominalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRefNominal=ruleParameterizedTypeRefNominal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRefNominal; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRefNominal() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeArgs_2_0 = null;

        EObject lv_typeArgs_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeRefNominalRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeCrossReference_0_0()); 
              	    
            }
            pushFollow(FOLLOW_175);
            ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt598=2;
            alt598 = dfa598.predict(input);
            switch (alt598) {
                case 1 :
                    {
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getParameterizedTypeRefNominalAccess().getLessThanSignKeyword_1_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_typeArgs_2_0=ruleTypeArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefNominalRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArgs",
                              		lv_typeArgs_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop597:
                    do {
                        int alt597=2;
                        int LA597_0 = input.LA(1);

                        if ( (LA597_0==Comma) ) {
                            alt597=1;
                        }


                        switch (alt597) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_176); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getParameterizedTypeRefNominalAccess().getCommaKeyword_1_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_typeArgs_4_0=ruleTypeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefNominalRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArgs",
                    	              		lv_typeArgs_4_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop597;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getParameterizedTypeRefNominalAccess().getGreaterThanSignKeyword_1_3());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleArrayTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArrayTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayTypeRef=ruleArrayTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleArrayTypeRef() throws RecognitionException {
        EObject current = null;

        Token lv_arrayTypeLiteral_0_0=null;
        Token otherlv_2=null;
        EObject lv_typeArgs_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            lv_arrayTypeLiteral_0_0=(Token)match(input,LeftSquareBracket,FOLLOW_176); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      newLeafNode(lv_arrayTypeLiteral_0_0, grammarAccess.getArrayTypeRefAccess().getArrayTypeLiteralLeftSquareBracketKeyword_0_0());
                  
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getArrayTypeRefRule());
              	        }
                     		setWithLastConsumed(current, "arrayTypeLiteral", true, "[");
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getArrayTypeRefAccess().getTypeArgsTypeArgumentParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_113);
            lv_typeArgs_1_0=ruleTypeArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getArrayTypeRefRule());
              	        }
                     		add(
                     			current, 
                     			"typeArgs",
                      		lv_typeArgs_1_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getArrayTypeRefAccess().getRightSquareBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleParameterizedTypeRefStructural() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterizedTypeRefStructural = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeRefStructural=ruleParameterizedTypeRefStructural();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeRefStructural; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleParameterizedTypeRefStructural() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_definedTypingStrategy_0_0 = null;

        EObject lv_typeArgs_3_0 = null;

        EObject lv_typeArgs_5_0 = null;

        EObject this_TStructMemberList_8 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_146);
            lv_definedTypingStrategy_0_0=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
              	        }
                     		set(
                     			current, 
                     			"definedTypingStrategy",
                      		lv_definedTypingStrategy_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypingStrategyUseSiteOperator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getParameterizedTypeRefStructuralRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeCrossReference_1_0()); 
              	    
            }
            pushFollow(FOLLOW_177);
            ruleTypeReferenceName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt600=2;
            alt600 = dfa600.predict(input);
            switch (alt600) {
                case 1 :
                    {
                    {
                    otherlv_2=(Token)match(input,LessThanSign,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getParameterizedTypeRefStructuralAccess().getLessThanSignKeyword_2_0());
                          
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_typeArgs_3_0=ruleTypeArgument();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
                      	        }
                             		add(
                             			current, 
                             			"typeArgs",
                              		lv_typeArgs_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop599:
                    do {
                        int alt599=2;
                        int LA599_0 = input.LA(1);

                        if ( (LA599_0==Comma) ) {
                            alt599=1;
                        }


                        switch (alt599) {
                    	case 1 :
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_176); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getParameterizedTypeRefStructuralAccess().getCommaKeyword_2_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_typeArgs_5_0=ruleTypeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterizedTypeRefStructuralRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeArgs",
                    	              		lv_typeArgs_5_0, 
                    	              		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgument");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop599;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,GreaterThanSign,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getParameterizedTypeRefStructuralAccess().getGreaterThanSignKeyword_2_3());
                          
                    }

                    }
                    break;

            }
            int alt601=2;
            int LA601_0 = input.LA(1);

            if ( (LA601_0==With) ) {
                int LA601_1 = input.LA(2);

                if ( (LA601_1==LeftCurlyBracket) ) {
                    alt601=1;
                }
            }
            switch (alt601) {
                case 1 :
                    {
                    otherlv_7=(Token)match(input,With,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getParameterizedTypeRefStructuralAccess().getWithKeyword_3_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      		if (current==null) {
                      			current = createModelElement(grammarAccess.getParameterizedTypeRefStructuralRule());
                      		}
                              newCompositeNode(grammarAccess.getParameterizedTypeRefStructuralAccess().getTStructMemberListParserRuleCall_3_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMemberList_8=ruleTStructMemberList(current);

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMemberList_8;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMemberList(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_astStructuralMembers_1_0 = null;


         enterRule(); 
            
        try {
            {
            {
            otherlv_0=(Token)match(input,LeftCurlyBracket,FOLLOW_178); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTStructMemberListAccess().getLeftCurlyBracketKeyword_0());
                  
            }
            loop603:
            do {
                int alt603=2;
                int LA603_0 = input.LA(1);

                if ( ((LA603_0>=Intersection && LA603_0<=With)||(LA603_0>=For && LA603_0<=Var)||(LA603_0>=As && LA603_0<=Of)||LA603_0==LessThanSign||LA603_0==RULE_IDENTIFIER) ) {
                    alt603=1;
                }


                switch (alt603) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersTStructMemberParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_179);
            	    lv_astStructuralMembers_1_0=ruleTStructMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTStructMemberListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"astStructuralMembers",
            	              		lv_astStructuralMembers_1_0, 
            	              		"eu.numberfour.n4js.ts.TypeExpressions.TStructMember");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    int alt602=3;
            	    int LA602_0 = input.LA(1);

            	    if ( (LA602_0==Semicolon) ) {
            	        alt602=1;
            	    }
            	    else if ( (LA602_0==Comma) ) {
            	        alt602=2;
            	    }
            	    switch (alt602) {
            	        case 1 :
            	            {
            	            otherlv_2=(Token)match(input,Semicolon,FOLLOW_178); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_2, grammarAccess.getTStructMemberListAccess().getSemicolonKeyword_1_1_0());
            	                  
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            otherlv_3=(Token)match(input,Comma,FOLLOW_178); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                  	newLeafNode(otherlv_3, grammarAccess.getTStructMemberListAccess().getCommaKeyword_1_1_1());
            	                  
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop603;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTStructMemberListAccess().getRightCurlyBracketKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructMember = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructMember=ruleTStructMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMember() throws RecognitionException {
        EObject current = null;

        EObject this_TStructGetter_0 = null;

        EObject this_TStructSetter_1 = null;

        EObject this_TStructMethod_2 = null;

        EObject this_TStructField_3 = null;


         enterRule(); 
            
        try {
            {
            int alt604=4;
            alt604 = dfa604.predict(input);
            switch (alt604) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructGetterParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructGetter_0=ruleTStructGetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructGetter_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructSetterParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructSetter_1=ruleTStructSetter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructSetter_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructMethodParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructMethod_2=ruleTStructMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructMethod_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTStructMemberAccess().getTStructFieldParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TStructField_3=ruleTStructField();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TStructField_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructMethod = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructMethod=ruleTStructMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructMethod; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructMethod() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_typeVars_2_0 = null;

        EObject lv_typeVars_4_0 = null;

        AntlrDatatypeRuleToken lv_name_6_0 = null;

        EObject this_TAnonymousFormalParameterList_8 = null;

        EObject lv_returnTypeRef_11_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructMethodAccess().getTStructMethodAction_0_0_0(),
                          current);
                  
            }

            }
            int alt606=2;
            int LA606_0 = input.LA(1);

            if ( (LA606_0==LessThanSign) ) {
                alt606=1;
            }
            switch (alt606) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,LessThanSign,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTStructMethodAccess().getLessThanSignKeyword_0_0_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_29);
                    lv_typeVars_2_0=ruleTypeVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                      	        }
                             		add(
                             			current, 
                             			"typeVars",
                              		lv_typeVars_2_0, 
                              		"eu.numberfour.n4js.N4JS.TypeVariable");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    loop605:
                    do {
                        int alt605=2;
                        int LA605_0 = input.LA(1);

                        if ( (LA605_0==Comma) ) {
                            alt605=1;
                        }


                        switch (alt605) {
                    	case 1 :
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_3, grammarAccess.getTStructMethodAccess().getCommaKeyword_0_0_1_2_0());
                    	          
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_typeVars_4_0=ruleTypeVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"typeVars",
                    	              		lv_typeVars_4_0, 
                    	              		"eu.numberfour.n4js.N4JS.TypeVariable");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop605;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,GreaterThanSign,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTStructMethodAccess().getGreaterThanSignKeyword_0_0_1_3());
                          
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructMethodAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_name_6_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_6_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_7=(Token)match(input,LeftParenthesis,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getTStructMethodAccess().getLeftParenthesisKeyword_0_0_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               
              		if (current==null) {
              			current = createModelElement(grammarAccess.getTStructMethodRule());
              		}
                      newCompositeNode(grammarAccess.getTStructMethodAccess().getTAnonymousFormalParameterListParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_75);
            this_TAnonymousFormalParameterList_8=ruleTAnonymousFormalParameterList(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_TAnonymousFormalParameterList_8;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_9=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getTStructMethodAccess().getRightParenthesisKeyword_2());
                  
            }
            int alt607=2;
            int LA607_0 = input.LA(1);

            if ( (LA607_0==Colon) ) {
                alt607=1;
            }
            switch (alt607) {
                case 1 :
                    {
                    otherlv_10=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_10, grammarAccess.getTStructMethodAccess().getColonKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructMethodAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_returnTypeRef_11_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructMethodRule());
                      	        }
                             		set(
                             			current, 
                             			"returnTypeRef",
                              		lv_returnTypeRef_11_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructField() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructField = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructFieldRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructField=ruleTStructField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructField() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_typeRef_2_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructFieldAccess().getNameIdentifierNameParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_54);
            lv_name_0_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructFieldRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }
            int alt608=2;
            int LA608_0 = input.LA(1);

            if ( (LA608_0==Colon) ) {
                alt608=1;
            }
            switch (alt608) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTStructFieldAccess().getColonKeyword_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructFieldAccess().getTypeRefTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_typeRef_2_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructFieldRule());
                      	        }
                             		set(
                             			current, 
                             			"typeRef",
                              		lv_typeRef_2_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructGetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructGetter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructGetterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructGetter=ruleTStructGetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructGetter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructGetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_declaredTypeRef_6_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructGetterAccess().getTStructGetterAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Get,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTStructGetterAccess().getGetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructGetterAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_name_2_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructGetterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTStructGetterAccess().getLeftParenthesisKeyword_1());
                  
            }
            otherlv_4=(Token)match(input,RightParenthesis,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getTStructGetterAccess().getRightParenthesisKeyword_2());
                  
            }
            int alt609=2;
            int LA609_0 = input.LA(1);

            if ( (LA609_0==Colon) ) {
                alt609=1;
            }
            switch (alt609) {
                case 1 :
                    {
                    otherlv_5=(Token)match(input,Colon,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTStructGetterAccess().getColonKeyword_3_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredTypeRef_6_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getTStructGetterRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredTypeRef",
                              		lv_declaredTypeRef_6_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTStructSetter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTStructSetter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTStructSetterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTStructSetter=ruleTStructSetter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTStructSetter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTStructSetter() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_fpar_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTStructSetterAccess().getTStructSetterAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Set,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTStructSetterAccess().getSetKeyword_0_0_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructSetterAccess().getNameIdentifierNameParserRuleCall_0_0_2_0()); 
              	    
            }
            pushFollow(FOLLOW_64);
            lv_name_2_0=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructSetterRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.IdentifierName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            otherlv_3=(Token)match(input,LeftParenthesis,FOLLOW_172); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTStructSetterAccess().getLeftParenthesisKeyword_1());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTStructSetterAccess().getFparTAnonymousFormalParameterParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_75);
            lv_fpar_4_0=ruleTAnonymousFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTStructSetterRule());
              	        }
                     		set(
                     			current, 
                     			"fpar",
                      		lv_fpar_4_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TAnonymousFormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTStructSetterAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypingStrategyUseSiteOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypingStrategyUseSiteOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypingStrategyUseSiteOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypingStrategyUseSiteOperator=ruleTypingStrategyUseSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypingStrategyUseSiteOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypingStrategyUseSiteOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_STRUCTMODSUFFIX_2=null;

         enterRule(); 
            
        try {
            {
            {
            kw=(Token)match(input,Tilde,FOLLOW_180); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_0()); 
                  
            }
            int alt610=3;
            int LA610_0 = input.LA(1);

            if ( (LA610_0==Tilde) ) {
                alt610=1;
            }
            else if ( (LA610_0==RULE_STRUCTMODSUFFIX) ) {
                alt610=2;
            }
            switch (alt610) {
                case 1 :
                    {
                    kw=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    this_STRUCTMODSUFFIX_2=(Token)match(input,RULE_STRUCTMODSUFFIX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_STRUCTMODSUFFIX_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_STRUCTMODSUFFIX_2, grammarAccess.getTypingStrategyUseSiteOperatorAccess().getSTRUCTMODSUFFIXTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleTypingStrategyDefSiteOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypingStrategyDefSiteOperator = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypingStrategyDefSiteOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypingStrategyDefSiteOperator=ruleTypingStrategyDefSiteOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypingStrategyDefSiteOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleTypingStrategyDefSiteOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getTypingStrategyDefSiteOperatorAccess().getTildeKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeTypeRef=ruleTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_constructorRef_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_typeArg_4_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTypeTypeRefAccess().getTypeTypeRefAction_0(),
                          current);
                  
            }

            }
            int alt611=2;
            int LA611_0 = input.LA(1);

            if ( (LA611_0==Type) ) {
                alt611=1;
            }
            else if ( (LA611_0==Constructor) ) {
                alt611=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 611, 0, input);

                throw nvae;
            }
            switch (alt611) {
                case 1 :
                    {
                    otherlv_1=(Token)match(input,Type,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeTypeRefAccess().getTypeKeyword_1_0());
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    lv_constructorRef_2_0=(Token)match(input,Constructor,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_constructorRef_2_0, grammarAccess.getTypeTypeRefAccess().getConstructorRefConstructorKeyword_1_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeTypeRefRule());
                      	        }
                             		setWithLastConsumed(current, "constructorRef", true, "constructor");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getTypeTypeRefAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            {
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeTypeRefAccess().getTypeArgTypeArgInTypeTypeRefParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_12);
            lv_typeArg_4_0=ruleTypeArgInTypeTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeTypeRefRule());
              	        }
                     		set(
                     			current, 
                     			"typeArg",
                      		lv_typeArg_4_0, 
                      		"eu.numberfour.n4js.ts.TypeExpressions.TypeArgInTypeTypeRef");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getTypeTypeRefAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleTypeArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeArgument = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeArgument=ruleTypeArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleTypeArgument() throws RecognitionException {
        EObject current = null;

        EObject this_Wildcard_0 = null;

        EObject this_WildcardNewNotation_1 = null;

        EObject this_TypeRef_2 = null;


         enterRule(); 
            
        try {
            {
            int alt612=3;
            switch ( input.LA(1) ) {
            case QuestionMark:
                {
                int LA612_1 = input.LA(2);

                if ( (synpred346_InternalN4JSXParser()) ) {
                    alt612=1;
                }
                else if ( (true) ) {
                    alt612=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 612, 1, input);

                    throw nvae;
                }
                }
                break;
            case Out:
            case In:
                {
                alt612=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Promisify:
            case Target:
            case Await:
            case Union:
            case This:
            case This_1:
            case Type:
            case Void:
            case LeftParenthesis:
            case LeftSquareBracket:
            case LeftCurlyBracket:
            case Tilde:
            case RULE_IDENTIFIER:
                {
                alt612=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 612, 0, input);

                throw nvae;
            }

            switch (alt612) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getWildcardParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Wildcard_0=ruleWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_Wildcard_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getWildcardNewNotationParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WildcardNewNotation_1=ruleWildcardNewNotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_WildcardNewNotation_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeArgumentAccess().getTypeRefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeRef_2=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_TypeRef_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWildcard() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcard = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWildcard=ruleWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWildcard() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_declaredUpperBound_3_0 = null;

        EObject lv_declaredLowerBound_5_0 = null;


         enterRule(); 
            
        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWildcardAccess().getWildcardAction_0_0_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,QuestionMark,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWildcardAccess().getQuestionMarkKeyword_0_0_1());
                  
            }

            }


            }
            int alt613=3;
            int LA613_0 = input.LA(1);

            if ( (LA613_0==Extends) ) {
                alt613=1;
            }
            else if ( (LA613_0==Super) ) {
                alt613=2;
            }
            switch (alt613) {
                case 1 :
                    {
                    {
                    otherlv_2=(Token)match(input,Extends,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWildcardAccess().getExtendsKeyword_1_0_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardAccess().getDeclaredUpperBoundTypeRefParserRuleCall_1_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    otherlv_4=(Token)match(input,Super,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getWildcardAccess().getSuperKeyword_1_1_0());
                          
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredLowerBound_5_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredLowerBound",
                              		lv_declaredLowerBound_5_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject entryRuleWildcardNewNotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWildcardNewNotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWildcardNewNotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWildcardNewNotation=ruleWildcardNewNotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWildcardNewNotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final EObject ruleWildcardNewNotation() throws RecognitionException {
        EObject current = null;

        Token lv_usingInOutNotation_0_0=null;
        Token lv_usingInOutNotation_2_0=null;
        EObject lv_declaredUpperBound_1_0 = null;

        EObject lv_declaredLowerBound_3_0 = null;


         enterRule(); 
            
        try {
            {
            int alt614=2;
            int LA614_0 = input.LA(1);

            if ( (LA614_0==Out) ) {
                alt614=1;
            }
            else if ( (LA614_0==In) ) {
                alt614=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 614, 0, input);

                throw nvae;
            }
            switch (alt614) {
                case 1 :
                    {
                    {
                    {
                    {
                    lv_usingInOutNotation_0_0=(Token)match(input,Out,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_usingInOutNotation_0_0, grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		setWithLastConsumed(current, "usingInOutNotation", true, "out");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundTypeRefParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredUpperBound_1_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredUpperBound",
                              		lv_declaredUpperBound_1_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    lv_usingInOutNotation_2_0=(Token)match(input,In,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_usingInOutNotation_2_0, grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		setWithLastConsumed(current, "usingInOutNotation", true, "in");
                      	    
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_declaredLowerBound_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWildcardNewNotationRule());
                      	        }
                             		set(
                             			current, 
                             			"declaredLowerBound",
                              		lv_declaredLowerBound_3_0, 
                              		"eu.numberfour.n4js.ts.TypeExpressions.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleUndefModifierToken() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUndefModifierToken = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefModifierTokenRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefModifierToken=ruleUndefModifierToken();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefModifierToken.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleUndefModifierToken() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            kw=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getUndefModifierTokenAccess().getQuestionMarkKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleBindingIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBindingIdentifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBindingIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBindingIdentifier=ruleBindingIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBindingIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleBindingIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        Token kw=null;
        AntlrDatatypeRuleToken this_N4Keyword_2 = null;


         enterRule(); 
            
        try {
            {
            int alt615=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt615=1;
                }
                break;
            case Yield:
                {
                alt615=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Async:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
                {
                alt615=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 615, 0, input);

                throw nvae;
            }

            switch (alt615) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getBindingIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Yield,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getBindingIdentifierAccess().getYieldKeyword_1_0()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingIdentifierAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_2=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken norm1_BindingIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken this_N4Keyword_1 = null;


         enterRule(); 
            
        try {
            {
            int alt616=2;
            int LA616_0 = input.LA(1);

            if ( (LA616_0==RULE_IDENTIFIER) ) {
                alt616=1;
            }
            else if ( ((LA616_0>=Intersection && LA616_0<=Implements)||(LA616_0>=Promisify && LA616_0<=Abstract)||LA616_0==External||(LA616_0>=Private && LA616_0<=Project)||LA616_0==Public||LA616_0==Static||LA616_0==Target||(LA616_0>=Async && LA616_0<=Await)||LA616_0==Union||LA616_0==This||LA616_0==From||LA616_0==Type||(LA616_0>=Get && LA616_0<=Let)||(LA616_0>=Out && LA616_0<=Set)||LA616_0==As||LA616_0==Of) ) {
                alt616=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 616, 0, input);

                throw nvae;
            }
            switch (alt616) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getBindingIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBindingIdentifierAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_1=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleIdentifierName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifierName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifierName=ruleIdentifierName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifierName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleIdentifierName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_IDENTIFIER_0=null;
        AntlrDatatypeRuleToken this_ReservedWord_1 = null;

        AntlrDatatypeRuleToken this_N4Keyword_2 = null;


         enterRule(); 
            
        try {
            {
            int alt617=3;
            switch ( input.LA(1) ) {
            case RULE_IDENTIFIER:
                {
                alt617=1;
                }
                break;
            case Instanceof:
            case Continue:
            case Debugger:
            case Function:
            case Default:
            case Extends:
            case Finally:
            case Delete:
            case Export:
            case Import:
            case Return:
            case Switch:
            case Typeof:
            case Break:
            case Catch:
            case Class:
            case Const:
            case False:
            case Super:
            case Throw:
            case While:
            case Yield:
            case Case:
            case Else:
            case Enum:
            case Null:
            case This_1:
            case True:
            case Void:
            case With:
            case For:
            case New:
            case Try:
            case Var:
            case Do:
            case If:
            case In:
                {
                alt617=2;
                }
                break;
            case Intersection:
            case Constructor:
            case Implements:
            case Promisify:
            case Interface:
            case Protected:
            case Abstract:
            case External:
            case Private:
            case Project:
            case Public:
            case Static:
            case Target:
            case Async:
            case Await:
            case Union:
            case This:
            case From:
            case Type:
            case Get:
            case Let:
            case Out:
            case Set:
            case As:
            case Of:
                {
                alt617=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 617, 0, input);

                throw nvae;
            }

            switch (alt617) {
                case 1 :
                    {
                    this_IDENTIFIER_0=(Token)match(input,RULE_IDENTIFIER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_IDENTIFIER_0);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierNameAccess().getIDENTIFIERTerminalRuleCall_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentifierNameAccess().getReservedWordParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReservedWord_1=ruleReservedWord();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ReservedWord_1);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIdentifierNameAccess().getN4KeywordParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_N4Keyword_2=ruleN4Keyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_N4Keyword_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleReservedWord() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleReservedWord = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReservedWordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReservedWord=ruleReservedWord();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReservedWord.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleReservedWord() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt618=37;
            switch ( input.LA(1) ) {
            case Break:
                {
                alt618=1;
                }
                break;
            case Case:
                {
                alt618=2;
                }
                break;
            case Catch:
                {
                alt618=3;
                }
                break;
            case Class:
                {
                alt618=4;
                }
                break;
            case Const:
                {
                alt618=5;
                }
                break;
            case Continue:
                {
                alt618=6;
                }
                break;
            case Debugger:
                {
                alt618=7;
                }
                break;
            case Default:
                {
                alt618=8;
                }
                break;
            case Delete:
                {
                alt618=9;
                }
                break;
            case Do:
                {
                alt618=10;
                }
                break;
            case Else:
                {
                alt618=11;
                }
                break;
            case Export:
                {
                alt618=12;
                }
                break;
            case Extends:
                {
                alt618=13;
                }
                break;
            case Finally:
                {
                alt618=14;
                }
                break;
            case For:
                {
                alt618=15;
                }
                break;
            case Function:
                {
                alt618=16;
                }
                break;
            case If:
                {
                alt618=17;
                }
                break;
            case Import:
                {
                alt618=18;
                }
                break;
            case In:
                {
                alt618=19;
                }
                break;
            case Instanceof:
                {
                alt618=20;
                }
                break;
            case New:
                {
                alt618=21;
                }
                break;
            case Return:
                {
                alt618=22;
                }
                break;
            case Super:
                {
                alt618=23;
                }
                break;
            case Switch:
                {
                alt618=24;
                }
                break;
            case This_1:
                {
                alt618=25;
                }
                break;
            case Throw:
                {
                alt618=26;
                }
                break;
            case Try:
                {
                alt618=27;
                }
                break;
            case Typeof:
                {
                alt618=28;
                }
                break;
            case Var:
                {
                alt618=29;
                }
                break;
            case Void:
                {
                alt618=30;
                }
                break;
            case While:
                {
                alt618=31;
                }
                break;
            case With:
                {
                alt618=32;
                }
                break;
            case Yield:
                {
                alt618=33;
                }
                break;
            case Null:
                {
                alt618=34;
                }
                break;
            case True:
                {
                alt618=35;
                }
                break;
            case False:
                {
                alt618=36;
                }
                break;
            case Enum:
                {
                alt618=37;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 618, 0, input);

                throw nvae;
            }

            switch (alt618) {
                case 1 :
                    {
                    kw=(Token)match(input,Break,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getBreakKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Case,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getCaseKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Catch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getCatchKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getClassKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getConstKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,Continue,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getContinueKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,Debugger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDebuggerKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    kw=(Token)match(input,Default,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDefaultKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,Delete,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDeleteKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,Do,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getDoKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,Else,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getElseKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    kw=(Token)match(input,Export,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getExportKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    kw=(Token)match(input,Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getExtendsKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    kw=(Token)match(input,Finally,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFinallyKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    kw=(Token)match(input,For,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getForKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    kw=(Token)match(input,Function,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFunctionKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    {
                    kw=(Token)match(input,If,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getIfKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    {
                    kw=(Token)match(input,Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getImportKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    {
                    kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getInKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    {
                    kw=(Token)match(input,Instanceof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getInstanceofKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    {
                    kw=(Token)match(input,New,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getNewKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    {
                    kw=(Token)match(input,Return,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getReturnKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    {
                    kw=(Token)match(input,Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getSuperKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    {
                    kw=(Token)match(input,Switch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getSwitchKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    {
                    kw=(Token)match(input,This_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getThisKeyword_24()); 
                          
                    }

                    }
                    break;
                case 26 :
                    {
                    kw=(Token)match(input,Throw,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getThrowKeyword_25()); 
                          
                    }

                    }
                    break;
                case 27 :
                    {
                    kw=(Token)match(input,Try,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTryKeyword_26()); 
                          
                    }

                    }
                    break;
                case 28 :
                    {
                    kw=(Token)match(input,Typeof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTypeofKeyword_27()); 
                          
                    }

                    }
                    break;
                case 29 :
                    {
                    kw=(Token)match(input,Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getVarKeyword_28()); 
                          
                    }

                    }
                    break;
                case 30 :
                    {
                    kw=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getVoidKeyword_29()); 
                          
                    }

                    }
                    break;
                case 31 :
                    {
                    kw=(Token)match(input,While,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getWhileKeyword_30()); 
                          
                    }

                    }
                    break;
                case 32 :
                    {
                    kw=(Token)match(input,With,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getWithKeyword_31()); 
                          
                    }

                    }
                    break;
                case 33 :
                    {
                    kw=(Token)match(input,Yield,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getYieldKeyword_32()); 
                          
                    }

                    }
                    break;
                case 34 :
                    {
                    kw=(Token)match(input,Null,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getNullKeyword_33()); 
                          
                    }

                    }
                    break;
                case 35 :
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getTrueKeyword_34()); 
                          
                    }

                    }
                    break;
                case 36 :
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getFalseKeyword_35()); 
                          
                    }

                    }
                    break;
                case 37 :
                    {
                    kw=(Token)match(input,Enum,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getReservedWordAccess().getEnumKeyword_36()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final String entryRuleN4Keyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleN4Keyword = null;


        try {
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getN4KeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleN4Keyword=ruleN4Keyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleN4Keyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final AntlrDatatypeRuleToken ruleN4Keyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            {
            int alt619=25;
            switch ( input.LA(1) ) {
            case Get:
                {
                alt619=1;
                }
                break;
            case Set:
                {
                alt619=2;
                }
                break;
            case Let:
                {
                alt619=3;
                }
                break;
            case Project:
                {
                alt619=4;
                }
                break;
            case External:
                {
                alt619=5;
                }
                break;
            case Abstract:
                {
                alt619=6;
                }
                break;
            case Static:
                {
                alt619=7;
                }
                break;
            case As:
                {
                alt619=8;
                }
                break;
            case From:
                {
                alt619=9;
                }
                break;
            case Constructor:
                {
                alt619=10;
                }
                break;
            case Of:
                {
                alt619=11;
                }
                break;
            case Target:
                {
                alt619=12;
                }
                break;
            case Type:
                {
                alt619=13;
                }
                break;
            case Union:
                {
                alt619=14;
                }
                break;
            case Intersection:
                {
                alt619=15;
                }
                break;
            case This:
                {
                alt619=16;
                }
                break;
            case Promisify:
                {
                alt619=17;
                }
                break;
            case Await:
                {
                alt619=18;
                }
                break;
            case Async:
                {
                alt619=19;
                }
                break;
            case Implements:
                {
                alt619=20;
                }
                break;
            case Interface:
                {
                alt619=21;
                }
                break;
            case Private:
                {
                alt619=22;
                }
                break;
            case Protected:
                {
                alt619=23;
                }
                break;
            case Public:
                {
                alt619=24;
                }
                break;
            case Out:
                {
                alt619=25;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 619, 0, input);

                throw nvae;
            }

            switch (alt619) {
                case 1 :
                    {
                    kw=(Token)match(input,Get,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getGetKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    {
                    kw=(Token)match(input,Set,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getSetKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    {
                    kw=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getLetKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    {
                    kw=(Token)match(input,Project,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getProjectKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    {
                    kw=(Token)match(input,External,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getExternalKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    {
                    kw=(Token)match(input,Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAbstractKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    {
                    kw=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getStaticKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    {
                    kw=(Token)match(input,As,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAsKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    {
                    kw=(Token)match(input,From,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getFromKeyword_8()); 
                          
                    }

                    }
                    break;
                case 10 :
                    {
                    kw=(Token)match(input,Constructor,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getConstructorKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    {
                    kw=(Token)match(input,Of,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getOfKeyword_10()); 
                          
                    }

                    }
                    break;
                case 12 :
                    {
                    kw=(Token)match(input,Target,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getTargetKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    {
                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getTypeKeyword_12()); 
                          
                    }

                    }
                    break;
                case 14 :
                    {
                    kw=(Token)match(input,Union,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getUnionKeyword_13()); 
                          
                    }

                    }
                    break;
                case 15 :
                    {
                    kw=(Token)match(input,Intersection,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getIntersectionKeyword_14()); 
                          
                    }

                    }
                    break;
                case 16 :
                    {
                    kw=(Token)match(input,This,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getThisKeyword_15()); 
                          
                    }

                    }
                    break;
                case 17 :
                    {
                    kw=(Token)match(input,Promisify,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPromisifyKeyword_16()); 
                          
                    }

                    }
                    break;
                case 18 :
                    {
                    kw=(Token)match(input,Await,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAwaitKeyword_17()); 
                          
                    }

                    }
                    break;
                case 19 :
                    {
                    kw=(Token)match(input,Async,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getAsyncKeyword_18()); 
                          
                    }

                    }
                    break;
                case 20 :
                    {
                    kw=(Token)match(input,Implements,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getImplementsKeyword_19()); 
                          
                    }

                    }
                    break;
                case 21 :
                    {
                    kw=(Token)match(input,Interface,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getInterfaceKeyword_20()); 
                          
                    }

                    }
                    break;
                case 22 :
                    {
                    kw=(Token)match(input,Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPrivateKeyword_21()); 
                          
                    }

                    }
                    break;
                case 23 :
                    {
                    kw=(Token)match(input,Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getProtectedKeyword_22()); 
                          
                    }

                    }
                    break;
                case 24 :
                    {
                    kw=(Token)match(input,Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getPublicKeyword_23()); 
                          
                    }

                    }
                    break;
                case 25 :
                    {
                    kw=(Token)match(input,Out,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getN4KeywordAccess().getOutKeyword_24()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleVariableStatementKeyword() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            {
            int alt620=3;
            switch ( input.LA(1) ) {
            case Var:
                {
                alt620=1;
                }
                break;
            case Const:
                {
                alt620=2;
                }
                break;
            case Let:
                {
                alt620=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 620, 0, input);

                throw nvae;
            }

            switch (alt620) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getVarEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getVariableStatementKeywordAccess().getVarEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getConstEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getVariableStatementKeywordAccess().getConstEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Let,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getVariableStatementKeywordAccess().getLetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getVariableStatementKeywordAccess().getLetEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            {
            int alt621=2;
            int LA621_0 = input.LA(1);

            if ( (LA621_0==PlusSignPlusSign) ) {
                alt621=1;
            }
            else if ( (LA621_0==HyphenMinusHyphenMinus) ) {
                alt621=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 621, 0, input);

                throw nvae;
            }
            switch (alt621) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getIncEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getIncEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getPostfixOperatorAccess().getDecEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getDecEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleUnaryOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;

         enterRule(); 
        try {
            {
            int alt622=9;
            switch ( input.LA(1) ) {
            case Delete:
                {
                alt622=1;
                }
                break;
            case Void:
                {
                alt622=2;
                }
                break;
            case Typeof:
                {
                alt622=3;
                }
                break;
            case PlusSignPlusSign:
                {
                alt622=4;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt622=5;
                }
                break;
            case PlusSign:
                {
                alt622=6;
                }
                break;
            case HyphenMinus:
                {
                alt622=7;
                }
                break;
            case Tilde:
                {
                alt622=8;
                }
                break;
            case ExclamationMark:
                {
                alt622=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 622, 0, input);

                throw nvae;
            }

            switch (alt622) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Delete,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getDeleteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getUnaryOperatorAccess().getDeleteEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Void,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getVoidEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getUnaryOperatorAccess().getVoidEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Typeof,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getTypeofEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getUnaryOperatorAccess().getTypeofEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getIncEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getUnaryOperatorAccess().getIncEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    enumLiteral_4=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getDecEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getUnaryOperatorAccess().getDecEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    enumLiteral_5=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getPosEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getUnaryOperatorAccess().getPosEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    enumLiteral_6=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getNegEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getUnaryOperatorAccess().getNegEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    {
                    {
                    enumLiteral_7=(Token)match(input,Tilde,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getInvEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getUnaryOperatorAccess().getInvEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    {
                    enumLiteral_8=(Token)match(input,ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_8, grammarAccess.getUnaryOperatorAccess().getNotEnumLiteralDeclaration_8()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleMultiplicativeOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;

         enterRule(); 
        try {
            {
            int alt623=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt623=1;
                }
                break;
            case Solidus:
                {
                alt623=2;
                }
                break;
            case PercentSign:
                {
                alt623=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 623, 0, input);

                throw nvae;
            }

            switch (alt623) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getTimesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOperatorAccess().getTimesEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOperatorAccess().getDivEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getMultiplicativeOperatorAccess().getModEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getMultiplicativeOperatorAccess().getModEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleAdditiveOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;

         enterRule(); 
        try {
            {
            int alt624=2;
            int LA624_0 = input.LA(1);

            if ( (LA624_0==PlusSign) ) {
                alt624=1;
            }
            else if ( (LA624_0==HyphenMinus) ) {
                alt624=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 624, 0, input);

                throw nvae;
            }
            switch (alt624) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOperatorAccess().getAddEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOperatorAccess().getSubEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleEqualityOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            {
            int alt625=4;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSignEqualsSign:
                {
                alt625=1;
                }
                break;
            case ExclamationMarkEqualsSignEqualsSign:
                {
                alt625=2;
                }
                break;
            case EqualsSignEqualsSign:
                {
                alt625=3;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt625=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 625, 0, input);

                throw nvae;
            }

            switch (alt625) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getSameEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getEqualityOperatorAccess().getSameEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getNsameEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getEqualityOperatorAccess().getNsameEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getEqualityOperatorAccess().getEqEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getEqualityOperatorAccess().getNeqEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final Enumerator ruleN4Modifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;

         enterRule(); 
        try {
            {
            int alt626=8;
            switch ( input.LA(1) ) {
            case Private:
                {
                alt626=1;
                }
                break;
            case Project:
                {
                alt626=2;
                }
                break;
            case Protected:
                {
                alt626=3;
                }
                break;
            case Public:
                {
                alt626=4;
                }
                break;
            case External:
                {
                alt626=5;
                }
                break;
            case Abstract:
                {
                alt626=6;
                }
                break;
            case Static:
                {
                alt626=7;
                }
                break;
            case Const:
                {
                alt626=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 626, 0, input);

                throw nvae;
            }

            switch (alt626) {
                case 1 :
                    {
                    {
                    enumLiteral_0=(Token)match(input,Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getPrivateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getN4ModifierAccess().getPrivateEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    enumLiteral_1=(Token)match(input,Project,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getProjectEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getN4ModifierAccess().getProjectEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    enumLiteral_2=(Token)match(input,Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getN4ModifierAccess().getProtectedEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    enumLiteral_3=(Token)match(input,Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getPublicEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getN4ModifierAccess().getPublicEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    enumLiteral_4=(Token)match(input,External,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getExternalEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getN4ModifierAccess().getExternalEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    enumLiteral_5=(Token)match(input,Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getAbstractEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getN4ModifierAccess().getAbstractEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    enumLiteral_6=(Token)match(input,Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getStaticEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getN4ModifierAccess().getStaticEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    {
                    {
                    enumLiteral_7=(Token)match(input,Const,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getN4ModifierAccess().getConstEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_7, grammarAccess.getN4ModifierAccess().getConstEnumLiteralDeclaration_7()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    public final void synpred1_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_56); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_57);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred2_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        match(input,Async,FOLLOW_56); if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_57);
        ruleNoLineTerminator(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred3_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_138); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred4_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop627:
        do {
            int alt627=2;
            int LA627_0 = input.LA(1);

            if ( ((LA627_0>=Protected && LA627_0<=Abstract)||LA627_0==External||(LA627_0>=Private && LA627_0<=Project)||LA627_0==Public||LA627_0==Static||LA627_0==Const) ) {
                alt627=1;
            }


            switch (alt627) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_20);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop627;
            }
        } while (true);

        match(input,Class,FOLLOW_183); if (state.failed) return ;
        int alt628=2;
        int LA628_0 = input.LA(1);

        if ( (LA628_0==Tilde) ) {
            alt628=1;
        }
        switch (alt628) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_184);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt629=2;
        int LA629_0 = input.LA(1);

        if ( ((LA629_0>=Intersection && LA629_0<=Implements)||(LA629_0>=Promisify && LA629_0<=Abstract)||LA629_0==External||(LA629_0>=Private && LA629_0<=Project)||LA629_0==Public||LA629_0==Static||LA629_0==Target||(LA629_0>=Async && LA629_0<=Await)||LA629_0==Union||(LA629_0>=Yield && LA629_0<=This)||LA629_0==From||LA629_0==Type||(LA629_0>=Get && LA629_0<=Let)||(LA629_0>=Out && LA629_0<=Set)||LA629_0==As||LA629_0==Of||LA629_0==RULE_IDENTIFIER) ) {
            alt629=1;
        }
        switch (alt629) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred5_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop630:
        do {
            int alt630=2;
            int LA630_0 = input.LA(1);

            if ( ((LA630_0>=Protected && LA630_0<=Abstract)||LA630_0==External||(LA630_0>=Private && LA630_0<=Project)||LA630_0==Public||LA630_0==Static||LA630_0==Const) ) {
                alt630=1;
            }


            switch (alt630) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_23);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop630;
            }
        } while (true);

        match(input,Interface,FOLLOW_183); if (state.failed) return ;
        int alt631=2;
        int LA631_0 = input.LA(1);

        if ( (LA631_0==Tilde) ) {
            alt631=1;
        }
        switch (alt631) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_184);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt632=2;
        int LA632_0 = input.LA(1);

        if ( ((LA632_0>=Intersection && LA632_0<=Implements)||(LA632_0>=Promisify && LA632_0<=Abstract)||LA632_0==External||(LA632_0>=Private && LA632_0<=Project)||LA632_0==Public||LA632_0==Static||LA632_0==Target||(LA632_0>=Async && LA632_0<=Await)||LA632_0==Union||(LA632_0>=Yield && LA632_0<=This)||LA632_0==From||LA632_0==Type||(LA632_0>=Get && LA632_0<=Let)||(LA632_0>=Out && LA632_0<=Set)||LA632_0==As||LA632_0==Of||LA632_0==RULE_IDENTIFIER) ) {
            alt632=1;
        }
        switch (alt632) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred6_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop633:
        do {
            int alt633=2;
            int LA633_0 = input.LA(1);

            if ( ((LA633_0>=Protected && LA633_0<=Abstract)||LA633_0==External||(LA633_0>=Private && LA633_0<=Project)||LA633_0==Public||LA633_0==Static||LA633_0==Const) ) {
                alt633=1;
            }


            switch (alt633) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_24);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop633;
            }
        } while (true);

        match(input,Enum,FOLLOW_184); if (state.failed) return ;
        int alt634=2;
        int LA634_0 = input.LA(1);

        if ( ((LA634_0>=Intersection && LA634_0<=Implements)||(LA634_0>=Promisify && LA634_0<=Abstract)||LA634_0==External||(LA634_0>=Private && LA634_0<=Project)||LA634_0==Public||LA634_0==Static||LA634_0==Target||(LA634_0>=Async && LA634_0<=Await)||LA634_0==Union||(LA634_0>=Yield && LA634_0<=This)||LA634_0==From||LA634_0==Type||(LA634_0>=Get && LA634_0<=Let)||(LA634_0>=Out && LA634_0<=Set)||LA634_0==As||LA634_0==Of||LA634_0==RULE_IDENTIFIER) ) {
            alt634=1;
        }
        switch (alt634) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred10_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,From,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred11_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Interface && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Project)||input.LA(1)==Public||input.LA(1)==Static||input.LA(1)==Async||(input.LA(1)>=Class && input.LA(1)<=Const)||input.LA(1)==Enum||input.LA(1)==Let||input.LA(1)==Var||input.LA(1)==CommercialAt ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred12_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_138); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred13_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop636:
        do {
            int alt636=2;
            int LA636_0 = input.LA(1);

            if ( ((LA636_0>=Protected && LA636_0<=Abstract)||LA636_0==External||(LA636_0>=Private && LA636_0<=Project)||LA636_0==Public||LA636_0==Static||LA636_0==Const) ) {
                alt636=1;
            }


            switch (alt636) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_20);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop636;
            }
        } while (true);

        match(input,Class,FOLLOW_183); if (state.failed) return ;
        int alt637=2;
        int LA637_0 = input.LA(1);

        if ( (LA637_0==Tilde) ) {
            alt637=1;
        }
        switch (alt637) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_184);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt638=2;
        int LA638_0 = input.LA(1);

        if ( ((LA638_0>=Intersection && LA638_0<=Implements)||(LA638_0>=Promisify && LA638_0<=Abstract)||LA638_0==External||(LA638_0>=Private && LA638_0<=Project)||LA638_0==Public||LA638_0==Static||LA638_0==Target||(LA638_0>=Async && LA638_0<=Await)||LA638_0==Union||(LA638_0>=Yield && LA638_0<=This)||LA638_0==From||LA638_0==Type||(LA638_0>=Get && LA638_0<=Let)||(LA638_0>=Out && LA638_0<=Set)||LA638_0==As||LA638_0==Of||LA638_0==RULE_IDENTIFIER) ) {
            alt638=1;
        }
        switch (alt638) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred14_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop639:
        do {
            int alt639=2;
            int LA639_0 = input.LA(1);

            if ( ((LA639_0>=Protected && LA639_0<=Abstract)||LA639_0==External||(LA639_0>=Private && LA639_0<=Project)||LA639_0==Public||LA639_0==Static||LA639_0==Const) ) {
                alt639=1;
            }


            switch (alt639) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_23);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop639;
            }
        } while (true);

        match(input,Interface,FOLLOW_183); if (state.failed) return ;
        int alt640=2;
        int LA640_0 = input.LA(1);

        if ( (LA640_0==Tilde) ) {
            alt640=1;
        }
        switch (alt640) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_184);
                ruleTypingStrategyDefSiteOperator();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt641=2;
        int LA641_0 = input.LA(1);

        if ( ((LA641_0>=Intersection && LA641_0<=Implements)||(LA641_0>=Promisify && LA641_0<=Abstract)||LA641_0==External||(LA641_0>=Private && LA641_0<=Project)||LA641_0==Public||LA641_0==Static||LA641_0==Target||(LA641_0>=Async && LA641_0<=Await)||LA641_0==Union||(LA641_0>=Yield && LA641_0<=This)||LA641_0==From||LA641_0==Type||(LA641_0>=Get && LA641_0<=Let)||(LA641_0>=Out && LA641_0<=Set)||LA641_0==As||LA641_0==Of||LA641_0==RULE_IDENTIFIER) ) {
            alt641=1;
        }
        switch (alt641) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred15_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop642:
        do {
            int alt642=2;
            int LA642_0 = input.LA(1);

            if ( ((LA642_0>=Protected && LA642_0<=Abstract)||LA642_0==External||(LA642_0>=Private && LA642_0<=Project)||LA642_0==Public||LA642_0==Static||LA642_0==Const) ) {
                alt642=1;
            }


            switch (alt642) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_24);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop642;
            }
        } while (true);

        match(input,Enum,FOLLOW_184); if (state.failed) return ;
        int alt643=2;
        int LA643_0 = input.LA(1);

        if ( ((LA643_0>=Intersection && LA643_0<=Implements)||(LA643_0>=Promisify && LA643_0<=Abstract)||LA643_0==External||(LA643_0>=Private && LA643_0<=Project)||LA643_0==Public||LA643_0==Static||LA643_0==Target||(LA643_0>=Async && LA643_0<=Await)||LA643_0==Union||(LA643_0>=Yield && LA643_0<=This)||LA643_0==From||LA643_0==Type||(LA643_0>=Get && LA643_0<=Let)||(LA643_0>=Out && LA643_0<=Set)||LA643_0==As||LA643_0==Of||LA643_0==RULE_IDENTIFIER) ) {
            alt643=1;
        }
        switch (alt643) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_2);
                ruleBindingIdentifier();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred19_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred22_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred23_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred24_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred25_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred26_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred27_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred28_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred39_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred40_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred41_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred42_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred47_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred48_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred49_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred50_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred55_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred56_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred57_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred58_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred63_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred64_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred65_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred66_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred67_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred68_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred71_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred72_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop687:
        do {
            int alt687=2;
            int LA687_0 = input.LA(1);

            if ( ((LA687_0>=Protected && LA687_0<=Abstract)||LA687_0==External||(LA687_0>=Private && LA687_0<=Project)||LA687_0==Public||LA687_0==Static||LA687_0==Const) ) {
                alt687=1;
            }


            switch (alt687) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_19);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop687;
            }
        } while (true);

        pushFollow(FOLLOW_57);
        ruleAsyncNoTrailingLineBreak(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred73_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleVariableStatementKeyword();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred74_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred75_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred76_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop688:
        do {
            int alt688=2;
            int LA688_0 = input.LA(1);

            if ( ((LA688_0>=Protected && LA688_0<=Abstract)||LA688_0==External||(LA688_0>=Private && LA688_0<=Project)||LA688_0==Public||LA688_0==Static||LA688_0==Const) ) {
                alt688=1;
            }


            switch (alt688) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_19);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop688;
            }
        } while (true);

        pushFollow(FOLLOW_57);
        ruleAsyncNoTrailingLineBreak(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,Function,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred77_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleVariableStatementKeyword();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred78_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred79_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_138); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred80_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_138); if (state.failed) return ;
        if ( input.LA(1)==Target||input.LA(1)==This||input.LA(1)==RULE_IDENTIFIER ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred83_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred84_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred85_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred86_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred87_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred88_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred97_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred98_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred99_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred100_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred101_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt689=2;
        int LA689_0 = input.LA(1);

        if ( (LA689_0==Colon) ) {
            alt689=1;
        }
        switch (alt689) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred102_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt690=2;
        int LA690_0 = input.LA(1);

        if ( (LA690_0==Colon) ) {
            alt690=1;
        }
        switch (alt690) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred103_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt691=2;
        int LA691_0 = input.LA(1);

        if ( (LA691_0==Colon) ) {
            alt691=1;
        }
        switch (alt691) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred104_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_54);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt692=2;
        int LA692_0 = input.LA(1);

        if ( (LA692_0==Colon) ) {
            alt692=1;
        }
        switch (alt692) {
            case 1 :
                {
                pushFollow(FOLLOW_2);
                ruleColonSepTypeRef(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    public final void synpred105_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred106_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred109_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred110_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred111_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred112_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        pushFollow(FOLLOW_2);
        ruleSemi();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    public final void synpred113_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_80);
        ruleLetIdentifierRef();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        match(input,In,FOLLOW_11); if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_75);
        norm1_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred114_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==Const||input.LA(1)==Let||input.LA(1)==Var ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred115_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_81);
        ruleBindingIdentifierAsVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt693=2;
        int LA693_0 = input.LA(1);

        if ( (LA693_0==In) ) {
            alt693=1;
        }
        else if ( (LA693_0==Of) ) {
            alt693=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 693, 0, input);

            throw nvae;
        }
        switch (alt693) {
            case 1 :
                {
                {
                {
                match(input,In,FOLLOW_131); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                match(input,Of,FOLLOW_131); if (state.failed) return ;

                }


                }


                }
                break;

        }
        int alt694=2;
        int LA694_0 = input.LA(1);

        if ( ((LA694_0>=Intersection && LA694_0<=Implements)||(LA694_0>=Promisify && LA694_0<=Abstract)||(LA694_0>=External && LA694_0<=Function)||(LA694_0>=Private && LA694_0<=Delete)||LA694_0==Public||LA694_0==Static||(LA694_0>=Target && LA694_0<=Await)||LA694_0==Class||(LA694_0>=False && LA694_0<=Super)||LA694_0==Union||(LA694_0>=Yield && LA694_0<=This)||(LA694_0>=From && LA694_0<=Void)||(LA694_0>=Get && LA694_0<=Set)||LA694_0==PlusSignPlusSign||LA694_0==HyphenMinusHyphenMinus||LA694_0==SolidusEqualsSign||LA694_0==As||LA694_0==Of||LA694_0==ExclamationMark||LA694_0==LeftParenthesis||(LA694_0>=Asterisk && LA694_0<=PlusSign)||LA694_0==HyphenMinus||LA694_0==Solidus||LA694_0==LessThanSign||(LA694_0>=CommercialAt && LA694_0<=LeftSquareBracket)||LA694_0==LeftCurlyBracket||LA694_0==Tilde||LA694_0==RULE_DOUBLE||(LA694_0>=RULE_HEX_INT && LA694_0<=RULE_LEGACY_OCTAL_INT)||LA694_0==RULE_SCIENTIFIC_INT||LA694_0==RULE_IDENTIFIER||LA694_0==RULE_STRING||(LA694_0>=RULE_TEMPLATE_HEAD && LA694_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA694_0==RULE_INT) ) {
            alt694=1;
        }
        switch (alt694) {
            case 1 :
                {
                if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
                    input.consume();
                    state.errorRecovery=false;state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        }


        }
    }
    public final void synpred116_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred117_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_80);
        ruleLetIdentifierRef();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        match(input,In,FOLLOW_11); if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_75);
        norm3_Expression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred118_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==Const||input.LA(1)==Let||input.LA(1)==Var ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred119_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_81);
        norm2_BindingIdentifierAsVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        int alt695=2;
        int LA695_0 = input.LA(1);

        if ( (LA695_0==In) ) {
            alt695=1;
        }
        else if ( (LA695_0==Of) ) {
            alt695=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 695, 0, input);

            throw nvae;
        }
        switch (alt695) {
            case 1 :
                {
                {
                {
                match(input,In,FOLLOW_131); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                match(input,Of,FOLLOW_131); if (state.failed) return ;

                }


                }


                }
                break;

        }
        int alt696=2;
        int LA696_0 = input.LA(1);

        if ( ((LA696_0>=Intersection && LA696_0<=Implements)||(LA696_0>=Promisify && LA696_0<=Abstract)||(LA696_0>=External && LA696_0<=Function)||(LA696_0>=Private && LA696_0<=Delete)||LA696_0==Public||LA696_0==Static||(LA696_0>=Target && LA696_0<=Await)||LA696_0==Class||(LA696_0>=False && LA696_0<=Super)||LA696_0==Union||(LA696_0>=Yield && LA696_0<=This)||(LA696_0>=From && LA696_0<=Void)||(LA696_0>=Get && LA696_0<=Set)||LA696_0==PlusSignPlusSign||LA696_0==HyphenMinusHyphenMinus||LA696_0==SolidusEqualsSign||LA696_0==As||LA696_0==Of||LA696_0==ExclamationMark||LA696_0==LeftParenthesis||(LA696_0>=Asterisk && LA696_0<=PlusSign)||LA696_0==HyphenMinus||LA696_0==Solidus||LA696_0==LessThanSign||(LA696_0>=CommercialAt && LA696_0<=LeftSquareBracket)||LA696_0==LeftCurlyBracket||LA696_0==Tilde||LA696_0==RULE_DOUBLE||(LA696_0>=RULE_HEX_INT && LA696_0<=RULE_LEGACY_OCTAL_INT)||LA696_0==RULE_SCIENTIFIC_INT||LA696_0==RULE_IDENTIFIER||LA696_0==RULE_STRING||(LA696_0>=RULE_TEMPLATE_HEAD && LA696_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA696_0==RULE_INT) ) {
            alt696=1;
        }
        switch (alt696) {
            case 1 :
                {
                if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
                    input.consume();
                    state.errorRecovery=false;state.failed=false;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    MismatchedSetException mse = new MismatchedSetException(null,input);
                    throw mse;
                }


                }
                break;

        }


        }


        }
    }
    public final void synpred120_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred127_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred128_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred130_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred131_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        norm1_BindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred135_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt697=2;
        alt697 = dfa697.predict(input);
        switch (alt697) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred136_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred137_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred138_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt698=2;
        int LA698_0 = input.LA(1);

        if ( (LA698_0==LessThanSign) ) {
            alt698=1;
        }
        switch (alt698) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt699=2;
        alt699 = dfa699.predict(input);
        switch (alt699) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt700=2;
        int LA700_0 = input.LA(1);

        if ( (LA700_0==Asterisk) ) {
            alt700=1;
        }
        else if ( ((LA700_0>=Intersection && LA700_0<=With)||(LA700_0>=For && LA700_0<=Var)||(LA700_0>=As && LA700_0<=Of)||LA700_0==LeftSquareBracket||LA700_0==RULE_DOUBLE||LA700_0==RULE_HEX_INT||LA700_0==RULE_OCTAL_INT||LA700_0==RULE_SCIENTIFIC_INT||LA700_0==RULE_IDENTIFIER||LA700_0==RULE_STRING||LA700_0==RULE_INT) ) {
            alt700=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 700, 0, input);

            throw nvae;
        }
        switch (alt700) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred139_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt701=2;
        alt701 = dfa701.predict(input);
        switch (alt701) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred140_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred141_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred142_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt702=2;
        int LA702_0 = input.LA(1);

        if ( (LA702_0==LessThanSign) ) {
            alt702=1;
        }
        switch (alt702) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt703=2;
        alt703 = dfa703.predict(input);
        switch (alt703) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt704=2;
        int LA704_0 = input.LA(1);

        if ( (LA704_0==Asterisk) ) {
            alt704=1;
        }
        else if ( ((LA704_0>=Intersection && LA704_0<=With)||(LA704_0>=For && LA704_0<=Var)||(LA704_0>=As && LA704_0<=Of)||LA704_0==LeftSquareBracket||LA704_0==RULE_DOUBLE||LA704_0==RULE_HEX_INT||LA704_0==RULE_OCTAL_INT||LA704_0==RULE_SCIENTIFIC_INT||LA704_0==RULE_IDENTIFIER||LA704_0==RULE_STRING||LA704_0==RULE_INT) ) {
            alt704=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 704, 0, input);

            throw nvae;
        }
        switch (alt704) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred143_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt705=2;
        alt705 = dfa705.predict(input);
        switch (alt705) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred144_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred146_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred149_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt706=2;
        int LA706_0 = input.LA(1);

        if ( (LA706_0==LessThanSign) ) {
            alt706=1;
        }
        switch (alt706) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt707=2;
        alt707 = dfa707.predict(input);
        switch (alt707) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt708=2;
        int LA708_0 = input.LA(1);

        if ( (LA708_0==Asterisk) ) {
            alt708=1;
        }
        else if ( ((LA708_0>=Intersection && LA708_0<=With)||(LA708_0>=For && LA708_0<=Var)||(LA708_0>=As && LA708_0<=Of)||LA708_0==LeftSquareBracket||LA708_0==RULE_DOUBLE||LA708_0==RULE_HEX_INT||LA708_0==RULE_OCTAL_INT||LA708_0==RULE_SCIENTIFIC_INT||LA708_0==RULE_IDENTIFIER||LA708_0==RULE_STRING||LA708_0==RULE_INT) ) {
            alt708=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 708, 0, input);

            throw nvae;
        }
        switch (alt708) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred152_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt709=2;
        alt709 = dfa709.predict(input);
        switch (alt709) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_92);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred153_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred155_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred158_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt710=2;
        int LA710_0 = input.LA(1);

        if ( (LA710_0==LessThanSign) ) {
            alt710=1;
        }
        switch (alt710) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt711=2;
        alt711 = dfa711.predict(input);
        switch (alt711) {
            case 1 :
                {
                {
                pushFollow(FOLLOW_103);
                ruleTypeRefWithModifiers();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }
        int alt712=2;
        int LA712_0 = input.LA(1);

        if ( (LA712_0==Asterisk) ) {
            alt712=1;
        }
        else if ( ((LA712_0>=Intersection && LA712_0<=With)||(LA712_0>=For && LA712_0<=Var)||(LA712_0>=As && LA712_0<=Of)||LA712_0==LeftSquareBracket||LA712_0==RULE_DOUBLE||LA712_0==RULE_HEX_INT||LA712_0==RULE_OCTAL_INT||LA712_0==RULE_SCIENTIFIC_INT||LA712_0==RULE_IDENTIFIER||LA712_0==RULE_STRING||LA712_0==RULE_INT) ) {
            alt712=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 712, 0, input);

            throw nvae;
        }
        switch (alt712) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred179_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred180_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred181_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_109); if (state.failed) return ;
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred182_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred183_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred184_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred185_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_109); if (state.failed) return ;
        match(input,FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred186_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,New,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred187_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred188_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred189_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred190_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        rulePostfixOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred191_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred192_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred193_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleMultiplicativeOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred194_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleMultiplicativeOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred195_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred196_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred197_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_11);
        ruleShiftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred198_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_11);
        ruleShiftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        norm1_AdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred199_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_186);
        ruleRelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred201_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_186);
        norm1_RelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred203_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_187);
        ruleRelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||input.LA(1)==This||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred205_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_187);
        norm1_RelationalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||input.LA(1)==This||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==PlusSign||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred207_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred208_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred209_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred210_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleEqualityOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred211_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred212_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred213_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred214_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred215_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred216_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred217_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred218_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseXOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred219_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred220_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred221_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred222_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleBitwiseOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred223_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred224_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred225_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred226_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalANDOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred227_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred228_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred229_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred230_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleLogicalOROperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred231_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred232_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred233_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred234_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred235_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred236_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_134); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred237_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred238_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred239_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred240_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt730=4;
        int LA730_0 = input.LA(1);

        if ( (LA730_0==LeftParenthesis) && (synpred237_InternalN4JSXParser())) {
            alt730=1;
        }
        else if ( (LA730_0==Async) ) {
            int LA730_2 = input.LA(2);

            if ( (LA730_2==RULE_NO_LINE_TERMINATOR) && (synpred238_InternalN4JSXParser())) {
                alt730=2;
            }
            else if ( (LA730_2==LeftParenthesis) && (synpred238_InternalN4JSXParser())) {
                alt730=2;
            }
            else if ( (LA730_2==EqualsSignGreaterThanSign) ) {
                alt730=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 730, 2, input);

                throw nvae;
            }
        }
        else if ( (LA730_0==Asterisk) && (synpred239_InternalN4JSXParser())) {
            alt730=3;
        }
        else if ( ((LA730_0>=Intersection && LA730_0<=Implements)||(LA730_0>=Promisify && LA730_0<=Abstract)||LA730_0==External||(LA730_0>=Private && LA730_0<=Project)||LA730_0==Public||LA730_0==Static||LA730_0==Target||LA730_0==Await||LA730_0==Union||(LA730_0>=Yield && LA730_0<=This)||LA730_0==From||LA730_0==Type||(LA730_0>=Get && LA730_0<=Let)||(LA730_0>=Out && LA730_0<=Set)||LA730_0==As||LA730_0==Of||LA730_0==RULE_IDENTIFIER) ) {
            alt730=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 730, 0, input);

            throw nvae;
        }
        switch (alt730) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }
                int alt722=2;
                int LA722_0 = input.LA(1);

                if ( ((LA722_0>=Intersection && LA722_0<=Implements)||(LA722_0>=Promisify && LA722_0<=Abstract)||LA722_0==External||(LA722_0>=Private && LA722_0<=Project)||LA722_0==Public||LA722_0==Static||LA722_0==Target||(LA722_0>=Async && LA722_0<=Await)||LA722_0==Union||(LA722_0>=Yield && LA722_0<=This)||LA722_0==From||LA722_0==This_1||(LA722_0>=Type && LA722_0<=Void)||LA722_0==FullStopFullStopFullStop||(LA722_0>=Get && LA722_0<=Let)||(LA722_0>=Out && LA722_0<=Set)||LA722_0==As||LA722_0==Of||(LA722_0>=QuestionMark && LA722_0<=LeftSquareBracket)||LA722_0==LeftCurlyBracket||LA722_0==Tilde||LA722_0==RULE_IDENTIFIER) ) {
                    alt722=1;
                }
                switch (alt722) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop721:
                        do {
                            int alt721=2;
                            int LA721_0 = input.LA(1);

                            if ( (LA721_0==Comma) ) {
                                alt721=1;
                            }


                            switch (alt721) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop721;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt723=2;
                int LA723_0 = input.LA(1);

                if ( (LA723_0==Colon) ) {
                    alt723=1;
                }
                switch (alt723) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt725=2;
                int LA725_0 = input.LA(1);

                if ( ((LA725_0>=Intersection && LA725_0<=Implements)||(LA725_0>=Promisify && LA725_0<=Abstract)||LA725_0==External||(LA725_0>=Private && LA725_0<=Project)||LA725_0==Public||LA725_0==Static||LA725_0==Target||(LA725_0>=Async && LA725_0<=Await)||LA725_0==Union||(LA725_0>=Yield && LA725_0<=This)||LA725_0==From||LA725_0==This_1||(LA725_0>=Type && LA725_0<=Void)||LA725_0==FullStopFullStopFullStop||(LA725_0>=Get && LA725_0<=Let)||(LA725_0>=Out && LA725_0<=Set)||LA725_0==As||LA725_0==Of||(LA725_0>=QuestionMark && LA725_0<=LeftSquareBracket)||LA725_0==LeftCurlyBracket||LA725_0==Tilde||LA725_0==RULE_IDENTIFIER) ) {
                    alt725=1;
                }
                switch (alt725) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop724:
                        do {
                            int alt724=2;
                            int LA724_0 = input.LA(1);

                            if ( (LA724_0==Comma) ) {
                                alt724=1;
                            }


                            switch (alt724) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop724;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt726=2;
                int LA726_0 = input.LA(1);

                if ( (LA726_0==Colon) ) {
                    alt726=1;
                }
                switch (alt726) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt728=2;
                int LA728_0 = input.LA(1);

                if ( ((LA728_0>=Intersection && LA728_0<=Implements)||(LA728_0>=Promisify && LA728_0<=Abstract)||LA728_0==External||(LA728_0>=Private && LA728_0<=Project)||LA728_0==Public||LA728_0==Static||LA728_0==Target||(LA728_0>=Async && LA728_0<=Await)||LA728_0==Union||(LA728_0>=Yield && LA728_0<=This)||LA728_0==From||LA728_0==This_1||(LA728_0>=Type && LA728_0<=Void)||LA728_0==FullStopFullStopFullStop||(LA728_0>=Get && LA728_0<=Let)||(LA728_0>=Out && LA728_0<=Set)||LA728_0==As||LA728_0==Of||(LA728_0>=QuestionMark && LA728_0<=LeftSquareBracket)||LA728_0==LeftCurlyBracket||LA728_0==Tilde||LA728_0==RULE_IDENTIFIER) ) {
                    alt728=1;
                }
                switch (alt728) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop727:
                        do {
                            int alt727=2;
                            int LA727_0 = input.LA(1);

                            if ( (LA727_0==Comma) ) {
                                alt727=1;
                            }


                            switch (alt727) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop727;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt729=2;
                int LA729_0 = input.LA(1);

                if ( (LA729_0==Colon) ) {
                    alt729=1;
                }
                switch (alt729) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                ruleBindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred241_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred242_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred243_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_134); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred244_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred245_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred246_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred247_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt740=4;
        int LA740_0 = input.LA(1);

        if ( (LA740_0==LeftParenthesis) && (synpred244_InternalN4JSXParser())) {
            alt740=1;
        }
        else if ( (LA740_0==Async) ) {
            int LA740_2 = input.LA(2);

            if ( (LA740_2==RULE_NO_LINE_TERMINATOR) && (synpred245_InternalN4JSXParser())) {
                alt740=2;
            }
            else if ( (LA740_2==LeftParenthesis) && (synpred245_InternalN4JSXParser())) {
                alt740=2;
            }
            else if ( (LA740_2==EqualsSignGreaterThanSign) ) {
                alt740=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 740, 2, input);

                throw nvae;
            }
        }
        else if ( (LA740_0==Asterisk) && (synpred246_InternalN4JSXParser())) {
            alt740=3;
        }
        else if ( ((LA740_0>=Intersection && LA740_0<=Implements)||(LA740_0>=Promisify && LA740_0<=Abstract)||LA740_0==External||(LA740_0>=Private && LA740_0<=Project)||LA740_0==Public||LA740_0==Static||LA740_0==Target||LA740_0==Await||LA740_0==Union||(LA740_0>=Yield && LA740_0<=This)||LA740_0==From||LA740_0==Type||(LA740_0>=Get && LA740_0<=Let)||(LA740_0>=Out && LA740_0<=Set)||LA740_0==As||LA740_0==Of||LA740_0==RULE_IDENTIFIER) ) {
            alt740=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 740, 0, input);

            throw nvae;
        }
        switch (alt740) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }
                int alt732=2;
                int LA732_0 = input.LA(1);

                if ( ((LA732_0>=Intersection && LA732_0<=Implements)||(LA732_0>=Promisify && LA732_0<=Abstract)||LA732_0==External||(LA732_0>=Private && LA732_0<=Project)||LA732_0==Public||LA732_0==Static||LA732_0==Target||(LA732_0>=Async && LA732_0<=Await)||LA732_0==Union||(LA732_0>=Yield && LA732_0<=This)||LA732_0==From||LA732_0==This_1||(LA732_0>=Type && LA732_0<=Void)||LA732_0==FullStopFullStopFullStop||(LA732_0>=Get && LA732_0<=Let)||(LA732_0>=Out && LA732_0<=Set)||LA732_0==As||LA732_0==Of||(LA732_0>=QuestionMark && LA732_0<=LeftSquareBracket)||LA732_0==LeftCurlyBracket||LA732_0==Tilde||LA732_0==RULE_IDENTIFIER) ) {
                    alt732=1;
                }
                switch (alt732) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop731:
                        do {
                            int alt731=2;
                            int LA731_0 = input.LA(1);

                            if ( (LA731_0==Comma) ) {
                                alt731=1;
                            }


                            switch (alt731) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop731;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt733=2;
                int LA733_0 = input.LA(1);

                if ( (LA733_0==Colon) ) {
                    alt733=1;
                }
                switch (alt733) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt735=2;
                int LA735_0 = input.LA(1);

                if ( ((LA735_0>=Intersection && LA735_0<=Implements)||(LA735_0>=Promisify && LA735_0<=Abstract)||LA735_0==External||(LA735_0>=Private && LA735_0<=Project)||LA735_0==Public||LA735_0==Static||LA735_0==Target||(LA735_0>=Async && LA735_0<=Await)||LA735_0==Union||(LA735_0>=Yield && LA735_0<=This)||LA735_0==From||LA735_0==This_1||(LA735_0>=Type && LA735_0<=Void)||LA735_0==FullStopFullStopFullStop||(LA735_0>=Get && LA735_0<=Let)||(LA735_0>=Out && LA735_0<=Set)||LA735_0==As||LA735_0==Of||(LA735_0>=QuestionMark && LA735_0<=LeftSquareBracket)||LA735_0==LeftCurlyBracket||LA735_0==Tilde||LA735_0==RULE_IDENTIFIER) ) {
                    alt735=1;
                }
                switch (alt735) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop734:
                        do {
                            int alt734=2;
                            int LA734_0 = input.LA(1);

                            if ( (LA734_0==Comma) ) {
                                alt734=1;
                            }


                            switch (alt734) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop734;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt736=2;
                int LA736_0 = input.LA(1);

                if ( (LA736_0==Colon) ) {
                    alt736=1;
                }
                switch (alt736) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt738=2;
                int LA738_0 = input.LA(1);

                if ( ((LA738_0>=Intersection && LA738_0<=Implements)||(LA738_0>=Promisify && LA738_0<=Abstract)||LA738_0==External||(LA738_0>=Private && LA738_0<=Project)||LA738_0==Public||LA738_0==Static||LA738_0==Target||(LA738_0>=Async && LA738_0<=Await)||LA738_0==Union||(LA738_0>=Yield && LA738_0<=This)||LA738_0==From||LA738_0==This_1||(LA738_0>=Type && LA738_0<=Void)||LA738_0==FullStopFullStopFullStop||(LA738_0>=Get && LA738_0<=Let)||(LA738_0>=Out && LA738_0<=Set)||LA738_0==As||LA738_0==Of||(LA738_0>=QuestionMark && LA738_0<=LeftSquareBracket)||LA738_0==LeftCurlyBracket||LA738_0==Tilde||LA738_0==RULE_IDENTIFIER) ) {
                    alt738=1;
                }
                switch (alt738) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        ruleFormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop737:
                        do {
                            int alt737=2;
                            int LA737_0 = input.LA(1);

                            if ( (LA737_0==Comma) ) {
                                alt737=1;
                            }


                            switch (alt737) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    ruleFormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop737;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt739=2;
                int LA739_0 = input.LA(1);

                if ( (LA739_0==Colon) ) {
                    alt739=1;
                }
                switch (alt739) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                ruleBindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred248_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred249_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred250_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_134); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred251_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred252_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred253_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred254_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt750=4;
        int LA750_0 = input.LA(1);

        if ( (LA750_0==LeftParenthesis) && (synpred251_InternalN4JSXParser())) {
            alt750=1;
        }
        else if ( (LA750_0==Async) ) {
            int LA750_2 = input.LA(2);

            if ( (LA750_2==RULE_NO_LINE_TERMINATOR) && (synpred252_InternalN4JSXParser())) {
                alt750=2;
            }
            else if ( (LA750_2==LeftParenthesis) && (synpred252_InternalN4JSXParser())) {
                alt750=2;
            }
            else if ( (LA750_2==EqualsSignGreaterThanSign) ) {
                alt750=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 750, 2, input);

                throw nvae;
            }
        }
        else if ( (LA750_0==Asterisk) && (synpred253_InternalN4JSXParser())) {
            alt750=3;
        }
        else if ( ((LA750_0>=Intersection && LA750_0<=Implements)||(LA750_0>=Promisify && LA750_0<=Abstract)||LA750_0==External||(LA750_0>=Private && LA750_0<=Project)||LA750_0==Public||LA750_0==Static||LA750_0==Target||LA750_0==Await||LA750_0==Union||LA750_0==This||LA750_0==From||LA750_0==Type||(LA750_0>=Get && LA750_0<=Let)||(LA750_0>=Out && LA750_0<=Set)||LA750_0==As||LA750_0==Of||LA750_0==RULE_IDENTIFIER) ) {
            alt750=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 750, 0, input);

            throw nvae;
        }
        switch (alt750) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }
                int alt742=2;
                int LA742_0 = input.LA(1);

                if ( ((LA742_0>=Intersection && LA742_0<=Implements)||(LA742_0>=Promisify && LA742_0<=Abstract)||LA742_0==External||(LA742_0>=Private && LA742_0<=Project)||LA742_0==Public||LA742_0==Static||LA742_0==Target||(LA742_0>=Async && LA742_0<=Await)||LA742_0==Union||LA742_0==This||LA742_0==From||LA742_0==This_1||(LA742_0>=Type && LA742_0<=Void)||LA742_0==FullStopFullStopFullStop||(LA742_0>=Get && LA742_0<=Let)||(LA742_0>=Out && LA742_0<=Set)||LA742_0==As||LA742_0==Of||(LA742_0>=QuestionMark && LA742_0<=LeftSquareBracket)||LA742_0==LeftCurlyBracket||LA742_0==Tilde||LA742_0==RULE_IDENTIFIER) ) {
                    alt742=1;
                }
                switch (alt742) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop741:
                        do {
                            int alt741=2;
                            int LA741_0 = input.LA(1);

                            if ( (LA741_0==Comma) ) {
                                alt741=1;
                            }


                            switch (alt741) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop741;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt743=2;
                int LA743_0 = input.LA(1);

                if ( (LA743_0==Colon) ) {
                    alt743=1;
                }
                switch (alt743) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt745=2;
                int LA745_0 = input.LA(1);

                if ( ((LA745_0>=Intersection && LA745_0<=Implements)||(LA745_0>=Promisify && LA745_0<=Abstract)||LA745_0==External||(LA745_0>=Private && LA745_0<=Project)||LA745_0==Public||LA745_0==Static||LA745_0==Target||(LA745_0>=Async && LA745_0<=Await)||LA745_0==Union||LA745_0==This||LA745_0==From||LA745_0==This_1||(LA745_0>=Type && LA745_0<=Void)||LA745_0==FullStopFullStopFullStop||(LA745_0>=Get && LA745_0<=Let)||(LA745_0>=Out && LA745_0<=Set)||LA745_0==As||LA745_0==Of||(LA745_0>=QuestionMark && LA745_0<=LeftSquareBracket)||LA745_0==LeftCurlyBracket||LA745_0==Tilde||LA745_0==RULE_IDENTIFIER) ) {
                    alt745=1;
                }
                switch (alt745) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop744:
                        do {
                            int alt744=2;
                            int LA744_0 = input.LA(1);

                            if ( (LA744_0==Comma) ) {
                                alt744=1;
                            }


                            switch (alt744) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop744;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt746=2;
                int LA746_0 = input.LA(1);

                if ( (LA746_0==Colon) ) {
                    alt746=1;
                }
                switch (alt746) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt748=2;
                int LA748_0 = input.LA(1);

                if ( ((LA748_0>=Intersection && LA748_0<=Implements)||(LA748_0>=Promisify && LA748_0<=Abstract)||LA748_0==External||(LA748_0>=Private && LA748_0<=Project)||LA748_0==Public||LA748_0==Static||LA748_0==Target||(LA748_0>=Async && LA748_0<=Await)||LA748_0==Union||LA748_0==This||LA748_0==From||LA748_0==This_1||(LA748_0>=Type && LA748_0<=Void)||LA748_0==FullStopFullStopFullStop||(LA748_0>=Get && LA748_0<=Let)||(LA748_0>=Out && LA748_0<=Set)||LA748_0==As||LA748_0==Of||(LA748_0>=QuestionMark && LA748_0<=LeftSquareBracket)||LA748_0==LeftCurlyBracket||LA748_0==Tilde||LA748_0==RULE_IDENTIFIER) ) {
                    alt748=1;
                }
                switch (alt748) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop747:
                        do {
                            int alt747=2;
                            int LA747_0 = input.LA(1);

                            if ( (LA747_0==Comma) ) {
                                alt747=1;
                            }


                            switch (alt747) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop747;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt749=2;
                int LA749_0 = input.LA(1);

                if ( (LA749_0==Colon) ) {
                    alt749=1;
                }
                switch (alt749) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                norm1_BindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred255_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred256_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Await,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred257_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,CommercialAt,FOLLOW_134); if (state.failed) return ;
        match(input,Promisify,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred258_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred259_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Async,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred260_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred261_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        int alt760=4;
        int LA760_0 = input.LA(1);

        if ( (LA760_0==LeftParenthesis) && (synpred258_InternalN4JSXParser())) {
            alt760=1;
        }
        else if ( (LA760_0==Async) ) {
            int LA760_2 = input.LA(2);

            if ( (LA760_2==RULE_NO_LINE_TERMINATOR) && (synpred259_InternalN4JSXParser())) {
                alt760=2;
            }
            else if ( (LA760_2==LeftParenthesis) && (synpred259_InternalN4JSXParser())) {
                alt760=2;
            }
            else if ( (LA760_2==EqualsSignGreaterThanSign) ) {
                alt760=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 760, 2, input);

                throw nvae;
            }
        }
        else if ( (LA760_0==Asterisk) && (synpred260_InternalN4JSXParser())) {
            alt760=3;
        }
        else if ( ((LA760_0>=Intersection && LA760_0<=Implements)||(LA760_0>=Promisify && LA760_0<=Abstract)||LA760_0==External||(LA760_0>=Private && LA760_0<=Project)||LA760_0==Public||LA760_0==Static||LA760_0==Target||LA760_0==Await||LA760_0==Union||LA760_0==This||LA760_0==From||LA760_0==Type||(LA760_0>=Get && LA760_0<=Let)||(LA760_0>=Out && LA760_0<=Set)||LA760_0==As||LA760_0==Of||LA760_0==RULE_IDENTIFIER) ) {
            alt760=4;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 760, 0, input);

            throw nvae;
        }
        switch (alt760) {
            case 1 :
                {
                {
                {
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }
                int alt752=2;
                int LA752_0 = input.LA(1);

                if ( ((LA752_0>=Intersection && LA752_0<=Implements)||(LA752_0>=Promisify && LA752_0<=Abstract)||LA752_0==External||(LA752_0>=Private && LA752_0<=Project)||LA752_0==Public||LA752_0==Static||LA752_0==Target||(LA752_0>=Async && LA752_0<=Await)||LA752_0==Union||LA752_0==This||LA752_0==From||LA752_0==This_1||(LA752_0>=Type && LA752_0<=Void)||LA752_0==FullStopFullStopFullStop||(LA752_0>=Get && LA752_0<=Let)||(LA752_0>=Out && LA752_0<=Set)||LA752_0==As||LA752_0==Of||(LA752_0>=QuestionMark && LA752_0<=LeftSquareBracket)||LA752_0==LeftCurlyBracket||LA752_0==Tilde||LA752_0==RULE_IDENTIFIER) ) {
                    alt752=1;
                }
                switch (alt752) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop751:
                        do {
                            int alt751=2;
                            int LA751_0 = input.LA(1);

                            if ( (LA751_0==Comma) ) {
                                alt751=1;
                            }


                            switch (alt751) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop751;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt753=2;
                int LA753_0 = input.LA(1);

                if ( (LA753_0==Colon) ) {
                    alt753=1;
                }
                switch (alt753) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                {
                {
                {
                {
                {
                {
                match(input,Async,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt755=2;
                int LA755_0 = input.LA(1);

                if ( ((LA755_0>=Intersection && LA755_0<=Implements)||(LA755_0>=Promisify && LA755_0<=Abstract)||LA755_0==External||(LA755_0>=Private && LA755_0<=Project)||LA755_0==Public||LA755_0==Static||LA755_0==Target||(LA755_0>=Async && LA755_0<=Await)||LA755_0==Union||LA755_0==This||LA755_0==From||LA755_0==This_1||(LA755_0>=Type && LA755_0<=Void)||LA755_0==FullStopFullStopFullStop||(LA755_0>=Get && LA755_0<=Let)||(LA755_0>=Out && LA755_0<=Set)||LA755_0==As||LA755_0==Of||(LA755_0>=QuestionMark && LA755_0<=LeftSquareBracket)||LA755_0==LeftCurlyBracket||LA755_0==Tilde||LA755_0==RULE_IDENTIFIER) ) {
                    alt755=1;
                }
                switch (alt755) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop754:
                        do {
                            int alt754=2;
                            int LA754_0 = input.LA(1);

                            if ( (LA754_0==Comma) ) {
                                alt754=1;
                            }


                            switch (alt754) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop754;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt756=2;
                int LA756_0 = input.LA(1);

                if ( (LA756_0==Colon) ) {
                    alt756=1;
                }
                switch (alt756) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_63); if (state.failed) return ;

                }


                }

                pushFollow(FOLLOW_64);
                ruleNoLineTerminator(null);

                state._fsp--;
                if (state.failed) return ;
                match(input,LeftParenthesis,FOLLOW_58); if (state.failed) return ;

                }


                }
                int alt758=2;
                int LA758_0 = input.LA(1);

                if ( ((LA758_0>=Intersection && LA758_0<=Implements)||(LA758_0>=Promisify && LA758_0<=Abstract)||LA758_0==External||(LA758_0>=Private && LA758_0<=Project)||LA758_0==Public||LA758_0==Static||LA758_0==Target||(LA758_0>=Async && LA758_0<=Await)||LA758_0==Union||LA758_0==This||LA758_0==From||LA758_0==This_1||(LA758_0>=Type && LA758_0<=Void)||LA758_0==FullStopFullStopFullStop||(LA758_0>=Get && LA758_0<=Let)||(LA758_0>=Out && LA758_0<=Set)||LA758_0==As||LA758_0==Of||(LA758_0>=QuestionMark && LA758_0<=LeftSquareBracket)||LA758_0==LeftCurlyBracket||LA758_0==Tilde||LA758_0==RULE_IDENTIFIER) ) {
                    alt758=1;
                }
                switch (alt758) {
                    case 1 :
                        {
                        {
                        {
                        pushFollow(FOLLOW_59);
                        norm1_FormalParameter();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        loop757:
                        do {
                            int alt757=2;
                            int LA757_0 = input.LA(1);

                            if ( (LA757_0==Comma) ) {
                                alt757=1;
                            }


                            switch (alt757) {
                        	case 1 :
                        	    {
                        	    match(input,Comma,FOLLOW_60); if (state.failed) return ;
                        	    {
                        	    {
                        	    pushFollow(FOLLOW_59);
                        	    norm1_FormalParameter();

                        	    state._fsp--;
                        	    if (state.failed) return ;

                        	    }


                        	    }


                        	    }
                        	    break;

                        	default :
                        	    break loop757;
                            }
                        } while (true);


                        }
                        break;

                }

                match(input,RightParenthesis,FOLLOW_61); if (state.failed) return ;
                int alt759=2;
                int LA759_0 = input.LA(1);

                if ( (LA759_0==Colon) ) {
                    alt759=1;
                }
                switch (alt759) {
                    case 1 :
                        {
                        match(input,Colon,FOLLOW_55); if (state.failed) return ;
                        {
                        {
                        pushFollow(FOLLOW_62);
                        ruleTypeRef();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 4 :
                {
                {
                {
                pushFollow(FOLLOW_62);
                norm1_BindingIdentifierAsFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred262_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleAssignmentOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred263_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred264_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred265_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred266_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        if ( (input.LA(1)>=Intersection && input.LA(1)<=Implements)||(input.LA(1)>=Promisify && input.LA(1)<=Abstract)||(input.LA(1)>=External && input.LA(1)<=Function)||(input.LA(1)>=Private && input.LA(1)<=Delete)||input.LA(1)==Public||input.LA(1)==Static||(input.LA(1)>=Target && input.LA(1)<=Await)||input.LA(1)==Class||(input.LA(1)>=False && input.LA(1)<=Super)||input.LA(1)==Union||(input.LA(1)>=Yield && input.LA(1)<=This)||(input.LA(1)>=From && input.LA(1)<=Void)||(input.LA(1)>=Get && input.LA(1)<=Set)||input.LA(1)==PlusSignPlusSign||input.LA(1)==HyphenMinusHyphenMinus||input.LA(1)==SolidusEqualsSign||input.LA(1)==As||input.LA(1)==Of||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||(input.LA(1)>=Asterisk && input.LA(1)<=PlusSign)||input.LA(1)==HyphenMinus||input.LA(1)==Solidus||input.LA(1)==LessThanSign||(input.LA(1)>=CommercialAt && input.LA(1)<=LeftSquareBracket)||input.LA(1)==LeftCurlyBracket||input.LA(1)==Tilde||input.LA(1)==RULE_DOUBLE||(input.LA(1)>=RULE_HEX_INT && input.LA(1)<=RULE_LEGACY_OCTAL_INT)||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||(input.LA(1)>=RULE_TEMPLATE_HEAD && input.LA(1)<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred275_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred279_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleParameterizedTypeRefNominal();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred280_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleParameterizedTypeRefNominal();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred283_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop769:
        do {
            int alt769=2;
            int LA769_0 = input.LA(1);

            if ( ((LA769_0>=Protected && LA769_0<=Abstract)||LA769_0==External||(LA769_0>=Private && LA769_0<=Project)||LA769_0==Public||LA769_0==Static||LA769_0==Const) ) {
                alt769=1;
            }


            switch (alt769) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop769;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred284_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop770:
        do {
            int alt770=2;
            int LA770_0 = input.LA(1);

            if ( ((LA770_0>=Protected && LA770_0<=Abstract)||LA770_0==External||(LA770_0>=Private && LA770_0<=Project)||LA770_0==Public||LA770_0==Static||LA770_0==Const) ) {
                alt770=1;
            }


            switch (alt770) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_153);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop770;
            }
        } while (true);

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred285_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop771:
        do {
            int alt771=2;
            alt771 = dfa771.predict(input);
            switch (alt771) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_150);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop771;
            }
        } while (true);
        int alt772=2;
        int LA772_0 = input.LA(1);

        if ( (LA772_0==LessThanSign) ) {
            alt772=1;
        }
        switch (alt772) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt773=2;
        alt773 = dfa773.predict(input);
        switch (alt773) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt774=2;
        int LA774_0 = input.LA(1);

        if ( (LA774_0==Asterisk) ) {
            alt774=1;
        }
        else if ( ((LA774_0>=Intersection && LA774_0<=With)||(LA774_0>=For && LA774_0<=Var)||(LA774_0>=As && LA774_0<=Of)||LA774_0==LeftSquareBracket||LA774_0==RULE_DOUBLE||LA774_0==RULE_HEX_INT||LA774_0==RULE_OCTAL_INT||LA774_0==RULE_SCIENTIFIC_INT||LA774_0==RULE_IDENTIFIER||LA774_0==RULE_STRING||LA774_0==RULE_INT) ) {
            alt774=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 774, 0, input);

            throw nvae;
        }
        switch (alt774) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred286_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop775:
        do {
            int alt775=2;
            int LA775_0 = input.LA(1);

            if ( ((LA775_0>=Protected && LA775_0<=Abstract)||LA775_0==External||(LA775_0>=Private && LA775_0<=Project)||LA775_0==Public||LA775_0==Static||LA775_0==Const) ) {
                alt775=1;
            }


            switch (alt775) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop775;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred287_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop776:
        do {
            int alt776=2;
            int LA776_0 = input.LA(1);

            if ( ((LA776_0>=Protected && LA776_0<=Abstract)||LA776_0==External||(LA776_0>=Private && LA776_0<=Project)||LA776_0==Public||LA776_0==Static||LA776_0==Const) ) {
                alt776=1;
            }


            switch (alt776) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_153);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop776;
            }
        } while (true);

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred288_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop777:
        do {
            int alt777=2;
            alt777 = dfa777.predict(input);
            switch (alt777) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_150);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop777;
            }
        } while (true);
        int alt778=2;
        int LA778_0 = input.LA(1);

        if ( (LA778_0==LessThanSign) ) {
            alt778=1;
        }
        switch (alt778) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt779=2;
        alt779 = dfa779.predict(input);
        switch (alt779) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt780=2;
        int LA780_0 = input.LA(1);

        if ( (LA780_0==Asterisk) ) {
            alt780=1;
        }
        else if ( ((LA780_0>=Intersection && LA780_0<=With)||(LA780_0>=For && LA780_0<=Var)||(LA780_0>=As && LA780_0<=Of)||LA780_0==LeftSquareBracket||LA780_0==RULE_DOUBLE||LA780_0==RULE_HEX_INT||LA780_0==RULE_OCTAL_INT||LA780_0==RULE_SCIENTIFIC_INT||LA780_0==RULE_IDENTIFIER||LA780_0==RULE_STRING||LA780_0==RULE_INT) ) {
            alt780=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 780, 0, input);

            throw nvae;
        }
        switch (alt780) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred289_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop781:
        do {
            int alt781=2;
            int LA781_0 = input.LA(1);

            if ( ((LA781_0>=Protected && LA781_0<=Abstract)||LA781_0==External||(LA781_0>=Private && LA781_0<=Project)||LA781_0==Public||LA781_0==Static||LA781_0==Const) ) {
                alt781=1;
            }


            switch (alt781) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop781;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        ruleGetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred290_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred291_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop782:
        do {
            int alt782=2;
            int LA782_0 = input.LA(1);

            if ( ((LA782_0>=Protected && LA782_0<=Abstract)||LA782_0==External||(LA782_0>=Private && LA782_0<=Project)||LA782_0==Public||LA782_0==Static||LA782_0==Const) ) {
                alt782=1;
            }


            switch (alt782) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_153);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop782;
            }
        } while (true);

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred293_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred294_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop783:
        do {
            int alt783=2;
            alt783 = dfa783.predict(input);
            switch (alt783) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_150);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop783;
            }
        } while (true);
        int alt784=2;
        int LA784_0 = input.LA(1);

        if ( (LA784_0==LessThanSign) ) {
            alt784=1;
        }
        switch (alt784) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt785=2;
        alt785 = dfa785.predict(input);
        switch (alt785) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt786=2;
        int LA786_0 = input.LA(1);

        if ( (LA786_0==Asterisk) ) {
            alt786=1;
        }
        else if ( ((LA786_0>=Intersection && LA786_0<=With)||(LA786_0>=For && LA786_0<=Var)||(LA786_0>=As && LA786_0<=Of)||LA786_0==LeftSquareBracket||LA786_0==RULE_DOUBLE||LA786_0==RULE_HEX_INT||LA786_0==RULE_OCTAL_INT||LA786_0==RULE_SCIENTIFIC_INT||LA786_0==RULE_IDENTIFIER||LA786_0==RULE_STRING||LA786_0==RULE_INT) ) {
            alt786=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 786, 0, input);

            throw nvae;
        }
        switch (alt786) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                ruleLiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred297_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop787:
        do {
            int alt787=2;
            int LA787_0 = input.LA(1);

            if ( ((LA787_0>=Protected && LA787_0<=Abstract)||LA787_0==External||(LA787_0>=Private && LA787_0<=Project)||LA787_0==Public||LA787_0==Static||LA787_0==Const) ) {
                alt787=1;
            }


            switch (alt787) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_151);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop787;
            }
        } while (true);

        pushFollow(FOLLOW_2);
        norm1_GetterHeader(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred298_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred299_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop788:
        do {
            int alt788=2;
            int LA788_0 = input.LA(1);

            if ( ((LA788_0>=Protected && LA788_0<=Abstract)||LA788_0==External||(LA788_0>=Private && LA788_0<=Project)||LA788_0==Public||LA788_0==Static||LA788_0==Const) ) {
                alt788=1;
            }


            switch (alt788) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_153);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop788;
            }
        } while (true);

        match(input,Set,FOLLOW_185); if (state.failed) return ;
        if ( (input.LA(1)>=Intersection && input.LA(1)<=With)||(input.LA(1)>=For && input.LA(1)<=Var)||(input.LA(1)>=As && input.LA(1)<=Of)||input.LA(1)==LeftSquareBracket||input.LA(1)==RULE_DOUBLE||input.LA(1)==RULE_HEX_INT||input.LA(1)==RULE_OCTAL_INT||input.LA(1)==RULE_SCIENTIFIC_INT||input.LA(1)==RULE_IDENTIFIER||input.LA(1)==RULE_STRING||input.LA(1)==RULE_INT ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }
    }
    public final void synpred301_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred302_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        loop789:
        do {
            int alt789=2;
            alt789 = dfa789.predict(input);
            switch (alt789) {
        	case 1 :
        	    {
        	    {
        	    pushFollow(FOLLOW_150);
        	    ruleN4Modifier();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop789;
            }
        } while (true);
        int alt790=2;
        int LA790_0 = input.LA(1);

        if ( (LA790_0==LessThanSign) ) {
            alt790=1;
        }
        switch (alt790) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleTypeVariables(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt791=2;
        alt791 = dfa791.predict(input);
        switch (alt791) {
            case 1 :
                {
                pushFollow(FOLLOW_103);
                ruleBogusTypeRefFragment(null);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }
        int alt792=2;
        int LA792_0 = input.LA(1);

        if ( (LA792_0==Asterisk) ) {
            alt792=1;
        }
        else if ( ((LA792_0>=Intersection && LA792_0<=With)||(LA792_0>=For && LA792_0<=Var)||(LA792_0>=As && LA792_0<=Of)||LA792_0==LeftSquareBracket||LA792_0==RULE_DOUBLE||LA792_0==RULE_HEX_INT||LA792_0==RULE_OCTAL_INT||LA792_0==RULE_SCIENTIFIC_INT||LA792_0==RULE_IDENTIFIER||LA792_0==RULE_STRING||LA792_0==RULE_INT) ) {
            alt792=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 792, 0, input);

            throw nvae;
        }
        switch (alt792) {
            case 1 :
                {
                {
                {
                {
                match(input,Asterisk,FOLLOW_102); if (state.failed) return ;

                }


                }
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                {
                {
                pushFollow(FOLLOW_102);
                ruleAsyncNoTrailingLineBreak(null);

                state._fsp--;
                if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_64);
                norm1_LiteralOrComputedPropertyName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }


        }
    }
    public final void synpred311_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred312_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred313_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred314_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred316_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred318_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred323_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred326_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred327_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        ruleLiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred328_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_92);
        norm1_LiteralOrComputedPropertyName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred329_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred330_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred331_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred332_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        pushFollow(FOLLOW_2);
        norm1_BindingPattern();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    public final void synpred333_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,LeftParenthesis,FOLLOW_163); if (state.failed) return ;
        pushFollow(FOLLOW_75);
        ruleTAnonymousFormalParameterList(null);

        state._fsp--;
        if (state.failed) return ;
        match(input,RightParenthesis,FOLLOW_62); if (state.failed) return ;
        match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred334_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleUndefModifierToken();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred335_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred336_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred337_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        pushFollow(FOLLOW_2);
        ruleBindingIdentifier();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred338_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred339_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred340_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Get,FOLLOW_38); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_2);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred341_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,Set,FOLLOW_38); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_2);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred342_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt806=2;
        int LA806_0 = input.LA(1);

        if ( (LA806_0==LessThanSign) ) {
            alt806=1;
        }
        switch (alt806) {
            case 1 :
                {
                match(input,LessThanSign,FOLLOW_28); if (state.failed) return ;
                {
                {
                pushFollow(FOLLOW_29);
                ruleTypeVariable();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop805:
                do {
                    int alt805=2;
                    int LA805_0 = input.LA(1);

                    if ( (LA805_0==Comma) ) {
                        alt805=1;
                    }


                    switch (alt805) {
                	case 1 :
                	    {
                	    match(input,Comma,FOLLOW_28); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_29);
                	    ruleTypeVariable();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop805;
                    }
                } while (true);

                match(input,GreaterThanSign,FOLLOW_38); if (state.failed) return ;

                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_64);
        ruleIdentifierName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred346_InternalN4JSXParser_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,QuestionMark,FOLLOW_2); if (state.failed) return ;

        }


        }
    }

    public final boolean synpred285_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred329_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred329_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred297_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred297_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred339_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred339_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred302_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred302_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred335_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred335_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred337_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred337_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred314_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred316_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred316_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred298_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred298_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred193_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred193_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred341_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred341_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred328_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred328_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred338_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred338_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred111_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred111_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred257_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred257_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred201_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred201_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred254_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred254_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalN4JSXParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalN4JSXParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA29 dfa29 = new DFA29(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA158 dfa158 = new DFA158(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA218 dfa218 = new DFA218(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA209 dfa209 = new DFA209(this);
    protected DFA202 dfa202 = new DFA202(this);
    protected DFA236 dfa236 = new DFA236(this);
    protected DFA235 dfa235 = new DFA235(this);
    protected DFA227 dfa227 = new DFA227(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA258 dfa258 = new DFA258(this);
    protected DFA257 dfa257 = new DFA257(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA263 dfa263 = new DFA263(this);
    protected DFA269 dfa269 = new DFA269(this);
    protected DFA281 dfa281 = new DFA281(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA290 dfa290 = new DFA290(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA288 dfa288 = new DFA288(this);
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA291 dfa291 = new DFA291(this);
    protected DFA293 dfa293 = new DFA293(this);
    protected DFA296 dfa296 = new DFA296(this);
    protected DFA300 dfa300 = new DFA300(this);
    protected DFA304 dfa304 = new DFA304(this);
    protected DFA307 dfa307 = new DFA307(this);
    protected DFA308 dfa308 = new DFA308(this);
    protected DFA309 dfa309 = new DFA309(this);
    protected DFA311 dfa311 = new DFA311(this);
    protected DFA329 dfa329 = new DFA329(this);
    protected DFA335 dfa335 = new DFA335(this);
    protected DFA348 dfa348 = new DFA348(this);
    protected DFA349 dfa349 = new DFA349(this);
    protected DFA352 dfa352 = new DFA352(this);
    protected DFA353 dfa353 = new DFA353(this);
    protected DFA354 dfa354 = new DFA354(this);
    protected DFA355 dfa355 = new DFA355(this);
    protected DFA387 dfa387 = new DFA387(this);
    protected DFA386 dfa386 = new DFA386(this);
    protected DFA389 dfa389 = new DFA389(this);
    protected DFA388 dfa388 = new DFA388(this);
    protected DFA391 dfa391 = new DFA391(this);
    protected DFA390 dfa390 = new DFA390(this);
    protected DFA393 dfa393 = new DFA393(this);
    protected DFA392 dfa392 = new DFA392(this);
    protected DFA394 dfa394 = new DFA394(this);
    protected DFA395 dfa395 = new DFA395(this);
    protected DFA396 dfa396 = new DFA396(this);
    protected DFA397 dfa397 = new DFA397(this);
    protected DFA429 dfa429 = new DFA429(this);
    protected DFA471 dfa471 = new DFA471(this);
    protected DFA472 dfa472 = new DFA472(this);
    protected DFA484 dfa484 = new DFA484(this);
    protected DFA474 dfa474 = new DFA474(this);
    protected DFA477 dfa477 = new DFA477(this);
    protected DFA479 dfa479 = new DFA479(this);
    protected DFA481 dfa481 = new DFA481(this);
    protected DFA496 dfa496 = new DFA496(this);
    protected DFA486 dfa486 = new DFA486(this);
    protected DFA489 dfa489 = new DFA489(this);
    protected DFA491 dfa491 = new DFA491(this);
    protected DFA493 dfa493 = new DFA493(this);
    protected DFA497 dfa497 = new DFA497(this);
    protected DFA498 dfa498 = new DFA498(this);
    protected DFA501 dfa501 = new DFA501(this);
    protected DFA502 dfa502 = new DFA502(this);
    protected DFA505 dfa505 = new DFA505(this);
    protected DFA507 dfa507 = new DFA507(this);
    protected DFA510 dfa510 = new DFA510(this);
    protected DFA512 dfa512 = new DFA512(this);
    protected DFA520 dfa520 = new DFA520(this);
    protected DFA522 dfa522 = new DFA522(this);
    protected DFA524 dfa524 = new DFA524(this);
    protected DFA527 dfa527 = new DFA527(this);
    protected DFA534 dfa534 = new DFA534(this);
    protected DFA537 dfa537 = new DFA537(this);
    protected DFA547 dfa547 = new DFA547(this);
    protected DFA553 dfa553 = new DFA553(this);
    protected DFA557 dfa557 = new DFA557(this);
    protected DFA558 dfa558 = new DFA558(this);
    protected DFA575 dfa575 = new DFA575(this);
    protected DFA579 dfa579 = new DFA579(this);
    protected DFA582 dfa582 = new DFA582(this);
    protected DFA593 dfa593 = new DFA593(this);
    protected DFA598 dfa598 = new DFA598(this);
    protected DFA600 dfa600 = new DFA600(this);
    protected DFA604 dfa604 = new DFA604(this);
    protected DFA697 dfa697 = new DFA697(this);
    protected DFA699 dfa699 = new DFA699(this);
    protected DFA701 dfa701 = new DFA701(this);
    protected DFA703 dfa703 = new DFA703(this);
    protected DFA705 dfa705 = new DFA705(this);
    protected DFA707 dfa707 = new DFA707(this);
    protected DFA709 dfa709 = new DFA709(this);
    protected DFA711 dfa711 = new DFA711(this);
    protected DFA771 dfa771 = new DFA771(this);
    protected DFA773 dfa773 = new DFA773(this);
    protected DFA777 dfa777 = new DFA777(this);
    protected DFA779 dfa779 = new DFA779(this);
    protected DFA783 dfa783 = new DFA783(this);
    protected DFA785 dfa785 = new DFA785(this);
    protected DFA789 dfa789 = new DFA789(this);
    protected DFA791 dfa791 = new DFA791(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\4\uffff\1\3\34\uffff";
    static final String dfa_3s = "\1\4\3\uffff\1\7\1\4\12\uffff\1\4\1\uffff\10\4\1\uffff\2\4\1\10\3\4";
    static final String dfa_4s = "\1\u0095\3\uffff\1\u0099\1\176\12\uffff\1\176\1\uffff\10\176\1\uffff\6\176";
    static final String dfa_5s = "\1\uffff\1\1\1\2\1\3\2\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\15\1\16\2\14\1\uffff\1\4\10\uffff\1\5\6\uffff";
    static final String dfa_6s = "\4\uffff\1\0\34\uffff}>";
    static final String[] dfa_7s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\1\13\3\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\4\1\3\2\uffff\1\14\1\uffff\1\6\1\2\1\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\6\1\1\1\6\1\3\7\uffff\2\3\1\uffff\2\3\13\uffff\1\6\7\uffff\1\3\3\uffff\1\3\5\uffff\1\11\6\uffff\1\6\2\uffff\1\5\3\uffff\1\12\1\7\2\uffff\1\10\6\uffff\1\6\1\uffff\4\6\1\uffff\1\6\1\uffff\1\3\2\uffff\1\6\11\uffff\2\15\10\uffff\1\6",
            "",
            "",
            "",
            "\1\3\7\uffff\1\17\45\uffff\1\3\1\uffff\2\3\10\uffff\15\3\1\uffff\1\3\1\uffff\2\3\2\uffff\4\3\1\uffff\20\3\1\uffff\6\3\32\uffff\2\3\4\uffff\1\16\5\uffff\1\3\1\uffff\1\3",
            "\1\26\1\22\1\21\1\uffff\1\30\3\21\2\uffff\1\21\4\uffff\2\21\3\uffff\1\21\1\uffff\1\21\1\uffff\1\23\1\uffff\1\21\1\31\7\uffff\1\25\1\uffff\1\21\1\27\3\uffff\1\21\1\uffff\1\32\1\uffff\1\24\1\32\6\uffff\2\21\1\uffff\2\21\23\uffff\1\21\3\uffff\1\21\5\uffff\1\32\14\uffff\1\32\1\uffff\1\32\2\uffff\1\32\2\uffff\1\32\14\uffff\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\61\21\4\uffff\10\21\21\uffff\5\21\4\uffff\1\32\3\uffff\2\32\1\uffff\1\33\1\21\2\uffff\1\32\1\uffff\1\34\1\32\4\uffff\1\21\1\32\16\uffff\1\21",
            "",
            "\61\21\4\uffff\10\21\21\uffff\5\21\13\uffff\2\21\4\uffff\1\21\5\uffff\1\35\17\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\4\uffff\1\32\3\uffff\2\32\1\uffff\2\21\2\uffff\1\32\1\uffff\1\34\1\32\4\uffff\1\21\1\32\16\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\13\uffff\2\21\4\uffff\1\21\5\uffff\1\35\17\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\13\uffff\2\21\4\uffff\1\21\5\uffff\1\36\17\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\13\uffff\2\21\4\uffff\1\21\5\uffff\1\37\17\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\4\uffff\1\32\3\uffff\2\32\1\uffff\2\21\2\uffff\1\32\1\uffff\1\34\1\32\4\uffff\1\21\1\32\16\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\4\uffff\1\32\3\uffff\2\32\1\uffff\2\21\2\uffff\1\32\1\uffff\1\34\1\32\4\uffff\1\21\1\32\16\uffff\1\21",
            "\61\21\4\uffff\10\21\21\uffff\5\21\4\uffff\1\32\3\uffff\2\32\1\uffff\2\21\2\uffff\1\32\1\uffff\1\34\1\32\4\uffff\1\21\1\32\16\uffff\1\21",
            "",
            "\61\21\4\uffff\10\21\21\uffff\5\21\17\uffff\1\21\27\uffff\1\40",
            "\3\32\1\uffff\4\32\2\uffff\1\32\4\uffff\2\32\3\uffff\1\32\1\uffff\1\32\1\uffff\1\32\1\uffff\2\32\7\uffff\1\32\1\uffff\2\32\3\uffff\1\32\3\uffff\1\32\7\uffff\2\32\1\uffff\2\32\23\uffff\1\32\3\uffff\1\32\17\uffff\1\21\7\uffff\1\21\17\uffff\1\32",
            "\1\32\23\uffff\1\32\2\uffff\1\32\12\uffff\1\32\5\uffff\1\32\2\uffff\1\32\2\uffff\1\21\62\uffff\1\32\24\uffff\1\32",
            "\2\32\2\uffff\1\32\23\uffff\1\32\2\uffff\1\32\7\uffff\1\32\2\uffff\1\32\5\uffff\1\32\1\uffff\2\32\2\uffff\1\21\67\uffff\1\32\2\uffff\1\32\14\uffff\1\32",
            "\2\32\2\uffff\1\32\23\uffff\1\32\2\uffff\1\32\7\uffff\1\32\2\uffff\1\32\5\uffff\1\32\1\uffff\2\32\2\uffff\1\21\67\uffff\1\32\2\uffff\1\32\14\uffff\1\32",
            "\61\21\4\uffff\10\21\21\uffff\5\21\4\uffff\1\32\3\uffff\2\32\1\uffff\2\21\2\uffff\1\32\1\uffff\1\34\1\32\4\uffff\1\21\1\32\16\uffff\1\21"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "147:1: (this_ThisLiteral_0= ruleThisLiteral | this_SuperLiteral_1= ruleSuperLiteral | this_IdentifierRef_2= ruleIdentifierRef | this_JSXElement_3= ruleJSXElement | this_ParameterizedCallExpression_4= ruleParameterizedCallExpression | this_Literal_5= ruleLiteral | this_ArrayLiteral_6= ruleArrayLiteral | this_ObjectLiteral_7= ruleObjectLiteral | this_ParenExpression_8= ruleParenExpression | this_AnnotatedExpression_9= ruleAnnotatedExpression | this_FunctionExpression_10= ruleFunctionExpression | ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] Function ) )=>this_AsyncFunctionExpression_11= ruleAsyncFunctionExpression ) | this_N4ClassExpression_12= ruleN4ClassExpression | this_TemplateLiteral_13= ruleTemplateLiteral )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_4 = input.LA(1);

                         
                        int index3_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA3_4==RULE_NO_LINE_TERMINATOR) && (synpred1_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA3_4==Function) && (synpred1_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA3_4==EOF||LA3_4==Instanceof||LA3_4==ExclamationMarkEqualsSignEqualsSign||(LA3_4>=LessThanSignLessThanSignEqualsSign && LA3_4<=EqualsSignEqualsSignEqualsSign)||(LA3_4>=ExclamationMarkEqualsSign && LA3_4<=EqualsSignEqualsSign)||LA3_4==GreaterThanSignEqualsSign||(LA3_4>=CircumflexAccentEqualsSign && LA3_4<=As)||(LA3_4>=In && LA3_4<=VerticalLineVerticalLine)||(LA3_4>=PercentSign && LA3_4<=QuestionMark)||(LA3_4>=LeftSquareBracket && LA3_4<=RightCurlyBracket)||(LA3_4>=RULE_TEMPLATE_HEAD && LA3_4<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA3_4==RULE_ML_COMMENT||LA3_4==RULE_EOL) ) {s = 3;}

                         
                        input.seek(index3_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\1\4\3\uffff\1\7\1\4\13\uffff\11\4\1\uffff\2\4\1\10\3\4";
    static final String dfa_9s = "\1\u0095\3\uffff\1\u0099\1\176\13\uffff\11\176\1\uffff\6\176";
    static final String dfa_10s = "\1\uffff\1\1\1\2\1\3\2\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\15\1\16\2\14\1\5\11\uffff\1\4\6\uffff";
    static final String[] dfa_11s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\1\13\3\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\4\1\3\2\uffff\1\14\1\uffff\1\6\1\2\1\uffff\1\3\2\uffff\1\3\3\uffff\1\3\1\6\1\1\1\6\1\3\7\uffff\2\3\1\uffff\2\3\13\uffff\1\6\7\uffff\1\3\3\uffff\1\3\5\uffff\1\11\6\uffff\1\6\2\uffff\1\5\3\uffff\1\12\1\7\2\uffff\1\10\6\uffff\1\6\1\uffff\4\6\1\uffff\1\6\1\uffff\1\3\2\uffff\1\6\11\uffff\2\15\10\uffff\1\6",
            "",
            "",
            "",
            "\1\3\7\uffff\1\17\45\uffff\1\3\1\uffff\2\3\10\uffff\15\3\1\uffff\1\3\1\uffff\2\3\2\uffff\4\3\1\uffff\20\3\1\uffff\6\3\32\uffff\2\3\4\uffff\1\16\5\uffff\1\3\1\uffff\1\3",
            "\1\31\1\27\1\32\1\uffff\1\23\3\32\2\uffff\1\32\4\uffff\2\32\3\uffff\1\32\1\uffff\1\32\1\uffff\1\24\1\uffff\1\32\1\22\7\uffff\1\30\1\uffff\1\32\1\21\3\uffff\1\32\1\uffff\1\20\1\uffff\1\26\1\20\6\uffff\2\32\1\uffff\2\32\23\uffff\1\32\3\uffff\1\32\5\uffff\1\20\14\uffff\1\20\1\uffff\1\20\2\uffff\1\20\2\uffff\1\20\14\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\1\34\1\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\35\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\35\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\36\17\uffff\1\32",
            "\61\32\4\uffff\10\32\21\uffff\5\32\13\uffff\2\32\4\uffff\1\32\5\uffff\1\37\17\uffff\1\32",
            "",
            "\3\20\1\uffff\4\20\2\uffff\1\20\4\uffff\2\20\3\uffff\1\20\1\uffff\1\20\1\uffff\1\20\1\uffff\2\20\7\uffff\1\20\2\uffff\1\20\3\uffff\1\20\3\uffff\1\20\7\uffff\2\20\1\uffff\2\20\23\uffff\1\20\3\uffff\1\20\17\uffff\1\32\7\uffff\1\32\17\uffff\1\20",
            "\61\32\4\uffff\10\32\21\uffff\5\32\17\uffff\1\32\27\uffff\1\40",
            "\1\20\23\uffff\1\20\2\uffff\1\20\12\uffff\1\20\5\uffff\1\20\2\uffff\1\20\2\uffff\1\32\62\uffff\1\20\24\uffff\1\20",
            "\2\20\2\uffff\1\20\23\uffff\1\20\2\uffff\1\20\7\uffff\1\20\2\uffff\1\20\5\uffff\1\20\1\uffff\2\20\2\uffff\1\32\67\uffff\1\20\2\uffff\1\20\14\uffff\1\20",
            "\2\20\2\uffff\1\20\23\uffff\1\20\2\uffff\1\20\7\uffff\1\20\2\uffff\1\20\5\uffff\1\20\1\uffff\2\20\2\uffff\1\32\67\uffff\1\20\2\uffff\1\20\14\uffff\1\20",
            "\61\32\4\uffff\10\32\21\uffff\5\32\4\uffff\1\20\3\uffff\2\20\1\uffff\2\32\2\uffff\1\20\1\uffff\1\33\1\20\4\uffff\1\32\1\20\16\uffff\1\32"
    };
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[][] dfa_11 = unpackEncodedStringArray(dfa_11s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_6;
            this.transition = dfa_11;
        }
        public String getDescription() {
            return "308:1: (this_ThisLiteral_0= ruleThisLiteral | this_SuperLiteral_1= ruleSuperLiteral | this_IdentifierRef_2= norm1_IdentifierRef | this_JSXElement_3= ruleJSXElement | this_ParameterizedCallExpression_4= norm1_ParameterizedCallExpression | this_Literal_5= ruleLiteral | this_ArrayLiteral_6= norm1_ArrayLiteral | this_ObjectLiteral_7= norm1_ObjectLiteral | this_ParenExpression_8= norm1_ParenExpression | this_AnnotatedExpression_9= norm1_AnnotatedExpression | this_FunctionExpression_10= ruleFunctionExpression | ( ( ( ( ( Async ) ) ruleNoLineTerminator[null] Function ) )=>this_AsyncFunctionExpression_11= ruleAsyncFunctionExpression ) | this_N4ClassExpression_12= norm1_N4ClassExpression | this_TemplateLiteral_13= norm1_TemplateLiteral )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_4 = input.LA(1);

                         
                        int index4_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA4_4==EOF||LA4_4==Instanceof||LA4_4==ExclamationMarkEqualsSignEqualsSign||(LA4_4>=LessThanSignLessThanSignEqualsSign && LA4_4<=EqualsSignEqualsSignEqualsSign)||(LA4_4>=ExclamationMarkEqualsSign && LA4_4<=EqualsSignEqualsSign)||LA4_4==GreaterThanSignEqualsSign||(LA4_4>=CircumflexAccentEqualsSign && LA4_4<=As)||(LA4_4>=In && LA4_4<=VerticalLineVerticalLine)||(LA4_4>=PercentSign && LA4_4<=QuestionMark)||(LA4_4>=LeftSquareBracket && LA4_4<=RightCurlyBracket)||(LA4_4>=RULE_TEMPLATE_HEAD && LA4_4<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA4_4==RULE_ML_COMMENT||LA4_4==RULE_EOL) ) {s = 3;}

                        else if ( (LA4_4==RULE_NO_LINE_TERMINATOR) && (synpred2_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA4_4==Function) && (synpred2_InternalN4JSXParser())) {s = 15;}

                         
                        input.seek(index4_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_12s = "\124\uffff";
    static final String dfa_13s = "\1\4\13\0\110\uffff";
    static final String dfa_14s = "\1\u0095\13\0\110\uffff";
    static final String dfa_15s = "\14\uffff\1\4\1\5\1\6\1\7\101\uffff\1\1\1\2\1\3";
    static final String dfa_16s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\110\uffff}>";
    static final String[] dfa_17s = {
            "\3\17\1\uffff\1\17\1\13\1\4\1\7\2\17\1\6\1\17\3\uffff\1\2\1\3\1\17\1\16\1\15\1\5\1\17\1\10\6\17\1\uffff\1\12\1\11\7\17\2\uffff\1\14\7\17\4\uffff\10\17\5\uffff\1\17\1\uffff\1\17\1\uffff\1\17\7\uffff\3\17\1\uffff\1\17\2\uffff\1\17\2\uffff\1\17\1\uffff\2\17\1\uffff\1\17\1\uffff\1\17\1\uffff\2\17\3\uffff\1\1\1\17\2\uffff\1\17\2\uffff\1\17\3\uffff\1\17\1\uffff\4\17\1\uffff\1\17\1\uffff\1\17\2\uffff\1\17\11\uffff\2\17\10\uffff\1\17",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final char[] dfa_13 = DFA.unpackEncodedStringToUnsignedChars(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[][] dfa_17 = unpackEncodedStringArray(dfa_17s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_12;
            this.eof = dfa_12;
            this.min = dfa_13;
            this.max = dfa_14;
            this.accept = dfa_15;
            this.special = dfa_16;
            this.transition = dfa_17;
        }
        public String getDescription() {
            return "1017:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedScriptElement_0= ruleAnnotatedScriptElement ) | ( ( ( () ( ( ruleN4Modifier ) )* Class ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4ClassDeclaration_1= ruleN4ClassDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Interface ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4InterfaceDeclaration_2= ruleN4InterfaceDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Enum ( ( ruleBindingIdentifier ) )? ) )=>this_N4EnumDeclaration_3= ruleN4EnumDeclaration ) | this_ImportDeclaration_4= ruleImportDeclaration | this_ExportDeclaration_5= ruleExportDeclaration | this_RootStatement_6= ruleRootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA13_0 = input.LA(1);

                         
                        int index13_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA13_0>=9 && LA13_0<=106 && (s=T2S.M_0[LA13_0-(9)])>=0)) { /* 11 cases */ }
                        else if ( (LA13_0==Enum) && (synpred6_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA13_0==Import) ) {s = 13;}

                        else if ( (LA13_0==Export) ) {s = 14;}

                        else if ( ((LA13_0>=Intersection && LA13_0<=Implements)||LA13_0==Promisify||(LA13_0>=Continue && LA13_0<=Debugger)||LA13_0==Function||LA13_0==Delete||LA13_0==Return||(LA13_0>=Switch && LA13_0<=Break)||(LA13_0>=False && LA13_0<=This)||(LA13_0>=From && LA13_0<=With)||(LA13_0>=For && LA13_0<=Var)||LA13_0==PlusSignPlusSign||LA13_0==HyphenMinusHyphenMinus||LA13_0==SolidusEqualsSign||(LA13_0>=As && LA13_0<=If)||LA13_0==Of||LA13_0==ExclamationMark||LA13_0==LeftParenthesis||(LA13_0>=Asterisk && LA13_0<=PlusSign)||LA13_0==HyphenMinus||LA13_0==Solidus||(LA13_0>=Semicolon && LA13_0<=LessThanSign)||LA13_0==LeftSquareBracket||LA13_0==LeftCurlyBracket||LA13_0==Tilde||LA13_0==RULE_DOUBLE||(LA13_0>=RULE_HEX_INT && LA13_0<=RULE_LEGACY_OCTAL_INT)||LA13_0==RULE_SCIENTIFIC_INT||LA13_0==RULE_IDENTIFIER||LA13_0==RULE_STRING||(LA13_0>=RULE_TEMPLATE_HEAD && LA13_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA13_0==RULE_INT) ) {s = 15;}

                         
                        input.seek(index13_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA13_1 = input.LA(1);

                         
                        int index13_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA13_2 = input.LA(1);

                         
                        int index13_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA13_3 = input.LA(1);

                         
                        int index13_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA13_4 = input.LA(1);

                         
                        int index13_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA13_5 = input.LA(1);

                         
                        int index13_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA13_6 = input.LA(1);

                         
                        int index13_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA13_7 = input.LA(1);

                         
                        int index13_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA13_8 = input.LA(1);

                         
                        int index13_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA13_9 = input.LA(1);

                         
                        int index13_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (synpred6_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA13_10 = input.LA(1);

                         
                        int index13_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalN4JSXParser()) ) {s = 82;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA13_11 = input.LA(1);

                         
                        int index13_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalN4JSXParser()) ) {s = 83;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index13_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 13, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_18s = "\16\uffff";
    static final String dfa_19s = "\1\11\2\uffff\10\11\3\uffff";
    static final String dfa_20s = "\1\55\2\uffff\10\55\3\uffff";
    static final String dfa_21s = "\1\uffff\1\1\1\2\10\uffff\1\3\1\4\1\5";
    static final String dfa_22s = "\16\uffff}>";
    static final String[] dfa_23s = {
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\1\uffff\1\1\1\2\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "",
            "",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "\1\14\1\5\1\10\2\uffff\1\7\1\13\3\uffff\1\3\1\4\3\uffff\1\6\1\uffff\1\11\3\uffff\1\13\3\uffff\1\14\1\12\11\uffff\1\15",
            "",
            "",
            ""
    };

    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_21;
            this.special = dfa_22;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "1175:2: ( ( () this_ExportDeclarationImpl_2= ruleExportDeclarationImpl[$current] ) | ( () this_ImportDeclarationImpl_4= ruleImportDeclarationImpl[$current] ) | ( () ( ( ( ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=> ( ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )* this_AsyncNoTrailingLineBreak_7= ruleAsyncNoTrailingLineBreak[$current] ( ( Function )=>this_FunctionImpl_8= ruleFunctionImpl[$current] ) ) ) ) | ( ( ( () ( (lv_declaredModifiers_10_0= ruleN4Modifier ) )* otherlv_11= Class ( (lv_typingStrategy_12_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_13_0= ruleBindingIdentifier ) ) (this_TypeVariables_14= ruleTypeVariables[$current] )? (this_ClassExtendsClause_15= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_17_0= ruleN4Modifier ) )* otherlv_18= Interface ( (lv_typingStrategy_19_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_20_0= ruleBindingIdentifier ) ) (this_TypeVariables_21= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_22= ruleInterfaceImplementsList[$current] )? ) ) this_Members_23= ruleMembers[$current] ) | ( () ( (lv_declaredModifiers_25_0= ruleN4Modifier ) )* otherlv_26= Enum ( (lv_name_27_0= ruleBindingIdentifier ) ) otherlv_28= LeftCurlyBracket ( (lv_literals_29_0= ruleN4EnumLiteral ) ) (otherlv_30= Comma ( (lv_literals_31_0= ruleN4EnumLiteral ) ) )* otherlv_32= RightCurlyBracket ) )";
        }
    }
    static final String dfa_24s = "\13\uffff";
    static final String dfa_25s = "\11\11\2\uffff";
    static final String dfa_26s = "\11\43\2\uffff";
    static final String dfa_27s = "\11\uffff\1\1\1\2";
    static final String dfa_28s = "\13\uffff}>";
    static final String[] dfa_29s = {
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "\1\12\1\3\1\6\2\uffff\1\5\4\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\7\uffff\1\11\1\10",
            "",
            ""
    };

    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "1270:7: ( ( () ( (lv_declaredModifiers_10_0= ruleN4Modifier ) )* otherlv_11= Class ( (lv_typingStrategy_12_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_13_0= ruleBindingIdentifier ) ) (this_TypeVariables_14= ruleTypeVariables[$current] )? (this_ClassExtendsClause_15= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_17_0= ruleN4Modifier ) )* otherlv_18= Interface ( (lv_typingStrategy_19_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_20_0= ruleBindingIdentifier ) ) (this_TypeVariables_21= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_22= ruleInterfaceImplementsList[$current] )? ) )";
        }
    }
    static final String dfa_30s = "\102\uffff";
    static final String dfa_31s = "\1\4\10\0\1\uffff\2\0\1\uffff\2\0\1\uffff\1\0\61\uffff";
    static final String dfa_32s = "\1\u0095\10\0\1\uffff\2\0\1\uffff\2\0\1\uffff\1\0\61\uffff";
    static final String dfa_33s = "\11\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\2\60\uffff";
    static final String dfa_34s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\uffff\1\13\1\14\1\uffff\1\15\61\uffff}>";
    static final String[] dfa_35s = {
            "\3\21\1\uffff\1\21\1\13\1\4\1\7\2\uffff\1\6\1\16\3\uffff\1\2\1\3\1\21\2\uffff\1\5\1\uffff\1\10\1\uffff\2\21\1\15\1\21\2\uffff\1\12\1\11\2\21\1\uffff\1\21\1\uffff\2\21\2\uffff\1\14\6\21\6\uffff\1\21\1\20\3\21\1\uffff\1\17\5\uffff\1\21\1\uffff\1\21\1\uffff\1\21\7\uffff\1\21\3\uffff\1\21\2\uffff\1\21\2\uffff\1\21\1\uffff\2\21\1\uffff\1\21\1\uffff\1\21\2\uffff\1\21\3\uffff\1\1\1\21\2\uffff\1\21\2\uffff\1\21\3\uffff\1\21\1\uffff\4\21\1\uffff\1\21\1\uffff\1\21\2\uffff\1\21\11\uffff\2\21\10\uffff\1\21",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "1788:2: ( ( ( CommercialAt | Private | Project | Protected | Public | External | Abstract | Static | Const | Class | Interface | Enum | Async | Function | Var | Let )=> (lv_exportedElement_9_0= ruleExportableElement ) ) | ( ( (lv_defaultExportedExpression_10_0= norm1_AssignmentExpression ) ) ruleSemi ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_0 = input.LA(1);

                         
                        int index29_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA29_0==CommercialAt) ) {s = 1;}

                        else if ( (LA29_0==Private) ) {s = 2;}

                        else if ( (LA29_0==Project) ) {s = 3;}

                        else if ( (LA29_0==Protected) ) {s = 4;}

                        else if ( (LA29_0==Public) ) {s = 5;}

                        else if ( (LA29_0==External) ) {s = 6;}

                        else if ( (LA29_0==Abstract) ) {s = 7;}

                        else if ( (LA29_0==Static) ) {s = 8;}

                        else if ( (LA29_0==Const) && (synpred11_InternalN4JSXParser())) {s = 9;}

                        else if ( (LA29_0==Class) ) {s = 10;}

                        else if ( (LA29_0==Interface) ) {s = 11;}

                        else if ( (LA29_0==Enum) && (synpred11_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA29_0==Async) ) {s = 13;}

                        else if ( (LA29_0==Function) ) {s = 14;}

                        else if ( (LA29_0==Var) && (synpred11_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA29_0==Let) ) {s = 16;}

                        else if ( ((LA29_0>=Intersection && LA29_0<=Implements)||LA29_0==Promisify||LA29_0==Delete||(LA29_0>=Target && LA29_0<=Typeof)||LA29_0==Await||(LA29_0>=False && LA29_0<=Super)||LA29_0==Union||(LA29_0>=Yield && LA29_0<=This)||(LA29_0>=From && LA29_0<=Void)||LA29_0==Get||(LA29_0>=New && LA29_0<=Set)||LA29_0==PlusSignPlusSign||LA29_0==HyphenMinusHyphenMinus||LA29_0==SolidusEqualsSign||LA29_0==As||LA29_0==Of||LA29_0==ExclamationMark||LA29_0==LeftParenthesis||(LA29_0>=Asterisk && LA29_0<=PlusSign)||LA29_0==HyphenMinus||LA29_0==Solidus||LA29_0==LessThanSign||LA29_0==LeftSquareBracket||LA29_0==LeftCurlyBracket||LA29_0==Tilde||LA29_0==RULE_DOUBLE||(LA29_0>=RULE_HEX_INT && LA29_0<=RULE_LEGACY_OCTAL_INT)||LA29_0==RULE_SCIENTIFIC_INT||LA29_0==RULE_IDENTIFIER||LA29_0==RULE_STRING||(LA29_0>=RULE_TEMPLATE_HEAD && LA29_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA29_0==RULE_INT) ) {s = 17;}

                         
                        input.seek(index29_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA29_1 = input.LA(1);

                         
                        int index29_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA29_2 = input.LA(1);

                         
                        int index29_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA29_3 = input.LA(1);

                         
                        int index29_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA29_4 = input.LA(1);

                         
                        int index29_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA29_5 = input.LA(1);

                         
                        int index29_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA29_6 = input.LA(1);

                         
                        int index29_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA29_7 = input.LA(1);

                         
                        int index29_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA29_8 = input.LA(1);

                         
                        int index29_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA29_10 = input.LA(1);

                         
                        int index29_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA29_11 = input.LA(1);

                         
                        int index29_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA29_13 = input.LA(1);

                         
                        int index29_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA29_14 = input.LA(1);

                         
                        int index29_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA29_16 = input.LA(1);

                         
                        int index29_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalN4JSXParser()) ) {s = 15;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index29_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\67\uffff";
    static final String dfa_37s = "\17\uffff\11\16\37\uffff";
    static final String dfa_38s = "\1\11\1\uffff\7\11\1\4\5\uffff\1\4\7\11\1\17\37\uffff";
    static final String dfa_39s = "\1\152\1\uffff\7\100\1\176\5\uffff\11\u0099\37\uffff";
    static final String dfa_40s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\5\1\6\11\uffff\37\3";
    static final String dfa_41s = "\1\4\1\uffff\1\16\1\2\1\14\1\11\1\17\1\15\1\0\1\13\5\uffff\1\7\1\10\1\3\1\12\1\5\1\20\1\6\1\1\40\uffff}>";
    static final String[] dfa_42s = {
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\51\uffff\1\1",
            "",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16",
            "\3\16\1\uffff\1\16\1\17\1\22\1\25\2\uffff\1\24\1\15\3\uffff\1\20\1\21\3\uffff\1\23\1\uffff\1\26\1\uffff\1\16\1\uffff\1\27\1\16\2\uffff\1\12\1\11\3\uffff\1\16\1\uffff\2\16\2\uffff\1\14\1\16\3\uffff\1\16\7\uffff\2\16\1\uffff\2\16\1\uffff\1\16\21\uffff\1\16\3\uffff\1\16\23\uffff\2\16\2\uffff\1\16\17\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "\1\51\1\44\1\56\1\uffff\1\53\1\57\1\61\1\40\2\uffff\1\37\2\uffff\1\65\1\uffff\1\60\1\36\3\uffff\1\62\1\uffff\1\41\1\uffff\1\46\1\uffff\1\55\1\54\7\uffff\1\50\1\uffff\1\32\1\52\3\uffff\1\43\3\uffff\1\47\7\uffff\1\33\1\35\1\uffff\1\63\1\34\23\uffff\1\42\3\uffff\1\45\11\uffff\1\16\3\uffff\2\16\1\64\1\16\6\uffff\1\66\1\uffff\1\16\1\30\14\uffff\1\31\30\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\13\1\4\1\7\2\uffff\1\6\1\15\3\uffff\1\2\1\3\3\uffff\1\5\1\uffff\1\10\3\uffff\1\15\3\uffff\1\12\1\11\11\uffff\1\14\15\uffff\1\16\4\uffff\1\16\37\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\46\uffff\1\16\1\uffff\1\16",
            "\1\15\120\uffff\1\16\3\uffff\2\16\1\uffff\1\16\10\uffff\1\16\40\uffff\1\15\5\uffff\1\16\1\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "2051:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedExportableElement_0= ruleAnnotatedExportableElement ) | ( ( ( () ( ( ruleN4Modifier ) )* Class ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4ClassDeclaration_1= ruleN4ClassDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Interface ( ( ruleTypingStrategyDefSiteOperator ) )? ( ( ruleBindingIdentifier ) )? ) )=>this_N4InterfaceDeclaration_2= ruleN4InterfaceDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Enum ( ( ruleBindingIdentifier ) )? ) )=>this_N4EnumDeclaration_3= ruleN4EnumDeclaration ) | this_ExportedFunctionDeclaration_4= ruleExportedFunctionDeclaration | this_ExportedVariableStatement_5= ruleExportedVariableStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_8 = input.LA(1);

                         
                        int index35_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_8==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_8==Private) ) {s = 2;}

                        else if ( (LA35_8==Project) ) {s = 3;}

                        else if ( (LA35_8==Protected) ) {s = 4;}

                        else if ( (LA35_8==Public) ) {s = 5;}

                        else if ( (LA35_8==External) ) {s = 6;}

                        else if ( (LA35_8==Abstract) ) {s = 7;}

                        else if ( (LA35_8==Static) ) {s = 8;}

                        else if ( (LA35_8==Const) ) {s = 9;}

                        else if ( (LA35_8==Let||LA35_8==Var) ) {s = 14;}

                        else if ( (LA35_8==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_8==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_8==Function||LA35_8==Async) ) {s = 13;}

                         
                        input.seek(index35_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_22 = input.LA(1);

                         
                        int index35_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_22==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_22==Private) ) {s = 2;}

                        else if ( (LA35_22==Project) ) {s = 3;}

                        else if ( (LA35_22==Protected) ) {s = 4;}

                        else if ( (LA35_22==Public) ) {s = 5;}

                        else if ( (LA35_22==External) ) {s = 6;}

                        else if ( (LA35_22==Abstract) ) {s = 7;}

                        else if ( (LA35_22==Static) ) {s = 8;}

                        else if ( (LA35_22==Const) ) {s = 9;}

                        else if ( (LA35_22==EOF||LA35_22==Let||LA35_22==Var||LA35_22==Comma||(LA35_22>=Colon && LA35_22<=Semicolon)||LA35_22==EqualsSign||LA35_22==RightCurlyBracket||LA35_22==RULE_ML_COMMENT||LA35_22==RULE_EOL) ) {s = 14;}

                        else if ( (LA35_22==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_22==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_22==Function||LA35_22==Async) ) {s = 13;}

                         
                        input.seek(index35_22);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_3 = input.LA(1);

                         
                        int index35_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_3==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_3==Private) ) {s = 2;}

                        else if ( (LA35_3==Project) ) {s = 3;}

                        else if ( (LA35_3==Protected) ) {s = 4;}

                        else if ( (LA35_3==Public) ) {s = 5;}

                        else if ( (LA35_3==External) ) {s = 6;}

                        else if ( (LA35_3==Abstract) ) {s = 7;}

                        else if ( (LA35_3==Static) ) {s = 8;}

                        else if ( (LA35_3==Const) ) {s = 9;}

                        else if ( (LA35_3==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_3==Function||LA35_3==Async) ) {s = 13;}

                        else if ( (LA35_3==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_3==Let||LA35_3==Var) ) {s = 14;}

                         
                        input.seek(index35_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA35_17 = input.LA(1);

                         
                        int index35_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_17==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_17==Private) ) {s = 2;}

                        else if ( (LA35_17==Project) ) {s = 3;}

                        else if ( (LA35_17==Protected) ) {s = 4;}

                        else if ( (LA35_17==Public) ) {s = 5;}

                        else if ( (LA35_17==External) ) {s = 6;}

                        else if ( (LA35_17==Abstract) ) {s = 7;}

                        else if ( (LA35_17==Static) ) {s = 8;}

                        else if ( (LA35_17==Const) ) {s = 9;}

                        else if ( (LA35_17==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_17==Function||LA35_17==Async) ) {s = 13;}

                        else if ( (LA35_17==EOF||LA35_17==Let||LA35_17==Var||LA35_17==Comma||(LA35_17>=Colon && LA35_17<=Semicolon)||LA35_17==EqualsSign||LA35_17==RightCurlyBracket||LA35_17==RULE_ML_COMMENT||LA35_17==RULE_EOL) ) {s = 14;}

                        else if ( (LA35_17==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                         
                        input.seek(index35_17);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA35_0 = input.LA(1);

                         
                        int index35_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_0==CommercialAt) && (synpred12_InternalN4JSXParser())) {s = 1;}

                        else if ( (LA35_0==Private) ) {s = 2;}

                        else if ( (LA35_0==Project) ) {s = 3;}

                        else if ( (LA35_0==Protected) ) {s = 4;}

                        else if ( (LA35_0==Public) ) {s = 5;}

                        else if ( (LA35_0==External) ) {s = 6;}

                        else if ( (LA35_0==Abstract) ) {s = 7;}

                        else if ( (LA35_0==Static) ) {s = 8;}

                        else if ( (LA35_0==Const) ) {s = 9;}

                        else if ( (LA35_0==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_0==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_0==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_0==Function||LA35_0==Async) ) {s = 13;}

                        else if ( (LA35_0==Let||LA35_0==Var) ) {s = 14;}

                         
                        input.seek(index35_0);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA35_19 = input.LA(1);

                         
                        int index35_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_19==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_19==Private) ) {s = 2;}

                        else if ( (LA35_19==Project) ) {s = 3;}

                        else if ( (LA35_19==Protected) ) {s = 4;}

                        else if ( (LA35_19==Public) ) {s = 5;}

                        else if ( (LA35_19==External) ) {s = 6;}

                        else if ( (LA35_19==Abstract) ) {s = 7;}

                        else if ( (LA35_19==Static) ) {s = 8;}

                        else if ( (LA35_19==Const) ) {s = 9;}

                        else if ( (LA35_19==EOF||LA35_19==Let||LA35_19==Var||LA35_19==Comma||(LA35_19>=Colon && LA35_19<=Semicolon)||LA35_19==EqualsSign||LA35_19==RightCurlyBracket||LA35_19==RULE_ML_COMMENT||LA35_19==RULE_EOL) ) {s = 14;}

                        else if ( (LA35_19==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_19==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_19==Function||LA35_19==Async) ) {s = 13;}

                         
                        input.seek(index35_19);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA35_21 = input.LA(1);

                         
                        int index35_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_21==EOF||LA35_21==Let||LA35_21==Var||LA35_21==Comma||(LA35_21>=Colon && LA35_21<=Semicolon)||LA35_21==EqualsSign||LA35_21==RightCurlyBracket||LA35_21==RULE_ML_COMMENT||LA35_21==RULE_EOL) ) {s = 14;}

                        else if ( (LA35_21==Const) ) {s = 9;}

                        else if ( (LA35_21==Private) ) {s = 2;}

                        else if ( (LA35_21==Project) ) {s = 3;}

                        else if ( (LA35_21==Protected) ) {s = 4;}

                        else if ( (LA35_21==Public) ) {s = 5;}

                        else if ( (LA35_21==External) ) {s = 6;}

                        else if ( (LA35_21==Abstract) ) {s = 7;}

                        else if ( (LA35_21==Static) ) {s = 8;}

                        else if ( (LA35_21==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_21==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_21==Function||LA35_21==Async) ) {s = 13;}

                        else if ( (LA35_21==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                         
                        input.seek(index35_21);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA35_15 = input.LA(1);

                         
                        int index35_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA35_15>=4 && LA35_15<=126 && (s=T2S.M_1[LA35_15-(4)])>=0) && (synpred14_InternalN4JSXParser())) { /* 31 cases */ }
                        else if ( (LA35_15==EOF||LA35_15==Comma||(LA35_15>=Colon && LA35_15<=Semicolon)||LA35_15==EqualsSign||LA35_15==RightCurlyBracket||LA35_15==RULE_ML_COMMENT||LA35_15==RULE_EOL) ) {s = 14;}

                         
                        input.seek(index35_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA35_16 = input.LA(1);

                         
                        int index35_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_16==EOF||LA35_16==Let||LA35_16==Var||LA35_16==Comma||(LA35_16>=Colon && LA35_16<=Semicolon)||LA35_16==EqualsSign||LA35_16==RightCurlyBracket||LA35_16==RULE_ML_COMMENT||LA35_16==RULE_EOL) ) {s = 14;}

                        else if ( (LA35_16==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_16==Private) ) {s = 2;}

                        else if ( (LA35_16==Project) ) {s = 3;}

                        else if ( (LA35_16==Protected) ) {s = 4;}

                        else if ( (LA35_16==Public) ) {s = 5;}

                        else if ( (LA35_16==External) ) {s = 6;}

                        else if ( (LA35_16==Abstract) ) {s = 7;}

                        else if ( (LA35_16==Static) ) {s = 8;}

                        else if ( (LA35_16==Const) ) {s = 9;}

                        else if ( (LA35_16==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_16==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_16==Function||LA35_16==Async) ) {s = 13;}

                         
                        input.seek(index35_16);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA35_5 = input.LA(1);

                         
                        int index35_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_5==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_5==Private) ) {s = 2;}

                        else if ( (LA35_5==Project) ) {s = 3;}

                        else if ( (LA35_5==Protected) ) {s = 4;}

                        else if ( (LA35_5==Public) ) {s = 5;}

                        else if ( (LA35_5==External) ) {s = 6;}

                        else if ( (LA35_5==Abstract) ) {s = 7;}

                        else if ( (LA35_5==Static) ) {s = 8;}

                        else if ( (LA35_5==Const) ) {s = 9;}

                        else if ( (LA35_5==Let||LA35_5==Var) ) {s = 14;}

                        else if ( (LA35_5==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_5==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_5==Function||LA35_5==Async) ) {s = 13;}

                         
                        input.seek(index35_5);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA35_18 = input.LA(1);

                         
                        int index35_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_18==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_18==Private) ) {s = 2;}

                        else if ( (LA35_18==Project) ) {s = 3;}

                        else if ( (LA35_18==Protected) ) {s = 4;}

                        else if ( (LA35_18==Public) ) {s = 5;}

                        else if ( (LA35_18==External) ) {s = 6;}

                        else if ( (LA35_18==Abstract) ) {s = 7;}

                        else if ( (LA35_18==Static) ) {s = 8;}

                        else if ( (LA35_18==Const) ) {s = 9;}

                        else if ( (LA35_18==EOF||LA35_18==Let||LA35_18==Var||LA35_18==Comma||(LA35_18>=Colon && LA35_18<=Semicolon)||LA35_18==EqualsSign||LA35_18==RightCurlyBracket||LA35_18==RULE_ML_COMMENT||LA35_18==RULE_EOL) ) {s = 14;}

                        else if ( (LA35_18==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_18==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_18==Function||LA35_18==Async) ) {s = 13;}

                         
                        input.seek(index35_18);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA35_9 = input.LA(1);

                         
                        int index35_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_9==Interface) ) {s = 15;}

                        else if ( (LA35_9==Private) ) {s = 16;}

                        else if ( (LA35_9==Project) ) {s = 17;}

                        else if ( (LA35_9==Protected) ) {s = 18;}

                        else if ( (LA35_9==Public) ) {s = 19;}

                        else if ( (LA35_9==External) ) {s = 20;}

                        else if ( (LA35_9==Abstract) ) {s = 21;}

                        else if ( (LA35_9==Static) ) {s = 22;}

                        else if ( (LA35_9==Const) ) {s = 9;}

                        else if ( (LA35_9==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_9==Async) ) {s = 23;}

                        else if ( (LA35_9==Function) ) {s = 13;}

                        else if ( ((LA35_9>=Intersection && LA35_9<=Implements)||LA35_9==Promisify||LA35_9==Target||LA35_9==Await||LA35_9==Union||(LA35_9>=Yield && LA35_9<=This)||LA35_9==From||LA35_9==Type||(LA35_9>=Get && LA35_9<=Let)||(LA35_9>=Out && LA35_9<=Set)||LA35_9==Var||LA35_9==As||LA35_9==Of||(LA35_9>=CommercialAt && LA35_9<=LeftSquareBracket)||LA35_9==LeftCurlyBracket||LA35_9==RULE_IDENTIFIER) ) {s = 14;}

                        else if ( (LA35_9==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                         
                        input.seek(index35_9);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA35_4 = input.LA(1);

                         
                        int index35_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_4==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_4==Private) ) {s = 2;}

                        else if ( (LA35_4==Project) ) {s = 3;}

                        else if ( (LA35_4==Protected) ) {s = 4;}

                        else if ( (LA35_4==Public) ) {s = 5;}

                        else if ( (LA35_4==External) ) {s = 6;}

                        else if ( (LA35_4==Abstract) ) {s = 7;}

                        else if ( (LA35_4==Static) ) {s = 8;}

                        else if ( (LA35_4==Const) ) {s = 9;}

                        else if ( (LA35_4==Let||LA35_4==Var) ) {s = 14;}

                        else if ( (LA35_4==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_4==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_4==Function||LA35_4==Async) ) {s = 13;}

                         
                        input.seek(index35_4);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA35_7 = input.LA(1);

                         
                        int index35_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_7==Let||LA35_7==Var) ) {s = 14;}

                        else if ( (LA35_7==Const) ) {s = 9;}

                        else if ( (LA35_7==Private) ) {s = 2;}

                        else if ( (LA35_7==Project) ) {s = 3;}

                        else if ( (LA35_7==Protected) ) {s = 4;}

                        else if ( (LA35_7==Public) ) {s = 5;}

                        else if ( (LA35_7==External) ) {s = 6;}

                        else if ( (LA35_7==Abstract) ) {s = 7;}

                        else if ( (LA35_7==Static) ) {s = 8;}

                        else if ( (LA35_7==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_7==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_7==Function||LA35_7==Async) ) {s = 13;}

                        else if ( (LA35_7==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                         
                        input.seek(index35_7);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA35_2 = input.LA(1);

                         
                        int index35_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_2==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_2==Private) ) {s = 2;}

                        else if ( (LA35_2==Project) ) {s = 3;}

                        else if ( (LA35_2==Protected) ) {s = 4;}

                        else if ( (LA35_2==Public) ) {s = 5;}

                        else if ( (LA35_2==External) ) {s = 6;}

                        else if ( (LA35_2==Abstract) ) {s = 7;}

                        else if ( (LA35_2==Static) ) {s = 8;}

                        else if ( (LA35_2==Const) ) {s = 9;}

                        else if ( (LA35_2==Let||LA35_2==Var) ) {s = 14;}

                        else if ( (LA35_2==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_2==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_2==Function||LA35_2==Async) ) {s = 13;}

                         
                        input.seek(index35_2);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA35_6 = input.LA(1);

                         
                        int index35_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_6==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_6==Private) ) {s = 2;}

                        else if ( (LA35_6==Project) ) {s = 3;}

                        else if ( (LA35_6==Protected) ) {s = 4;}

                        else if ( (LA35_6==Public) ) {s = 5;}

                        else if ( (LA35_6==External) ) {s = 6;}

                        else if ( (LA35_6==Abstract) ) {s = 7;}

                        else if ( (LA35_6==Static) ) {s = 8;}

                        else if ( (LA35_6==Const) ) {s = 9;}

                        else if ( (LA35_6==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_6==Function||LA35_6==Async) ) {s = 13;}

                        else if ( (LA35_6==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_6==Let||LA35_6==Var) ) {s = 14;}

                         
                        input.seek(index35_6);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA35_20 = input.LA(1);

                         
                        int index35_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA35_20==Interface) && (synpred14_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA35_20==Private) ) {s = 2;}

                        else if ( (LA35_20==Project) ) {s = 3;}

                        else if ( (LA35_20==Protected) ) {s = 4;}

                        else if ( (LA35_20==Public) ) {s = 5;}

                        else if ( (LA35_20==External) ) {s = 6;}

                        else if ( (LA35_20==Abstract) ) {s = 7;}

                        else if ( (LA35_20==Static) ) {s = 8;}

                        else if ( (LA35_20==Const) ) {s = 9;}

                        else if ( (LA35_20==Enum) && (synpred15_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA35_20==Function||LA35_20==Async) ) {s = 13;}

                        else if ( (LA35_20==Class) && (synpred13_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA35_20==EOF||LA35_20==Let||LA35_20==Var||LA35_20==Comma||(LA35_20>=Colon && LA35_20<=Semicolon)||LA35_20==EqualsSign||LA35_20==RightCurlyBracket||LA35_20==RULE_ML_COMMENT||LA35_20==RULE_EOL) ) {s = 14;}

                         
                        input.seek(index35_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\26\uffff";
    static final String dfa_44s = "\15\uffff\11\12";
    static final String dfa_45s = "\10\11\1\4\4\uffff\4\11\1\17\1\4\3\11";
    static final String dfa_46s = "\10\100\1\176\4\uffff\11\u0099";
    static final String dfa_47s = "\11\uffff\1\1\1\2\1\3\1\4\11\uffff";
    static final String dfa_48s = "\26\uffff}>";
    static final String[] dfa_49s = {
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12",
            "\3\12\1\uffff\1\12\1\22\1\24\1\17\2\uffff\1\16\1\11\3\uffff\1\23\1\15\3\uffff\1\25\1\uffff\1\20\1\uffff\1\12\1\uffff\1\21\1\12\2\uffff\1\13\1\10\3\uffff\1\12\1\uffff\2\12\2\uffff\1\14\1\12\3\uffff\1\12\7\uffff\2\12\1\uffff\2\12\1\uffff\1\12\21\uffff\1\12\3\uffff\1\12\23\uffff\2\12\2\uffff\1\12\17\uffff\1\12",
            "",
            "",
            "",
            "",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\11\120\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\40\uffff\1\11\5\uffff\1\12\1\uffff\1\12",
            "\3\13\1\uffff\4\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\13\1\uffff\2\13\7\uffff\1\13\1\uffff\2\13\3\uffff\1\13\3\uffff\1\13\7\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\11\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\1\13\14\uffff\1\13\30\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12",
            "\1\13\1\3\1\6\2\uffff\1\5\1\11\3\uffff\1\1\1\2\3\uffff\1\4\1\uffff\1\7\3\uffff\1\11\3\uffff\1\13\1\10\11\uffff\1\14\15\uffff\1\12\4\uffff\1\12\37\uffff\1\12\3\uffff\2\12\1\uffff\1\12\10\uffff\1\12\46\uffff\1\12\1\uffff\1\12"
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_43;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "2199:2: ( ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_AsyncNoTrailingLineBreak_3= ruleAsyncNoTrailingLineBreak[$current] this_FunctionImpl_4= ruleFunctionImpl[$current] ) | ( () ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )* ( (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( (lv_varDeclsOrBindings_8_0= ruleExportedVariableDeclarationOrBinding ) ) (otherlv_9= Comma ( (lv_varDeclsOrBindings_10_0= ruleExportedVariableDeclarationOrBinding ) ) )* ruleSemi ) | ( ( ( () ( (lv_declaredModifiers_13_0= ruleN4Modifier ) )* otherlv_14= Class ( (lv_typingStrategy_15_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_16_0= ruleBindingIdentifier ) ) (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_ClassExtendsClause_18= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_20_0= ruleN4Modifier ) )* otherlv_21= Interface ( (lv_typingStrategy_22_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_23_0= ruleBindingIdentifier ) ) (this_TypeVariables_24= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_25= ruleInterfaceImplementsList[$current] )? ) ) this_Members_26= ruleMembers[$current] ) | ( () ( (lv_declaredModifiers_28_0= ruleN4Modifier ) )* otherlv_29= Enum ( (lv_name_30_0= ruleBindingIdentifier ) ) otherlv_31= LeftCurlyBracket ( (lv_literals_32_0= ruleN4EnumLiteral ) ) (otherlv_33= Comma ( (lv_literals_34_0= ruleN4EnumLiteral ) ) )* otherlv_35= RightCurlyBracket ) )";
        }
    }
    static final String dfa_50s = "\14\uffff";
    static final String dfa_51s = "\4\uffff\10\1";
    static final String dfa_52s = "\1\12\1\uffff\1\4\1\uffff\1\4\7\12";
    static final String dfa_53s = "\1\100\1\uffff\1\176\1\uffff\10\u0099";
    static final String dfa_54s = "\1\uffff\1\2\1\uffff\1\1\10\uffff";
    static final String dfa_55s = "\14\uffff}>";
    static final String[] dfa_56s = {
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\2\27\uffff\1\1\4\uffff\1\1",
            "",
            "\3\1\1\uffff\2\1\1\12\1\7\2\uffff\1\6\4\uffff\1\11\1\5\3\uffff\1\13\1\uffff\1\10\1\uffff\1\1\1\uffff\2\1\3\uffff\1\3\3\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\1\1\1\4\1\uffff\2\1\1\uffff\1\3\21\uffff\1\1\3\uffff\1\1\23\uffff\2\1\2\uffff\1\1\17\uffff\1\1",
            "",
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\1\uffff\2\3\3\uffff\1\3\3\uffff\1\3\7\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\11\uffff\1\1\3\uffff\2\1\1\uffff\1\1\2\uffff\2\3\2\uffff\1\3\1\uffff\1\1\15\uffff\1\3\30\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1",
            "\2\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\10\uffff\1\3\27\uffff\1\3\4\uffff\1\3\37\uffff\1\1\3\uffff\2\1\1\uffff\1\1\10\uffff\1\1\46\uffff\1\1\1\uffff\1\1"
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "()* loopback of 2254:2: ( (lv_declaredModifiers_6_0= ruleN4Modifier ) )*";
        }
    }

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_25;
            this.max = dfa_26;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "2340:7: ( ( () ( (lv_declaredModifiers_13_0= ruleN4Modifier ) )* otherlv_14= Class ( (lv_typingStrategy_15_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_16_0= ruleBindingIdentifier ) ) (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_ClassExtendsClause_18= ruleClassExtendsClause[$current] )? ) | ( () ( (lv_declaredModifiers_20_0= ruleN4Modifier ) )* otherlv_21= Interface ( (lv_typingStrategy_22_0= ruleTypingStrategyDefSiteOperator ) )? ( (lv_name_23_0= ruleBindingIdentifier ) ) (this_TypeVariables_24= ruleTypeVariables[$current] )? (this_InterfaceImplementsList_25= ruleInterfaceImplementsList[$current] )? ) )";
        }
    }
    static final String dfa_57s = "\36\uffff";
    static final String dfa_58s = "\1\uffff\33\35\2\uffff";
    static final String dfa_59s = "\1\4\33\122\2\uffff";
    static final String dfa_60s = "\1\176\33\160\2\uffff";
    static final String dfa_61s = "\34\uffff\1\2\1\1";
    static final String dfa_62s = "\36\uffff}>";
    static final String[] dfa_63s = {
            "\1\21\1\14\1\26\1\34\1\23\1\27\1\31\1\10\2\34\1\7\4\34\1\30\1\6\3\34\1\32\1\34\1\11\1\34\1\16\1\34\1\25\1\24\7\34\1\20\1\34\1\2\1\22\3\34\1\13\3\34\1\17\2\34\4\uffff\1\34\1\3\1\5\1\34\1\33\1\4\2\34\21\uffff\1\12\3\34\1\15\47\uffff\1\1",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "\1\34\15\uffff\1\35\17\uffff\1\35",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "2911:1: ( ( ( ruleBindingIdentifier ) ) | ( ( ( ruleIdentifierName ) ) otherlv_2= As ( (lv_alias_3_0= ruleBindingIdentifier ) ) ) )";
        }
    }
    static final String dfa_64s = "\134\uffff";
    static final String dfa_65s = "\1\2\1\uffff\1\6\3\uffff\1\133\125\uffff";
    static final String dfa_66s = "\1\4\1\0\1\4\1\0\2\uffff\1\0\125\uffff";
    static final String dfa_67s = "\1\u0099\1\0\1\u0095\1\0\2\uffff\1\0\125\uffff";
    static final String dfa_68s = "\4\uffff\1\1\1\2\1\uffff\125\1";
    static final String dfa_69s = "\1\0\1\1\1\3\1\4\2\uffff\1\2\125\uffff}>";
    static final String[] dfa_70s = {
            "\3\5\1\uffff\11\5\2\uffff\16\5\1\uffff\23\5\4\uffff\10\5\5\uffff\1\5\1\uffff\1\5\1\uffff\1\5\7\uffff\3\5\1\uffff\1\5\2\uffff\1\5\2\uffff\1\5\1\uffff\2\5\1\uffff\1\5\1\uffff\1\5\1\uffff\1\1\1\5\3\uffff\2\5\2\uffff\1\5\1\uffff\1\3\1\5\3\uffff\1\5\1\uffff\4\5\1\uffff\1\5\1\uffff\1\5\2\uffff\1\5\11\uffff\2\5\10\uffff\1\5\1\uffff\1\4\1\uffff\1\4",
            "\1\uffff",
            "\1\46\1\41\1\52\1\uffff\1\50\1\21\1\12\1\15\1\117\1\126\1\14\1\27\1\131\2\uffff\1\10\1\11\1\102\1\24\1\23\1\13\1\121\1\16\1\123\1\43\1\104\1\26\1\51\1\120\1\uffff\1\20\1\17\1\72\1\60\1\124\1\45\1\115\1\34\1\47\1\132\1\130\1\22\1\40\1\74\1\57\1\71\1\44\1\103\1\122\4\uffff\1\116\1\35\1\31\1\56\1\53\1\36\1\125\1\30\5\uffff\1\105\1\uffff\1\106\1\uffff\1\76\7\uffff\1\37\1\114\1\113\1\uffff\1\42\2\uffff\1\112\2\uffff\1\54\1\uffff\1\55\1\107\1\uffff\1\110\1\uffff\1\75\1\uffff\1\32\1\61\3\uffff\1\7\1\77\2\uffff\1\25\1\uffff\1\127\1\111\3\uffff\1\62\1\uffff\1\67\1\64\1\65\1\66\1\uffff\1\70\1\uffff\1\33\2\uffff\1\73\11\uffff\1\101\1\100\10\uffff\1\63",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "3182:4: ( ( ruleSemi )=> ruleSemi )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA61_0 = input.LA(1);

                         
                        int index61_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_0==Semicolon) ) {s = 1;}

                        else if ( (LA61_0==EOF) ) {s = 2;}

                        else if ( (LA61_0==RightCurlyBracket) ) {s = 3;}

                        else if ( (LA61_0==RULE_ML_COMMENT||LA61_0==RULE_EOL) && (synpred19_InternalN4JSXParser())) {s = 4;}

                        else if ( ((LA61_0>=Intersection && LA61_0<=Implements)||(LA61_0>=Promisify && LA61_0<=Default)||(LA61_0>=Private && LA61_0<=Break)||(LA61_0>=Class && LA61_0<=With)||(LA61_0>=For && LA61_0<=Var)||LA61_0==PlusSignPlusSign||LA61_0==HyphenMinusHyphenMinus||LA61_0==SolidusEqualsSign||(LA61_0>=As && LA61_0<=If)||LA61_0==Of||LA61_0==ExclamationMark||LA61_0==LeftParenthesis||(LA61_0>=Asterisk && LA61_0<=PlusSign)||LA61_0==HyphenMinus||LA61_0==Solidus||LA61_0==LessThanSign||(LA61_0>=CommercialAt && LA61_0<=LeftSquareBracket)||LA61_0==LeftCurlyBracket||LA61_0==Tilde||LA61_0==RULE_DOUBLE||(LA61_0>=RULE_HEX_INT && LA61_0<=RULE_LEGACY_OCTAL_INT)||LA61_0==RULE_SCIENTIFIC_INT||LA61_0==RULE_IDENTIFIER||LA61_0==RULE_STRING||(LA61_0>=RULE_TEMPLATE_HEAD && LA61_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA61_0==RULE_INT) ) {s = 5;}

                         
                        input.seek(index61_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA61_1 = input.LA(1);

                         
                        int index61_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalN4JSXParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index61_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA61_6 = input.LA(1);

                         
                        int index61_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_6==EOF) && (synpred19_InternalN4JSXParser())) {s = 91;}

                         
                        input.seek(index61_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA61_2 = input.LA(1);

                         
                        int index61_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA61_2==EOF) ) {s = 6;}

                        
                        else if ((LA61_2>=-1 && LA61_2<=149 && (s=T2S.M_2[LA61_2-(-1)])>=0) && (synpred19_InternalN4JSXParser())) { /* 85 cases */ }
                        input.seek(index61_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA61_3 = input.LA(1);

                         
                        int index61_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalN4JSXParser()) ) {s = 90;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index61_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 61, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\130\uffff";
    static final String dfa_72s = "\1\2\127\uffff";
    static final String dfa_73s = "\1\4\1\0\126\uffff";
    static final String dfa_74s = "\1\u0099\1\0\126\uffff";
    static final String dfa_75s = "\2\uffff\1\2\124\uffff\1\1";
    static final String dfa_76s = "\1\uffff\1\0\126\uffff}>";
    static final String[] dfa_77s = {
            "\3\2\1\uffff\11\2\2\uffff\16\2\1\uffff\23\2\4\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\3\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\2\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "3901:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_0_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalN4JSXParser()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "3935:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_0_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalN4JSXParser()) ) {s = 87;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_78s = "\100\uffff";
    static final String dfa_79s = "\1\4\1\0\76\uffff";
    static final String dfa_80s = "\1\u0095\1\0\76\uffff";
    static final String dfa_81s = "\2\uffff\1\2\74\uffff\1\1";
    static final String dfa_82s = "\1\uffff\1\0\76\uffff}>";
    static final String[] dfa_83s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\6\uffff\5\2\7\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\1\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "4785:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm2_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_1 = input.LA(1);

                         
                        int index94_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index94_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "5257:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm3_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "5729:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm2_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_1 = input.LA(1);

                         
                        int index116_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index116_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "6201:3: ( ( ( ( LeftCurlyBracket )=> (lv_hasBracesAroundBody_27_0= LeftCurlyBracket ) ) ( (lv_body_28_0= norm1_BlockMinusBraces ) ) otherlv_29= RightCurlyBracket ) | ( (lv_body_30_0= norm3_ExpressionDisguisedAsBlock ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_84s = "\44\uffff";
    static final String dfa_85s = "\1\4\1\0\42\uffff";
    static final String dfa_86s = "\1\176\1\0\42\uffff";
    static final String dfa_87s = "\2\uffff\1\1\1\2\40\uffff";
    static final String dfa_88s = "\1\0\1\1\42\uffff}>";
    static final String[] dfa_89s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\22\uffff\2\3\1\2\2\uffff\1\1\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "7106:2: ( ( ( ( ruleBindingPattern ) )=> (lv_bindingPattern_0_0= ruleBindingPattern ) ) | ( ( (lv_annotations_1_0= ruleAnnotation ) )* (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )? ( (lv_variadic_3_0= FullStopFullStopFullStop ) )? ( (lv_name_4_0= ruleBindingIdentifier ) ) (this_ColonSepTypeRef_5= ruleColonSepTypeRef[$current] )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA145_0==LeftSquareBracket) && (synpred67_InternalN4JSXParser())) {s = 2;}

                        else if ( ((LA145_0>=Intersection && LA145_0<=Implements)||(LA145_0>=Promisify && LA145_0<=Abstract)||LA145_0==External||(LA145_0>=Private && LA145_0<=Project)||LA145_0==Public||LA145_0==Static||LA145_0==Target||(LA145_0>=Async && LA145_0<=Await)||LA145_0==Union||(LA145_0>=Yield && LA145_0<=This)||LA145_0==From||LA145_0==This_1||(LA145_0>=Type && LA145_0<=Void)||LA145_0==FullStopFullStopFullStop||(LA145_0>=Get && LA145_0<=Let)||(LA145_0>=Out && LA145_0<=Set)||LA145_0==As||LA145_0==Of||(LA145_0>=QuestionMark && LA145_0<=CommercialAt)||LA145_0==Tilde||LA145_0==RULE_IDENTIFIER) ) {s = 3;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred67_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\2\uffff\11\13\1\uffff";
    static final String dfa_91s = "\1\4\1\uffff\5\4\4\135\1\uffff";
    static final String dfa_92s = "\1\176\1\uffff\5\176\4\156\1\uffff";
    static final String dfa_93s = "\1\uffff\1\1\11\uffff\1\2";
    static final String[] dfa_94s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\2\uffff\1\13\3\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            ""
    };
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[][] dfa_94 = unpackEncodedStringArray(dfa_94s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_50;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_94;
        }
        public String getDescription() {
            return "7147:3: (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_95s = "\43\uffff";
    static final String dfa_96s = "\1\4\1\0\41\uffff";
    static final String dfa_97s = "\1\176\1\0\41\uffff";
    static final String dfa_98s = "\2\uffff\1\1\1\2\37\uffff";
    static final String dfa_99s = "\1\0\1\1\41\uffff}>";
    static final String[] dfa_100s = {
            "\3\3\1\uffff\4\3\2\uffff\1\3\4\uffff\2\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\2\3\7\uffff\1\3\2\uffff\1\3\3\uffff\1\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\3\uffff\2\3\1\uffff\2\3\23\uffff\1\3\3\uffff\1\3\22\uffff\2\3\1\2\2\uffff\1\1\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_95;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "7241:2: ( ( ( ( norm1_BindingPattern ) )=> (lv_bindingPattern_0_0= norm1_BindingPattern ) ) | ( ( (lv_annotations_1_0= ruleAnnotation ) )* (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )? ( (lv_variadic_3_0= FullStopFullStopFullStop ) )? ( (lv_name_4_0= norm1_BindingIdentifier ) ) (this_ColonSepTypeRef_5= ruleColonSepTypeRef[$current] )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA151_0 = input.LA(1);

                         
                        int index151_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA151_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA151_0==LeftSquareBracket) && (synpred68_InternalN4JSXParser())) {s = 2;}

                        else if ( ((LA151_0>=Intersection && LA151_0<=Implements)||(LA151_0>=Promisify && LA151_0<=Abstract)||LA151_0==External||(LA151_0>=Private && LA151_0<=Project)||LA151_0==Public||LA151_0==Static||LA151_0==Target||(LA151_0>=Async && LA151_0<=Await)||LA151_0==Union||LA151_0==This||LA151_0==From||LA151_0==This_1||(LA151_0>=Type && LA151_0<=Void)||LA151_0==FullStopFullStopFullStop||(LA151_0>=Get && LA151_0<=Let)||(LA151_0>=Out && LA151_0<=Set)||LA151_0==As||LA151_0==Of||(LA151_0>=QuestionMark && LA151_0<=CommercialAt)||LA151_0==Tilde||LA151_0==RULE_IDENTIFIER) ) {s = 3;}

                         
                        input.seek(index151_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA151_1 = input.LA(1);

                         
                        int index151_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index151_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 151, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_101s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\2\uffff\1\13\3\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\3\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\1\1\3\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\1\uffff\1\13\1\uffff\1\1\1\13\1\uffff\1\1\24\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            "\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\6\uffff\1\1",
            ""
    };
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "7282:3: (this_BogusTypeRefFragment_2= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_102s = "\121\uffff";
    static final String dfa_103s = "\1\4\13\0\1\uffff\1\0\1\uffff\22\0\60\uffff";
    static final String dfa_104s = "\1\u0095\13\0\1\uffff\1\0\1\uffff\22\0\60\uffff";
    static final String dfa_105s = "\14\uffff\1\3\1\uffff\1\4\22\uffff\1\6\40\uffff\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\2\1\5";
    static final String dfa_106s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\60\uffff}>";
    static final String[] dfa_107s = {
            "\1\32\1\25\1\36\1\uffff\1\34\1\37\1\4\1\7\1\106\1\115\1\6\1\13\3\uffff\1\2\1\3\1\41\2\uffff\1\5\1\110\1\10\1\112\1\27\1\41\1\12\1\35\1\107\1\uffff\1\41\1\11\2\41\1\113\1\31\1\103\1\20\1\33\3\uffff\1\24\3\41\1\30\1\41\1\111\4\uffff\1\103\1\21\1\15\1\41\1\40\1\22\1\114\1\14\5\uffff\1\41\1\uffff\1\41\1\uffff\1\41\7\uffff\1\23\1\103\1\102\1\uffff\1\26\2\uffff\1\41\2\uffff\1\41\1\uffff\2\41\1\uffff\1\41\1\uffff\1\41\1\uffff\1\16\1\41\3\uffff\2\41\2\uffff\1\1\2\uffff\1\41\3\uffff\1\41\1\uffff\4\41\1\uffff\1\41\1\uffff\1\17\2\uffff\1\41\11\uffff\2\41\10\uffff\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final char[] dfa_103 = DFA.unpackEncodedStringToUnsignedChars(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[][] dfa_107 = unpackEncodedStringArray(dfa_107s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_103;
            this.max = dfa_104;
            this.accept = dfa_105;
            this.special = dfa_106;
            this.transition = dfa_107;
        }
        public String getDescription() {
            return "7559:1: ( ( ( ( () LeftCurlyBracket ) )=>this_Block_0= ruleBlock ) | ( ( ( () ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=>this_FunctionDeclaration_1= ruleFunctionDeclaration ) | ( ( ( () ( ( ruleVariableStatementKeyword ) ) ) )=>this_VariableStatement_2= norm1_VariableStatement ) | this_EmptyStatement_3= ruleEmptyStatement | ( ( ( ( ( ruleBindingIdentifier ) ) Colon ) )=>this_LabelledStatement_4= ruleLabelledStatement ) | this_ExpressionStatement_5= ruleExpressionStatement | this_IfStatement_6= ruleIfStatement | this_IterationStatement_7= ruleIterationStatement | this_ContinueStatement_8= ruleContinueStatement | this_BreakStatement_9= ruleBreakStatement | this_ReturnStatement_10= ruleReturnStatement | this_WithStatement_11= ruleWithStatement | this_SwitchStatement_12= ruleSwitchStatement | this_ThrowStatement_13= ruleThrowStatement | this_TryStatement_14= ruleTryStatement | this_DebuggerStatement_15= ruleDebuggerStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_0 = input.LA(1);

                         
                        int index155_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA155_0>=10 && LA155_0<=110 && (s=T2S.M_3[LA155_0-(10)])>=0)) { /* 11 cases */ }
                        else if ( (LA155_0==Var) && (synpred73_InternalN4JSXParser())) {s = 12;}

                        
                        else if ((LA155_0>=4 && LA155_0<=126 && (s=T2S.M_4[LA155_0-(4)])>=0)) { /* 21 cases */ }
                        else if ( (LA155_0==Delete||LA155_0==Typeof||LA155_0==Class||(LA155_0>=False && LA155_0<=Super)||(LA155_0>=Null && LA155_0<=True)||LA155_0==Void||LA155_0==New||LA155_0==PlusSignPlusSign||LA155_0==HyphenMinusHyphenMinus||LA155_0==SolidusEqualsSign||LA155_0==ExclamationMark||LA155_0==LeftParenthesis||(LA155_0>=Asterisk && LA155_0<=PlusSign)||LA155_0==HyphenMinus||LA155_0==Solidus||LA155_0==LessThanSign||(LA155_0>=CommercialAt && LA155_0<=LeftSquareBracket)||LA155_0==Tilde||LA155_0==RULE_DOUBLE||(LA155_0>=RULE_HEX_INT && LA155_0<=RULE_LEGACY_OCTAL_INT)||LA155_0==RULE_SCIENTIFIC_INT||LA155_0==RULE_STRING||(LA155_0>=RULE_TEMPLATE_HEAD && LA155_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA155_0==RULE_INT) ) {s = 33;}

                        else if ( (LA155_0==If) ) {s = 66;}

                        else if ( (LA155_0==While||LA155_0==For||LA155_0==Do) ) {s = 67;}

                        else if ( (LA155_0==Continue) ) {s = 70;}

                        else if ( (LA155_0==Break) ) {s = 71;}

                        else if ( (LA155_0==Return) ) {s = 72;}

                        else if ( (LA155_0==With) ) {s = 73;}

                        else if ( (LA155_0==Switch) ) {s = 74;}

                        else if ( (LA155_0==Throw) ) {s = 75;}

                        else if ( (LA155_0==Try) ) {s = 76;}

                        else if ( (LA155_0==Debugger) ) {s = 77;}

                         
                        input.seek(index155_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA155_1 = input.LA(1);

                         
                        int index155_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA155_2 = input.LA(1);

                         
                        int index155_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA155_3 = input.LA(1);

                         
                        int index155_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA155_4 = input.LA(1);

                         
                        int index155_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA155_5 = input.LA(1);

                         
                        int index155_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA155_6 = input.LA(1);

                         
                        int index155_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA155_7 = input.LA(1);

                         
                        int index155_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA155_8 = input.LA(1);

                         
                        int index155_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA155_9 = input.LA(1);

                         
                        int index155_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred73_InternalN4JSXParser()) ) {s = 12;}

                         
                        input.seek(index155_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA155_10 = input.LA(1);

                         
                        int index155_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA155_11 = input.LA(1);

                         
                        int index155_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA155_13 = input.LA(1);

                         
                        int index155_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA155_15 = input.LA(1);

                         
                        int index155_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA155_16 = input.LA(1);

                         
                        int index155_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA155_17 = input.LA(1);

                         
                        int index155_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA155_18 = input.LA(1);

                         
                        int index155_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA155_19 = input.LA(1);

                         
                        int index155_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA155_20 = input.LA(1);

                         
                        int index155_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA155_21 = input.LA(1);

                         
                        int index155_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA155_22 = input.LA(1);

                         
                        int index155_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA155_23 = input.LA(1);

                         
                        int index155_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA155_24 = input.LA(1);

                         
                        int index155_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA155_25 = input.LA(1);

                         
                        int index155_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA155_26 = input.LA(1);

                         
                        int index155_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA155_27 = input.LA(1);

                         
                        int index155_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA155_28 = input.LA(1);

                         
                        int index155_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA155_29 = input.LA(1);

                         
                        int index155_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA155_30 = input.LA(1);

                         
                        int index155_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA155_31 = input.LA(1);

                         
                        int index155_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA155_32 = input.LA(1);

                         
                        int index155_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index155_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_108s = "\1\4\13\0\1\uffff\1\0\1\uffff\21\0\61\uffff";
    static final String dfa_109s = "\1\u0095\13\0\1\uffff\1\0\1\uffff\21\0\61\uffff";
    static final String dfa_110s = "\14\uffff\1\3\1\uffff\1\4\21\uffff\1\6\41\uffff\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\2\1\5";
    static final String dfa_111s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\14\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\61\uffff}>";
    static final String[] dfa_112s = {
            "\1\31\1\24\1\35\1\uffff\1\33\1\36\1\4\1\7\1\106\1\115\1\6\1\13\3\uffff\1\2\1\3\1\40\2\uffff\1\5\1\110\1\10\1\112\1\26\1\40\1\12\1\34\1\107\1\uffff\1\40\1\11\2\40\1\113\1\30\1\103\1\40\1\32\3\uffff\1\23\3\40\1\27\1\40\1\111\4\uffff\1\103\1\20\1\15\1\40\1\37\1\21\1\114\1\14\5\uffff\1\40\1\uffff\1\40\1\uffff\1\40\7\uffff\1\22\1\103\1\102\1\uffff\1\25\2\uffff\1\40\2\uffff\1\40\1\uffff\2\40\1\uffff\1\40\1\uffff\1\40\1\uffff\1\16\1\40\3\uffff\2\40\2\uffff\1\1\2\uffff\1\40\3\uffff\1\40\1\uffff\4\40\1\uffff\1\40\1\uffff\1\17\2\uffff\1\40\11\uffff\2\40\10\uffff\1\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "7752:1: ( ( ( ( () LeftCurlyBracket ) )=>this_Block_0= norm1_Block ) | ( ( ( () ( ( ruleN4Modifier ) )* ruleAsyncNoTrailingLineBreak[null] Function ) )=>this_FunctionDeclaration_1= norm1_FunctionDeclaration ) | ( ( ( () ( ( ruleVariableStatementKeyword ) ) ) )=>this_VariableStatement_2= norm3_VariableStatement ) | this_EmptyStatement_3= ruleEmptyStatement | ( ( ( ( ( norm1_BindingIdentifier ) ) Colon ) )=>this_LabelledStatement_4= norm1_LabelledStatement ) | this_ExpressionStatement_5= norm1_ExpressionStatement | this_IfStatement_6= norm1_IfStatement | this_IterationStatement_7= norm1_IterationStatement | this_ContinueStatement_8= norm1_ContinueStatement | this_BreakStatement_9= norm1_BreakStatement | this_ReturnStatement_10= norm1_ReturnStatement | this_WithStatement_11= norm1_WithStatement | this_SwitchStatement_12= norm1_SwitchStatement | this_ThrowStatement_13= norm1_ThrowStatement | this_TryStatement_14= norm1_TryStatement | this_DebuggerStatement_15= ruleDebuggerStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_0 = input.LA(1);

                         
                        int index156_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA156_0>=10 && LA156_0<=110 && (s=T2S.M_3[LA156_0-(10)])>=0)) { /* 11 cases */ }
                        else if ( (LA156_0==Var) && (synpred77_InternalN4JSXParser())) {s = 12;}

                        
                        else if ((LA156_0>=4 && LA156_0<=126 && (s=T2S.M_6[LA156_0-(4)])>=0)) { /* 20 cases */ }
                        else if ( (LA156_0==Delete||LA156_0==Typeof||LA156_0==Class||(LA156_0>=False && LA156_0<=Super)||LA156_0==Yield||(LA156_0>=Null && LA156_0<=True)||LA156_0==Void||LA156_0==New||LA156_0==PlusSignPlusSign||LA156_0==HyphenMinusHyphenMinus||LA156_0==SolidusEqualsSign||LA156_0==ExclamationMark||LA156_0==LeftParenthesis||(LA156_0>=Asterisk && LA156_0<=PlusSign)||LA156_0==HyphenMinus||LA156_0==Solidus||LA156_0==LessThanSign||(LA156_0>=CommercialAt && LA156_0<=LeftSquareBracket)||LA156_0==Tilde||LA156_0==RULE_DOUBLE||(LA156_0>=RULE_HEX_INT && LA156_0<=RULE_LEGACY_OCTAL_INT)||LA156_0==RULE_SCIENTIFIC_INT||LA156_0==RULE_STRING||(LA156_0>=RULE_TEMPLATE_HEAD && LA156_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA156_0==RULE_INT) ) {s = 32;}

                        else if ( (LA156_0==If) ) {s = 66;}

                        else if ( (LA156_0==While||LA156_0==For||LA156_0==Do) ) {s = 67;}

                        else if ( (LA156_0==Continue) ) {s = 70;}

                        else if ( (LA156_0==Break) ) {s = 71;}

                        else if ( (LA156_0==Return) ) {s = 72;}

                        else if ( (LA156_0==With) ) {s = 73;}

                        else if ( (LA156_0==Switch) ) {s = 74;}

                        else if ( (LA156_0==Throw) ) {s = 75;}

                        else if ( (LA156_0==Try) ) {s = 76;}

                        else if ( (LA156_0==Debugger) ) {s = 77;}

                         
                        input.seek(index156_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_1 = input.LA(1);

                         
                        int index156_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_2 = input.LA(1);

                         
                        int index156_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA156_3 = input.LA(1);

                         
                        int index156_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA156_4 = input.LA(1);

                         
                        int index156_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA156_5 = input.LA(1);

                         
                        int index156_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA156_6 = input.LA(1);

                         
                        int index156_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA156_7 = input.LA(1);

                         
                        int index156_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA156_8 = input.LA(1);

                         
                        int index156_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA156_9 = input.LA(1);

                         
                        int index156_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred77_InternalN4JSXParser()) ) {s = 12;}

                         
                        input.seek(index156_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA156_10 = input.LA(1);

                         
                        int index156_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA156_11 = input.LA(1);

                         
                        int index156_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA156_13 = input.LA(1);

                         
                        int index156_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalN4JSXParser()) ) {s = 12;}

                        else if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA156_15 = input.LA(1);

                         
                        int index156_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA156_16 = input.LA(1);

                         
                        int index156_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA156_17 = input.LA(1);

                         
                        int index156_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA156_18 = input.LA(1);

                         
                        int index156_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA156_19 = input.LA(1);

                         
                        int index156_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA156_20 = input.LA(1);

                         
                        int index156_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA156_21 = input.LA(1);

                         
                        int index156_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA156_22 = input.LA(1);

                         
                        int index156_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA156_23 = input.LA(1);

                         
                        int index156_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA156_24 = input.LA(1);

                         
                        int index156_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA156_25 = input.LA(1);

                         
                        int index156_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA156_26 = input.LA(1);

                         
                        int index156_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA156_27 = input.LA(1);

                         
                        int index156_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA156_28 = input.LA(1);

                         
                        int index156_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA156_29 = input.LA(1);

                         
                        int index156_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA156_30 = input.LA(1);

                         
                        int index156_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA156_31 = input.LA(1);

                         
                        int index156_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred78_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index156_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_113s = "\117\uffff";
    static final String dfa_114s = "\1\4\1\0\115\uffff";
    static final String dfa_115s = "\1\u0095\1\0\115\uffff";
    static final String dfa_116s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_117s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_118s = {
            "\3\2\1\uffff\10\2\3\uffff\3\2\2\uffff\11\2\1\uffff\11\2\3\uffff\7\2\4\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\3\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\1\1\1\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "7953:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedFunctionDeclaration_0= ruleAnnotatedFunctionDeclaration ) | this_RootStatement_1= ruleRootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_1 = input.LA(1);

                         
                        int index157_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index157_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "7994:1: ( ( ( ( () CommercialAt ( This | Target | RULE_IDENTIFIER ) ) )=>this_AnnotatedFunctionDeclaration_0= norm1_AnnotatedFunctionDeclaration ) | this_RootStatement_1= norm1_RootStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_1 = input.LA(1);

                         
                        int index158_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index158_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "()* loopback of 8235:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }
    static final String dfa_119s = "\35\uffff";
    static final String dfa_120s = "\1\4\34\uffff";
    static final String dfa_121s = "\1\176\34\uffff";
    static final String dfa_122s = "\1\uffff\33\2\1\1";
    static final String dfa_123s = "\1\0\34\uffff}>";
    static final String[] dfa_124s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\3\uffff\1\17\7\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\23\uffff\1\34\23\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()* loopback of 9223:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA173_0 = input.LA(1);

                         
                        int index173_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA173_0>=4 && LA173_0<=126 && (s=T2S.M_7[LA173_0-(4)])>=0) && (synpred97_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA173_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index173_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 173, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()* loopback of 9299:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA175_0 = input.LA(1);

                         
                        int index175_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA175_0>=4 && LA175_0<=126 && (s=T2S.M_7[LA175_0-(4)])>=0) && (synpred98_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA175_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index175_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 175, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_125s = "\34\uffff";
    static final String dfa_126s = "\1\4\33\uffff";
    static final String dfa_127s = "\1\176\33\uffff";
    static final String dfa_128s = "\1\uffff\32\2\1\1";
    static final String dfa_129s = "\1\0\33\uffff}>";
    static final String[] dfa_130s = {
            "\1\20\1\13\1\25\1\uffff\1\22\1\26\1\30\1\7\2\uffff\1\6\4\uffff\1\27\1\5\3\uffff\1\31\1\uffff\1\10\1\uffff\1\15\1\uffff\1\24\1\23\7\uffff\1\17\2\uffff\1\21\3\uffff\1\12\3\uffff\1\16\7\uffff\1\2\1\4\1\uffff\1\32\1\3\23\uffff\1\11\3\uffff\1\14\23\uffff\1\33\23\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "()* loopback of 9375:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_0 = input.LA(1);

                         
                        int index177_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA177_0>=4 && LA177_0<=126 && (s=T2S.M_9[LA177_0-(4)])>=0) && (synpred99_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA177_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index177_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "()* loopback of 9451:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_0 = input.LA(1);

                         
                        int index179_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA179_0>=4 && LA179_0<=126 && (s=T2S.M_9[LA179_0-(4)])>=0) && (synpred100_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA179_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index179_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()* loopback of 9527:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA181_0 = input.LA(1);

                         
                        int index181_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA181_0>=4 && LA181_0<=126 && (s=T2S.M_7[LA181_0-(4)])>=0) && (synpred101_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA181_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index181_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 181, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()* loopback of 9615:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA184_0 = input.LA(1);

                         
                        int index184_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA184_0>=4 && LA184_0<=126 && (s=T2S.M_7[LA184_0-(4)])>=0) && (synpred102_InternalN4JSXParser())) { /* 27 cases */ }
                        else if ( (LA184_0==CommercialAt) ) {s = 28;}

                         
                        input.seek(index184_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 184, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "()* loopback of 9703:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA187_0 = input.LA(1);

                         
                        int index187_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA187_0>=4 && LA187_0<=126 && (s=T2S.M_9[LA187_0-(4)])>=0) && (synpred103_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA187_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index187_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 187, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "()* loopback of 9791:2: ( (lv_annotations_0_0= ruleAnnotation ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA190_0 = input.LA(1);

                         
                        int index190_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA190_0>=4 && LA190_0<=126 && (s=T2S.M_9[LA190_0-(4)])>=0) && (synpred104_InternalN4JSXParser())) { /* 26 cases */ }
                        else if ( (LA190_0==CommercialAt) ) {s = 27;}

                         
                        input.seek(index190_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 190, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_131s = "\1\4\1\1\1\0\1\2\2\uffff\1\3\125\uffff}>";
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_131;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "10613:1: ( ( ruleSemi )=> ruleSemi )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_2 = input.LA(1);

                         
                        int index199_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA199_2==EOF) ) {s = 6;}

                        
                        else if ((LA199_2>=-1 && LA199_2<=149 && (s=T2S.M_2[LA199_2-(-1)])>=0) && (synpred111_InternalN4JSXParser())) { /* 85 cases */ }
                        input.seek(index199_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA199_1 = input.LA(1);

                         
                        int index199_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalN4JSXParser()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index199_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA199_3 = input.LA(1);

                         
                        int index199_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred111_InternalN4JSXParser()) ) {s = 90;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index199_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA199_6 = input.LA(1);

                         
                        int index199_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA199_6==EOF) && (synpred111_InternalN4JSXParser())) {s = 91;}

                         
                        input.seek(index199_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA199_0 = input.LA(1);

                         
                        int index199_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA199_0==Semicolon) ) {s = 1;}

                        else if ( (LA199_0==EOF) ) {s = 2;}

                        else if ( (LA199_0==RightCurlyBracket) ) {s = 3;}

                        else if ( (LA199_0==RULE_ML_COMMENT||LA199_0==RULE_EOL) && (synpred111_InternalN4JSXParser())) {s = 4;}

                        else if ( ((LA199_0>=Intersection && LA199_0<=Implements)||(LA199_0>=Promisify && LA199_0<=Default)||(LA199_0>=Private && LA199_0<=Break)||(LA199_0>=Class && LA199_0<=With)||(LA199_0>=For && LA199_0<=Var)||LA199_0==PlusSignPlusSign||LA199_0==HyphenMinusHyphenMinus||LA199_0==SolidusEqualsSign||(LA199_0>=As && LA199_0<=If)||LA199_0==Of||LA199_0==ExclamationMark||LA199_0==LeftParenthesis||(LA199_0>=Asterisk && LA199_0<=PlusSign)||LA199_0==HyphenMinus||LA199_0==Solidus||LA199_0==LessThanSign||(LA199_0>=CommercialAt && LA199_0<=LeftSquareBracket)||LA199_0==LeftCurlyBracket||LA199_0==Tilde||LA199_0==RULE_DOUBLE||(LA199_0>=RULE_HEX_INT && LA199_0<=RULE_LEGACY_OCTAL_INT)||LA199_0==RULE_SCIENTIFIC_INT||LA199_0==RULE_IDENTIFIER||LA199_0==RULE_STRING||(LA199_0>=RULE_TEMPLATE_HEAD && LA199_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA199_0==RULE_INT) ) {s = 5;}

                         
                        input.seek(index199_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_132s = "\103\uffff";
    static final String dfa_133s = "\1\4\1\0\101\uffff";
    static final String dfa_134s = "\1\u0095\1\0\101\uffff";
    static final String dfa_135s = "\2\uffff\1\2\77\uffff\1\1";
    static final String dfa_136s = "\1\uffff\1\0\101\uffff}>";
    static final String[] dfa_137s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\4\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\6\uffff\1\2\1\1\3\2\1\uffff\1\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff\2\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA218 extends DFA {

        public DFA218(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 218;
            this.eot = dfa_132;
            this.eof = dfa_132;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "10871:1: ( ( ( ( ( ( ruleLetIdentifierRef ) ) ( ( In ) ) ( ( norm1_Expression ) ) RightParenthesis ) )=> ( ( (lv_initExpr_3_0= ruleLetIdentifierRef ) ) ( (lv_forIn_4_0= In ) ) ( (lv_expression_5_0= norm1_Expression ) ) otherlv_6= RightParenthesis ) ) | ( ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= ruleExpression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm1_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm1_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm1_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm1_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm1_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm1_Expression ) )? ) ) otherlv_36= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA218_1 = input.LA(1);

                         
                        int index218_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred113_InternalN4JSXParser()) ) {s = 66;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index218_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 218, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_138s = "\1\4\2\uffff\1\0\76\uffff";
    static final String dfa_139s = "\1\u0095\2\uffff\1\0\76\uffff";
    static final String dfa_140s = "\1\uffff\2\1\1\uffff\1\2\74\uffff\1\3";
    static final String dfa_141s = "\1\0\2\uffff\1\1\76\uffff}>";
    static final String[] dfa_142s = {
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\2\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\6\uffff\1\4\1\3\3\4\1\uffff\1\1\5\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\101\1\4\3\uffff\2\4\2\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[][] dfa_142 = unpackEncodedStringArray(dfa_142s);

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_138;
            this.max = dfa_139;
            this.accept = dfa_140;
            this.special = dfa_141;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "10946:7: ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= ruleExpression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm1_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm1_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm1_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm1_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm1_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm1_Expression ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA217_0 = input.LA(1);

                         
                        int index217_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA217_0==Var) && (synpred114_InternalN4JSXParser())) {s = 1;}

                        else if ( (LA217_0==Const) && (synpred114_InternalN4JSXParser())) {s = 2;}

                        else if ( (LA217_0==Let) ) {s = 3;}

                        else if ( ((LA217_0>=Intersection && LA217_0<=Implements)||(LA217_0>=Promisify && LA217_0<=Abstract)||(LA217_0>=External && LA217_0<=Function)||(LA217_0>=Private && LA217_0<=Delete)||LA217_0==Public||LA217_0==Static||(LA217_0>=Target && LA217_0<=Await)||LA217_0==Class||(LA217_0>=False && LA217_0<=Super)||LA217_0==Union||(LA217_0>=Yield && LA217_0<=This)||(LA217_0>=From && LA217_0<=Void)||LA217_0==Get||(LA217_0>=New && LA217_0<=Set)||LA217_0==PlusSignPlusSign||LA217_0==HyphenMinusHyphenMinus||LA217_0==SolidusEqualsSign||LA217_0==As||LA217_0==Of||LA217_0==ExclamationMark||LA217_0==LeftParenthesis||(LA217_0>=Asterisk && LA217_0<=PlusSign)||LA217_0==HyphenMinus||LA217_0==Solidus||LA217_0==LessThanSign||(LA217_0>=CommercialAt && LA217_0<=LeftSquareBracket)||LA217_0==LeftCurlyBracket||LA217_0==Tilde||LA217_0==RULE_DOUBLE||(LA217_0>=RULE_HEX_INT && LA217_0<=RULE_LEGACY_OCTAL_INT)||LA217_0==RULE_SCIENTIFIC_INT||LA217_0==RULE_IDENTIFIER||LA217_0==RULE_STRING||(LA217_0>=RULE_TEMPLATE_HEAD && LA217_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA217_0==RULE_INT) ) {s = 4;}

                        else if ( (LA217_0==Semicolon) ) {s = 65;}

                         
                        input.seek(index217_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA217_3 = input.LA(1);

                         
                        int index217_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index217_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 217, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_143s = "\40\uffff";
    static final String dfa_144s = "\1\4\33\125\1\uffff\2\0\1\uffff";
    static final String dfa_145s = "\1\176\33\147\1\uffff\2\0\1\uffff";
    static final String dfa_146s = "\34\uffff\1\2\2\uffff\1\1";
    static final String dfa_147s = "\35\uffff\1\1\1\0\1\uffff}>";
    static final String[] dfa_148s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\3\uffff\1\17\7\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\23\uffff\2\34\2\uffff\1\34\17\uffff\1\1",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "\1\35\1\36\11\uffff\1\34\3\uffff\2\34\1\uffff\1\34",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[][] dfa_148 = unpackEncodedStringArray(dfa_148s);

    class DFA209 extends DFA {

        public DFA209(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 209;
            this.eot = dfa_143;
            this.eof = dfa_143;
            this.min = dfa_144;
            this.max = dfa_145;
            this.accept = dfa_146;
            this.special = dfa_147;
            this.transition = dfa_148;
        }
        public String getDescription() {
            return "10970:2: ( ( ( ( ( ( ruleBindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= ruleBindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm4_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= ruleVariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm1_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm1_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm1_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm1_AssignmentExpression ) )? ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA209_30 = input.LA(1);

                         
                        int index209_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 31;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index209_30);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA209_29 = input.LA(1);

                         
                        int index209_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred115_InternalN4JSXParser()) ) {s = 31;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index209_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 209, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_149s = "\1\4\77\uffff";
    static final String dfa_150s = "\1\u0095\77\uffff";
    static final String dfa_151s = "\1\uffff\76\1\1\2";
    static final String dfa_152s = "\1\0\77\uffff}>";
    static final String[] dfa_153s = {
            "\1\26\1\21\1\31\1\uffff\1\30\1\32\1\34\1\15\2\uffff\1\14\1\62\3\uffff\1\33\1\13\1\66\2\uffff\1\35\1\uffff\1\16\1\uffff\1\23\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\25\1\uffff\1\7\1\27\3\uffff\1\20\1\55\1\40\1\52\1\24\1\67\6\uffff\1\10\1\12\1\37\1\36\1\11\7\uffff\1\71\1\uffff\1\72\1\uffff\1\57\7\uffff\1\17\3\uffff\1\22\2\uffff\1\76\2\uffff\1\3\1\77\1\5\1\73\1\uffff\1\74\1\uffff\1\56\2\uffff\1\42\3\uffff\1\2\1\60\2\uffff\1\61\2\uffff\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[][] dfa_153 = unpackEncodedStringArray(dfa_153s);

    class DFA202 extends DFA {

        public DFA202(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 202;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_149;
            this.max = dfa_150;
            this.accept = dfa_151;
            this.special = dfa_152;
            this.transition = dfa_153;
        }
        public String getDescription() {
            return "11203:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm1_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA202_0 = input.LA(1);

                         
                        int index202_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA202_0>=4 && LA202_0<=149 && (s=T2S.M_16[LA202_0-(4)])>=0) && (synpred116_InternalN4JSXParser())) { /* 62 cases */ }
                        else if ( (LA202_0==RightParenthesis) ) {s = 63;}

                         
                        input.seek(index202_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 202, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA236 extends DFA {

        public DFA236(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 236;
            this.eot = dfa_132;
            this.eof = dfa_132;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "11715:1: ( ( ( ( ( ( ruleLetIdentifierRef ) ) ( ( In ) ) ( ( norm3_Expression ) ) RightParenthesis ) )=> ( ( (lv_initExpr_3_0= ruleLetIdentifierRef ) ) ( (lv_forIn_4_0= In ) ) ( (lv_expression_5_0= norm3_Expression ) ) otherlv_6= RightParenthesis ) ) | ( ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= norm2_Expression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm3_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm3_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm3_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm3_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm3_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm3_Expression ) )? ) ) otherlv_36= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA236_1 = input.LA(1);

                         
                        int index236_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalN4JSXParser()) ) {s = 66;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index236_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 236, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA235 extends DFA {

        public DFA235(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 235;
            this.eot = dfa_30;
            this.eof = dfa_30;
            this.min = dfa_138;
            this.max = dfa_139;
            this.accept = dfa_140;
            this.special = dfa_141;
            this.transition = dfa_142;
        }
        public String getDescription() {
            return "11790:7: ( ( ( ( Var | Const | Let )=> (lv_varStmtKeyword_7_0= ruleVariableStatementKeyword ) ) ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) ) ) | ( ( (lv_initExpr_23_0= norm2_Expression ) ) ( (otherlv_24= Semicolon ( (lv_expression_25_0= norm3_Expression ) )? otherlv_26= Semicolon ( (lv_updateExpr_27_0= norm3_Expression ) )? ) | ( ( (lv_forIn_28_0= In ) ) ( (lv_expression_29_0= norm3_Expression ) )? ) | ( ( (lv_forOf_30_0= Of ) ) ( (lv_expression_31_0= norm3_AssignmentExpression ) )? ) ) ) | (otherlv_32= Semicolon ( (lv_expression_33_0= norm3_Expression ) )? otherlv_34= Semicolon ( (lv_updateExpr_35_0= norm3_Expression ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA235_0 = input.LA(1);

                         
                        int index235_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA235_0==Var) && (synpred118_InternalN4JSXParser())) {s = 1;}

                        else if ( (LA235_0==Const) && (synpred118_InternalN4JSXParser())) {s = 2;}

                        else if ( (LA235_0==Let) ) {s = 3;}

                        else if ( ((LA235_0>=Intersection && LA235_0<=Implements)||(LA235_0>=Promisify && LA235_0<=Abstract)||(LA235_0>=External && LA235_0<=Function)||(LA235_0>=Private && LA235_0<=Delete)||LA235_0==Public||LA235_0==Static||(LA235_0>=Target && LA235_0<=Await)||LA235_0==Class||(LA235_0>=False && LA235_0<=Super)||LA235_0==Union||(LA235_0>=Yield && LA235_0<=This)||(LA235_0>=From && LA235_0<=Void)||LA235_0==Get||(LA235_0>=New && LA235_0<=Set)||LA235_0==PlusSignPlusSign||LA235_0==HyphenMinusHyphenMinus||LA235_0==SolidusEqualsSign||LA235_0==As||LA235_0==Of||LA235_0==ExclamationMark||LA235_0==LeftParenthesis||(LA235_0>=Asterisk && LA235_0<=PlusSign)||LA235_0==HyphenMinus||LA235_0==Solidus||LA235_0==LessThanSign||(LA235_0>=CommercialAt && LA235_0<=LeftSquareBracket)||LA235_0==LeftCurlyBracket||LA235_0==Tilde||LA235_0==RULE_DOUBLE||(LA235_0>=RULE_HEX_INT && LA235_0<=RULE_LEGACY_OCTAL_INT)||LA235_0==RULE_SCIENTIFIC_INT||LA235_0==RULE_IDENTIFIER||LA235_0==RULE_STRING||(LA235_0>=RULE_TEMPLATE_HEAD && LA235_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA235_0==RULE_INT) ) {s = 4;}

                        else if ( (LA235_0==Semicolon) ) {s = 65;}

                         
                        input.seek(index235_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA235_3 = input.LA(1);

                         
                        int index235_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred118_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index235_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 235, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_154s = "\37\uffff";
    static final String dfa_155s = "\1\4\32\125\1\uffff\2\0\1\uffff";
    static final String dfa_156s = "\1\176\32\147\1\uffff\2\0\1\uffff";
    static final String dfa_157s = "\33\uffff\1\2\2\uffff\1\1";
    static final String dfa_158s = "\34\uffff\1\1\1\0\1\uffff}>";
    static final String[] dfa_159s = {
            "\1\20\1\13\1\25\1\uffff\1\22\1\26\1\30\1\7\2\uffff\1\6\4\uffff\1\27\1\5\3\uffff\1\31\1\uffff\1\10\1\uffff\1\15\1\uffff\1\24\1\23\7\uffff\1\17\2\uffff\1\21\3\uffff\1\12\3\uffff\1\16\7\uffff\1\2\1\4\1\uffff\1\32\1\3\23\uffff\1\11\3\uffff\1\14\23\uffff\2\33\2\uffff\1\33\17\uffff\1\1",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "\1\34\1\35\11\uffff\1\33\3\uffff\2\33\1\uffff\1\33",
            "",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[][] dfa_159 = unpackEncodedStringArray(dfa_159s);

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_154;
            this.eof = dfa_154;
            this.min = dfa_155;
            this.max = dfa_156;
            this.accept = dfa_157;
            this.special = dfa_158;
            this.transition = dfa_159;
        }
        public String getDescription() {
            return "11814:2: ( ( ( ( ( ( norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( ( In ) ) | ( ( Of ) ) ) ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )? ) )=> ( ( (lv_varDeclsOrBindings_8_0= norm2_BindingIdentifierAsVariableDeclaration ) ) ( ( (lv_forIn_9_0= In ) ) | ( (lv_forOf_10_0= Of ) ) ) ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )? ) ) | ( ( (lv_varDeclsOrBindings_12_0= norm6_VariableDeclarationOrBinding ) ) ( ( (otherlv_13= Comma ( (lv_varDeclsOrBindings_14_0= norm2_VariableDeclarationOrBinding ) ) )* otherlv_15= Semicolon ( (lv_expression_16_0= norm3_Expression ) )? otherlv_17= Semicolon ( (lv_updateExpr_18_0= norm3_Expression ) )? ) | ( ( (lv_forIn_19_0= In ) ) ( (lv_expression_20_0= norm3_Expression ) )? ) | ( ( (lv_forOf_21_0= Of ) ) ( (lv_expression_22_0= norm3_AssignmentExpression ) )? ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA227_29 = input.LA(1);

                         
                        int index227_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 30;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index227_29);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA227_28 = input.LA(1);

                         
                        int index227_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalN4JSXParser()) ) {s = 30;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index227_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 227, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_160s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\62\3\uffff\1\32\1\12\1\66\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\1\55\1\40\1\52\1\23\1\67\6\uffff\1\7\1\11\1\37\1\35\1\10\7\uffff\1\71\1\uffff\1\72\1\uffff\1\57\7\uffff\1\16\3\uffff\1\21\2\uffff\1\76\2\uffff\1\3\1\77\1\5\1\73\1\uffff\1\74\1\uffff\1\56\2\uffff\1\42\3\uffff\1\2\1\60\2\uffff\1\61\2\uffff\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_160 = unpackEncodedStringArray(dfa_160s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_149;
            this.max = dfa_150;
            this.accept = dfa_151;
            this.special = dfa_152;
            this.transition = dfa_160;
        }
        public String getDescription() {
            return "12047:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_11_0= norm3_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA220_0 = input.LA(1);

                         
                        int index220_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA220_0>=4 && LA220_0<=149 && (s=T2S.M_17[LA220_0-(4)])>=0) && (synpred120_InternalN4JSXParser())) { /* 62 cases */ }
                        else if ( (LA220_0==RightParenthesis) ) {s = 63;}

                         
                        input.seek(index220_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 220, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_161s = "\1\4\1\0\1\uffff\33\0\5\uffff";
    static final String dfa_162s = "\1\176\1\0\1\uffff\33\0\5\uffff";
    static final String dfa_163s = "\2\uffff\1\1\33\uffff\1\3\3\uffff\1\2";
    static final String dfa_164s = "\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\5\uffff}>";
    static final String[] dfa_165s = {
            "\1\23\1\16\1\30\1\uffff\1\25\1\31\1\33\1\12\2\uffff\1\11\4\uffff\1\32\1\10\3\uffff\1\34\1\uffff\1\13\1\uffff\1\20\1\uffff\1\27\1\26\7\uffff\1\22\1\uffff\1\4\1\24\3\uffff\1\15\1\uffff\1\36\1\uffff\1\21\1\36\6\uffff\1\5\1\7\1\uffff\1\35\1\6\23\uffff\1\14\3\uffff\1\17\22\uffff\1\36\1\uffff\1\2\2\uffff\1\1\2\uffff\1\36\14\uffff\1\3",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA258 extends DFA {

        public DFA258(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 258;
            this.eot = dfa_95;
            this.eof = dfa_95;
            this.min = dfa_161;
            this.max = dfa_162;
            this.accept = dfa_163;
            this.special = dfa_164;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "14172:1: ( ( ( ( ruleBindingPattern ) )=> (lv_bindingPattern_0_0= ruleBindingPattern ) ) | ( ( ( ( ( ruleBindingIdentifier ) ) Colon ) )=> ( ( (lv_name_1_0= ruleBindingIdentifier ) ) ( ( Colon )=>this_ColonSepTypeRef_2= ruleColonSepTypeRef[$current] ) ) ) | ( (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )? ( (lv_name_4_0= ruleBindingIdentifier ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA258_0 = input.LA(1);

                         
                        int index258_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA258_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA258_0==LeftSquareBracket) && (synpred127_InternalN4JSXParser())) {s = 2;}

                        
                        else if ((LA258_0>=4 && LA258_0<=126 && (s=T2S.M_18[LA258_0-(4)])>=0)) { /* 27 cases */ }
                        else if ( (LA258_0==This_1||LA258_0==Void||LA258_0==QuestionMark||LA258_0==Tilde) ) {s = 30;}

                         
                        input.seek(index258_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA258_1 = input.LA(1);

                         
                        int index258_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA258_3 = input.LA(1);

                         
                        int index258_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA258_4 = input.LA(1);

                         
                        int index258_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA258_5 = input.LA(1);

                         
                        int index258_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA258_6 = input.LA(1);

                         
                        int index258_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA258_7 = input.LA(1);

                         
                        int index258_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA258_8 = input.LA(1);

                         
                        int index258_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA258_9 = input.LA(1);

                         
                        int index258_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA258_10 = input.LA(1);

                         
                        int index258_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA258_11 = input.LA(1);

                         
                        int index258_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA258_12 = input.LA(1);

                         
                        int index258_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA258_13 = input.LA(1);

                         
                        int index258_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA258_14 = input.LA(1);

                         
                        int index258_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA258_15 = input.LA(1);

                         
                        int index258_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA258_16 = input.LA(1);

                         
                        int index258_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA258_17 = input.LA(1);

                         
                        int index258_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA258_18 = input.LA(1);

                         
                        int index258_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA258_19 = input.LA(1);

                         
                        int index258_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA258_20 = input.LA(1);

                         
                        int index258_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA258_21 = input.LA(1);

                         
                        int index258_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA258_22 = input.LA(1);

                         
                        int index258_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA258_23 = input.LA(1);

                         
                        int index258_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA258_24 = input.LA(1);

                         
                        int index258_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA258_25 = input.LA(1);

                         
                        int index258_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA258_26 = input.LA(1);

                         
                        int index258_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA258_27 = input.LA(1);

                         
                        int index258_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA258_28 = input.LA(1);

                         
                        int index258_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA258_29 = input.LA(1);

                         
                        int index258_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalN4JSXParser()) ) {s = 34;}

                        else if ( (true) ) {s = 30;}

                         
                        input.seek(index258_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 258, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_166s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            ""
    };
    static final short[][] dfa_166 = unpackEncodedStringArray(dfa_166s);

    class DFA257 extends DFA {

        public DFA257(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 257;
            this.eot = dfa_50;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_166;
        }
        public String getDescription() {
            return "14234:7: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_167s = "\42\uffff";
    static final String dfa_168s = "\1\4\1\0\1\uffff\32\0\5\uffff";
    static final String dfa_169s = "\1\176\1\0\1\uffff\32\0\5\uffff";
    static final String dfa_170s = "\2\uffff\1\1\32\uffff\1\3\3\uffff\1\2";
    static final String dfa_171s = "\1\0\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff}>";
    static final String[] dfa_172s = {
            "\1\22\1\15\1\27\1\uffff\1\24\1\30\1\32\1\11\2\uffff\1\10\4\uffff\1\31\1\7\3\uffff\1\33\1\uffff\1\12\1\uffff\1\17\1\uffff\1\26\1\25\7\uffff\1\21\2\uffff\1\23\3\uffff\1\14\1\uffff\1\35\1\uffff\1\20\1\35\6\uffff\1\4\1\6\1\uffff\1\34\1\5\23\uffff\1\13\3\uffff\1\16\22\uffff\1\35\1\uffff\1\2\2\uffff\1\1\2\uffff\1\35\14\uffff\1\3",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[][] dfa_172 = unpackEncodedStringArray(dfa_172s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_167;
            this.eof = dfa_167;
            this.min = dfa_168;
            this.max = dfa_169;
            this.accept = dfa_170;
            this.special = dfa_171;
            this.transition = dfa_172;
        }
        public String getDescription() {
            return "14277:1: ( ( ( ( norm1_BindingPattern ) )=> (lv_bindingPattern_0_0= norm1_BindingPattern ) ) | ( ( ( ( ( norm1_BindingIdentifier ) ) Colon ) )=> ( ( (lv_name_1_0= norm1_BindingIdentifier ) ) ( ( Colon )=>this_ColonSepTypeRef_2= ruleColonSepTypeRef[$current] ) ) ) | ( (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )? ( (lv_name_4_0= norm1_BindingIdentifier ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA260_0 = input.LA(1);

                         
                        int index260_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA260_0==LeftCurlyBracket) ) {s = 1;}

                        else if ( (LA260_0==LeftSquareBracket) && (synpred130_InternalN4JSXParser())) {s = 2;}

                        
                        else if ((LA260_0>=4 && LA260_0<=126 && (s=T2S.M_19[LA260_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA260_0==This_1||LA260_0==Void||LA260_0==QuestionMark||LA260_0==Tilde) ) {s = 29;}

                         
                        input.seek(index260_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA260_1 = input.LA(1);

                         
                        int index260_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalN4JSXParser()) ) {s = 2;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA260_3 = input.LA(1);

                         
                        int index260_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA260_4 = input.LA(1);

                         
                        int index260_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA260_5 = input.LA(1);

                         
                        int index260_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA260_6 = input.LA(1);

                         
                        int index260_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA260_7 = input.LA(1);

                         
                        int index260_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA260_8 = input.LA(1);

                         
                        int index260_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA260_9 = input.LA(1);

                         
                        int index260_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA260_10 = input.LA(1);

                         
                        int index260_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA260_11 = input.LA(1);

                         
                        int index260_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA260_12 = input.LA(1);

                         
                        int index260_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA260_13 = input.LA(1);

                         
                        int index260_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA260_14 = input.LA(1);

                         
                        int index260_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA260_15 = input.LA(1);

                         
                        int index260_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA260_16 = input.LA(1);

                         
                        int index260_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA260_17 = input.LA(1);

                         
                        int index260_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA260_18 = input.LA(1);

                         
                        int index260_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA260_19 = input.LA(1);

                         
                        int index260_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA260_20 = input.LA(1);

                         
                        int index260_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA260_21 = input.LA(1);

                         
                        int index260_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA260_22 = input.LA(1);

                         
                        int index260_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA260_23 = input.LA(1);

                         
                        int index260_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA260_24 = input.LA(1);

                         
                        int index260_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA260_25 = input.LA(1);

                         
                        int index260_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA260_26 = input.LA(1);

                         
                        int index260_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA260_27 = input.LA(1);

                         
                        int index260_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA260_28 = input.LA(1);

                         
                        int index260_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_InternalN4JSXParser()) ) {s = 33;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index260_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 260, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_173s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\22\uffff\1\1\4\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\6\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\6\uffff\1\13\1\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\24\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            "\1\13\20\uffff\1\1",
            ""
    };
    static final short[][] dfa_173 = unpackEncodedStringArray(dfa_173s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_173;
        }
        public String getDescription() {
            return "14339:7: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_174s = "\5\uffff";
    static final String dfa_175s = "\1\140\1\4\1\uffff\1\4\1\uffff";
    static final String dfa_176s = "\1\154\1\u0095\1\uffff\1\u0095\1\uffff";
    static final String dfa_177s = "\2\uffff\1\2\1\uffff\1\1";
    static final String dfa_178s = "\5\uffff}>";
    static final String[] dfa_179s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\2\uffff\1\4\3\uffff\5\4\7\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\3\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff\2\4\1\2\1\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\2\4\3\uffff\3\4\2\uffff\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\1\uffff\2\4\1\uffff\1\4\1\uffff\2\4\3\uffff\6\4\2\uffff\1\4\3\uffff\5\4\7\uffff\1\4\1\uffff\1\4\1\uffff\1\4\7\uffff\1\4\3\uffff\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff\2\4\1\3\1\4\1\uffff\1\4\2\uffff\1\4\3\uffff\2\4\1\2\1\uffff\1\4\2\uffff\1\4\3\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\4\11\uffff\2\4\10\uffff\1\4",
            ""
    };

    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final char[] dfa_175 = DFA.unpackEncodedStringToUnsignedChars(dfa_175s);
    static final char[] dfa_176 = DFA.unpackEncodedStringToUnsignedChars(dfa_176s);
    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[][] dfa_179 = unpackEncodedStringArray(dfa_179s);

    class DFA263 extends DFA {

        public DFA263(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 263;
            this.eot = dfa_174;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_176;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_179;
        }
        public String getDescription() {
            return "()* loopback of 14795:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleArrayPadding ) )* ( (lv_elements_6_0= ruleArrayElement ) ) )*";
        }
    }

    class DFA269 extends DFA {

        public DFA269(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 269;
            this.eot = dfa_174;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_176;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_179;
        }
        public String getDescription() {
            return "()* loopback of 14935:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleArrayPadding ) )* ( (lv_elements_6_0= norm1_ArrayElement ) ) )*";
        }
    }
    static final String dfa_180s = "\1\4\1\uffff\111\0\6\uffff";
    static final String dfa_181s = "\1\u0095\1\uffff\111\0\6\uffff";
    static final String dfa_182s = "\1\uffff\1\1\111\uffff\2\5\1\6\1\2\1\3\1\4";
    static final String dfa_183s = "\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\6\uffff}>";
    static final String[] dfa_184s = {
            "\1\16\1\13\1\76\1\43\1\5\1\77\1\101\1\70\1\25\1\26\1\67\1\37\1\27\1\34\1\35\1\100\1\66\1\30\1\33\1\41\1\102\1\45\1\71\1\47\1\6\1\52\1\75\1\4\1\20\1\22\1\23\1\24\1\61\1\46\1\50\1\15\1\54\1\56\1\3\1\21\1\32\1\62\1\73\1\57\1\11\1\60\1\12\1\2\1\55\4\uffff\1\36\1\63\1\65\1\44\1\103\1\64\1\51\1\53\21\uffff\1\72\1\31\1\40\1\42\1\74\5\uffff\1\115\1\uffff\1\114\7\uffff\1\113\2\uffff\1\17\1\1\1\112\2\uffff\1\14\2\uffff\1\10\3\uffff\1\105\1\uffff\1\110\1\uffff\1\107\2\uffff\1\111\1\uffff\1\7\2\uffff\1\104\23\uffff\1\106",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final char[] dfa_181 = DFA.unpackEncodedStringToUnsignedChars(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[] dfa_183 = DFA.unpackEncodedString(dfa_183s);
    static final short[][] dfa_184 = unpackEncodedStringArray(dfa_184s);

    class DFA281 extends DFA {

        public DFA281(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 281;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_180;
            this.max = dfa_181;
            this.accept = dfa_182;
            this.special = dfa_183;
            this.transition = dfa_184;
        }
        public String getDescription() {
            return "15340:1: (this_AnnotatedPropertyAssignment_0= ruleAnnotatedPropertyAssignment | ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=>this_PropertyNameValuePair_1= rulePropertyNameValuePair ) | ( ( ( () ruleGetterHeader[null] ) )=>this_PropertyGetterDeclaration_2= rulePropertyGetterDeclaration ) | ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_PropertySetterDeclaration_3= rulePropertySetterDeclaration ) | ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_PropertyMethodDeclaration_4= rulePropertyMethodDeclaration ) | this_PropertyNameValuePairSingleName_5= rulePropertyNameValuePairSingleName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA281_0 = input.LA(1);

                         
                        int index281_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA281_0>=4 && LA281_0<=149 && (s=T2S.M_20[LA281_0-(4)])>=0)) { /* 74 cases */ }
                        else if ( (LA281_0==LessThanSign) && (synpred138_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA281_0==Asterisk) && (synpred138_InternalN4JSXParser())) {s = 76;}

                        else if ( (LA281_0==LeftParenthesis) ) {s = 77;}

                         
                        input.seek(index281_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA281_2 = input.LA(1);

                         
                        int index281_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA281_3 = input.LA(1);

                         
                        int index281_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA281_4 = input.LA(1);

                         
                        int index281_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA281_5 = input.LA(1);

                         
                        int index281_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA281_6 = input.LA(1);

                         
                        int index281_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA281_7 = input.LA(1);

                         
                        int index281_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA281_8 = input.LA(1);

                         
                        int index281_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA281_9 = input.LA(1);

                         
                        int index281_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA281_10 = input.LA(1);

                         
                        int index281_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA281_11 = input.LA(1);

                         
                        int index281_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA281_12 = input.LA(1);

                         
                        int index281_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA281_13 = input.LA(1);

                         
                        int index281_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA281_14 = input.LA(1);

                         
                        int index281_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA281_15 = input.LA(1);

                         
                        int index281_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA281_16 = input.LA(1);

                         
                        int index281_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA281_17 = input.LA(1);

                         
                        int index281_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA281_18 = input.LA(1);

                         
                        int index281_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA281_19 = input.LA(1);

                         
                        int index281_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA281_20 = input.LA(1);

                         
                        int index281_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA281_21 = input.LA(1);

                         
                        int index281_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA281_22 = input.LA(1);

                         
                        int index281_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA281_23 = input.LA(1);

                         
                        int index281_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA281_24 = input.LA(1);

                         
                        int index281_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA281_25 = input.LA(1);

                         
                        int index281_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA281_26 = input.LA(1);

                         
                        int index281_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA281_27 = input.LA(1);

                         
                        int index281_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA281_28 = input.LA(1);

                         
                        int index281_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA281_29 = input.LA(1);

                         
                        int index281_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA281_30 = input.LA(1);

                         
                        int index281_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA281_31 = input.LA(1);

                         
                        int index281_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA281_32 = input.LA(1);

                         
                        int index281_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA281_33 = input.LA(1);

                         
                        int index281_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA281_34 = input.LA(1);

                         
                        int index281_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA281_35 = input.LA(1);

                         
                        int index281_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA281_36 = input.LA(1);

                         
                        int index281_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA281_37 = input.LA(1);

                         
                        int index281_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA281_38 = input.LA(1);

                         
                        int index281_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA281_39 = input.LA(1);

                         
                        int index281_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA281_40 = input.LA(1);

                         
                        int index281_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA281_41 = input.LA(1);

                         
                        int index281_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA281_42 = input.LA(1);

                         
                        int index281_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA281_43 = input.LA(1);

                         
                        int index281_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA281_44 = input.LA(1);

                         
                        int index281_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA281_45 = input.LA(1);

                         
                        int index281_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA281_46 = input.LA(1);

                         
                        int index281_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA281_47 = input.LA(1);

                         
                        int index281_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA281_48 = input.LA(1);

                         
                        int index281_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA281_49 = input.LA(1);

                         
                        int index281_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA281_50 = input.LA(1);

                         
                        int index281_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA281_51 = input.LA(1);

                         
                        int index281_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred136_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA281_52 = input.LA(1);

                         
                        int index281_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred137_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA281_53 = input.LA(1);

                         
                        int index281_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA281_54 = input.LA(1);

                         
                        int index281_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA281_55 = input.LA(1);

                         
                        int index281_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA281_56 = input.LA(1);

                         
                        int index281_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA281_57 = input.LA(1);

                         
                        int index281_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA281_58 = input.LA(1);

                         
                        int index281_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA281_59 = input.LA(1);

                         
                        int index281_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA281_60 = input.LA(1);

                         
                        int index281_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA281_61 = input.LA(1);

                         
                        int index281_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA281_62 = input.LA(1);

                         
                        int index281_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA281_63 = input.LA(1);

                         
                        int index281_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA281_64 = input.LA(1);

                         
                        int index281_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_64);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA281_65 = input.LA(1);

                         
                        int index281_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_65);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA281_66 = input.LA(1);

                         
                        int index281_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_66);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA281_67 = input.LA(1);

                         
                        int index281_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_67);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA281_68 = input.LA(1);

                         
                        int index281_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_68);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA281_69 = input.LA(1);

                         
                        int index281_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_69);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA281_70 = input.LA(1);

                         
                        int index281_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_70);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA281_71 = input.LA(1);

                         
                        int index281_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_71);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA281_72 = input.LA(1);

                         
                        int index281_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_72);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA281_73 = input.LA(1);

                         
                        int index281_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index281_73);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA281_74 = input.LA(1);

                         
                        int index281_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred135_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred138_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index281_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 281, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_180;
            this.max = dfa_181;
            this.accept = dfa_182;
            this.special = dfa_183;
            this.transition = dfa_184;
        }
        public String getDescription() {
            return "15647:1: (this_AnnotatedPropertyAssignment_0= norm1_AnnotatedPropertyAssignment | ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=>this_PropertyNameValuePair_1= norm1_PropertyNameValuePair ) | ( ( ( () norm1_GetterHeader[null] ) )=>this_PropertyGetterDeclaration_2= norm1_PropertyGetterDeclaration ) | ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_PropertySetterDeclaration_3= norm1_PropertySetterDeclaration ) | ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_PropertyMethodDeclaration_4= norm1_PropertyMethodDeclaration ) | this_PropertyNameValuePairSingleName_5= norm1_PropertyNameValuePairSingleName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA282_0 = input.LA(1);

                         
                        int index282_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA282_0>=4 && LA282_0<=149 && (s=T2S.M_20[LA282_0-(4)])>=0)) { /* 74 cases */ }
                        else if ( (LA282_0==LessThanSign) && (synpred142_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA282_0==Asterisk) && (synpred142_InternalN4JSXParser())) {s = 76;}

                        else if ( (LA282_0==LeftParenthesis) ) {s = 77;}

                         
                        input.seek(index282_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA282_2 = input.LA(1);

                         
                        int index282_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA282_3 = input.LA(1);

                         
                        int index282_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA282_4 = input.LA(1);

                         
                        int index282_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA282_5 = input.LA(1);

                         
                        int index282_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA282_6 = input.LA(1);

                         
                        int index282_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA282_7 = input.LA(1);

                         
                        int index282_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA282_8 = input.LA(1);

                         
                        int index282_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA282_9 = input.LA(1);

                         
                        int index282_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA282_10 = input.LA(1);

                         
                        int index282_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA282_11 = input.LA(1);

                         
                        int index282_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA282_12 = input.LA(1);

                         
                        int index282_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA282_13 = input.LA(1);

                         
                        int index282_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA282_14 = input.LA(1);

                         
                        int index282_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA282_15 = input.LA(1);

                         
                        int index282_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA282_16 = input.LA(1);

                         
                        int index282_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA282_17 = input.LA(1);

                         
                        int index282_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA282_18 = input.LA(1);

                         
                        int index282_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA282_19 = input.LA(1);

                         
                        int index282_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA282_20 = input.LA(1);

                         
                        int index282_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA282_21 = input.LA(1);

                         
                        int index282_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA282_22 = input.LA(1);

                         
                        int index282_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA282_23 = input.LA(1);

                         
                        int index282_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA282_24 = input.LA(1);

                         
                        int index282_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA282_25 = input.LA(1);

                         
                        int index282_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA282_26 = input.LA(1);

                         
                        int index282_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA282_27 = input.LA(1);

                         
                        int index282_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA282_28 = input.LA(1);

                         
                        int index282_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA282_29 = input.LA(1);

                         
                        int index282_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA282_30 = input.LA(1);

                         
                        int index282_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA282_31 = input.LA(1);

                         
                        int index282_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA282_32 = input.LA(1);

                         
                        int index282_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA282_33 = input.LA(1);

                         
                        int index282_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA282_34 = input.LA(1);

                         
                        int index282_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA282_35 = input.LA(1);

                         
                        int index282_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA282_36 = input.LA(1);

                         
                        int index282_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA282_37 = input.LA(1);

                         
                        int index282_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA282_38 = input.LA(1);

                         
                        int index282_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA282_39 = input.LA(1);

                         
                        int index282_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA282_40 = input.LA(1);

                         
                        int index282_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA282_41 = input.LA(1);

                         
                        int index282_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA282_42 = input.LA(1);

                         
                        int index282_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA282_43 = input.LA(1);

                         
                        int index282_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA282_44 = input.LA(1);

                         
                        int index282_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA282_45 = input.LA(1);

                         
                        int index282_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA282_46 = input.LA(1);

                         
                        int index282_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA282_47 = input.LA(1);

                         
                        int index282_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA282_48 = input.LA(1);

                         
                        int index282_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA282_49 = input.LA(1);

                         
                        int index282_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA282_50 = input.LA(1);

                         
                        int index282_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA282_51 = input.LA(1);

                         
                        int index282_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred140_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA282_52 = input.LA(1);

                         
                        int index282_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred141_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA282_53 = input.LA(1);

                         
                        int index282_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA282_54 = input.LA(1);

                         
                        int index282_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA282_55 = input.LA(1);

                         
                        int index282_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA282_56 = input.LA(1);

                         
                        int index282_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA282_57 = input.LA(1);

                         
                        int index282_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA282_58 = input.LA(1);

                         
                        int index282_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA282_59 = input.LA(1);

                         
                        int index282_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA282_60 = input.LA(1);

                         
                        int index282_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA282_61 = input.LA(1);

                         
                        int index282_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA282_62 = input.LA(1);

                         
                        int index282_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA282_63 = input.LA(1);

                         
                        int index282_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA282_64 = input.LA(1);

                         
                        int index282_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_64);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA282_65 = input.LA(1);

                         
                        int index282_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_65);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA282_66 = input.LA(1);

                         
                        int index282_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_66);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA282_67 = input.LA(1);

                         
                        int index282_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_67);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA282_68 = input.LA(1);

                         
                        int index282_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_68);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA282_69 = input.LA(1);

                         
                        int index282_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_69);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA282_70 = input.LA(1);

                         
                        int index282_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_70);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA282_71 = input.LA(1);

                         
                        int index282_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_71);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA282_72 = input.LA(1);

                         
                        int index282_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_72);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA282_73 = input.LA(1);

                         
                        int index282_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                         
                        input.seek(index282_73);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA282_74 = input.LA(1);

                         
                        int index282_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred142_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (true) ) {s = 77;}

                         
                        input.seek(index282_74);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 282, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_185s = "\120\uffff";
    static final String dfa_186s = "\1\4\111\0\6\uffff";
    static final String dfa_187s = "\1\u0095\111\0\6\uffff";
    static final String dfa_188s = "\112\uffff\2\4\1\5\1\1\1\2\1\3";
    static final String dfa_189s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\6\uffff}>";
    static final String[] dfa_190s = {
            "\1\15\1\12\1\75\1\42\1\4\1\76\1\100\1\67\1\24\1\25\1\66\1\36\1\26\1\33\1\34\1\77\1\65\1\27\1\32\1\40\1\101\1\44\1\70\1\46\1\5\1\51\1\74\1\3\1\17\1\21\1\22\1\23\1\60\1\45\1\47\1\14\1\53\1\55\1\2\1\20\1\31\1\61\1\72\1\56\1\10\1\57\1\11\1\1\1\54\4\uffff\1\35\1\62\1\64\1\43\1\102\1\63\1\50\1\52\21\uffff\1\71\1\30\1\37\1\41\1\73\5\uffff\1\114\1\uffff\1\113\7\uffff\1\112\2\uffff\1\16\1\uffff\1\111\2\uffff\1\13\2\uffff\1\7\3\uffff\1\104\1\uffff\1\107\1\uffff\1\106\2\uffff\1\110\1\uffff\1\6\2\uffff\1\103\23\uffff\1\105",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[][] dfa_190 = unpackEncodedStringArray(dfa_190s);

    class DFA290 extends DFA {

        public DFA290(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 290;
            this.eot = dfa_185;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "15971:1: ( ( ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=> ( () ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )? ( (lv_declaredName_3_0= ruleLiteralOrComputedPropertyName ) ) otherlv_4= Colon ) ) ( (lv_expression_5_0= norm1_AssignmentExpression ) ) ) | ( ( ( ( () ruleGetterHeader[null] ) )=> ( () this_GetterHeader_7= ruleGetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_8_0= ruleBlock ) ) ) | ( ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () otherlv_10= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_11_0= ruleLiteralOrComputedPropertyName ) ) ) ) otherlv_12= LeftParenthesis ( (lv_fpar_13_0= ruleFormalParameter ) ) otherlv_14= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_15_0= ruleBlock ) ) ) | ( ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () (this_TypeVariables_17= ruleTypeVariables[$current] )? ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_21= norm1_MethodParamsAndBody[$current] ) ) | ( ( (lv_declaredName_22_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_23= ruleMethodParamsAndBody[$current] ) ) ) ) ) (otherlv_24= Semicolon )? ) | ( () ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )? ( (lv_identifierRef_27_0= ruleIdentifierRef ) ) (otherlv_28= EqualsSign ( (lv_expression_29_0= norm1_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA290_0 = input.LA(1);

                         
                        int index290_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA290_0>=4 && LA290_0<=149 && (s=T2S.M_22[LA290_0-(4)])>=0)) { /* 73 cases */ }
                        else if ( (LA290_0==LessThanSign) && (synpred149_InternalN4JSXParser())) {s = 74;}

                        else if ( (LA290_0==Asterisk) && (synpred149_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA290_0==LeftParenthesis) ) {s = 76;}

                         
                        input.seek(index290_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA290_1 = input.LA(1);

                         
                        int index290_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA290_2 = input.LA(1);

                         
                        int index290_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA290_3 = input.LA(1);

                         
                        int index290_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA290_4 = input.LA(1);

                         
                        int index290_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA290_5 = input.LA(1);

                         
                        int index290_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA290_6 = input.LA(1);

                         
                        int index290_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA290_7 = input.LA(1);

                         
                        int index290_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA290_8 = input.LA(1);

                         
                        int index290_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA290_9 = input.LA(1);

                         
                        int index290_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA290_10 = input.LA(1);

                         
                        int index290_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA290_11 = input.LA(1);

                         
                        int index290_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA290_12 = input.LA(1);

                         
                        int index290_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA290_13 = input.LA(1);

                         
                        int index290_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA290_14 = input.LA(1);

                         
                        int index290_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA290_15 = input.LA(1);

                         
                        int index290_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA290_16 = input.LA(1);

                         
                        int index290_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA290_17 = input.LA(1);

                         
                        int index290_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA290_18 = input.LA(1);

                         
                        int index290_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA290_19 = input.LA(1);

                         
                        int index290_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA290_20 = input.LA(1);

                         
                        int index290_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA290_21 = input.LA(1);

                         
                        int index290_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA290_22 = input.LA(1);

                         
                        int index290_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA290_23 = input.LA(1);

                         
                        int index290_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA290_24 = input.LA(1);

                         
                        int index290_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA290_25 = input.LA(1);

                         
                        int index290_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA290_26 = input.LA(1);

                         
                        int index290_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA290_27 = input.LA(1);

                         
                        int index290_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA290_28 = input.LA(1);

                         
                        int index290_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA290_29 = input.LA(1);

                         
                        int index290_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA290_30 = input.LA(1);

                         
                        int index290_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA290_31 = input.LA(1);

                         
                        int index290_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA290_32 = input.LA(1);

                         
                        int index290_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA290_33 = input.LA(1);

                         
                        int index290_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA290_34 = input.LA(1);

                         
                        int index290_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA290_35 = input.LA(1);

                         
                        int index290_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA290_36 = input.LA(1);

                         
                        int index290_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA290_37 = input.LA(1);

                         
                        int index290_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA290_38 = input.LA(1);

                         
                        int index290_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA290_39 = input.LA(1);

                         
                        int index290_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA290_40 = input.LA(1);

                         
                        int index290_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA290_41 = input.LA(1);

                         
                        int index290_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA290_42 = input.LA(1);

                         
                        int index290_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA290_43 = input.LA(1);

                         
                        int index290_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA290_44 = input.LA(1);

                         
                        int index290_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA290_45 = input.LA(1);

                         
                        int index290_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA290_46 = input.LA(1);

                         
                        int index290_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA290_47 = input.LA(1);

                         
                        int index290_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA290_48 = input.LA(1);

                         
                        int index290_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA290_49 = input.LA(1);

                         
                        int index290_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA290_50 = input.LA(1);

                         
                        int index290_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred144_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA290_51 = input.LA(1);

                         
                        int index290_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred146_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA290_52 = input.LA(1);

                         
                        int index290_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA290_53 = input.LA(1);

                         
                        int index290_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA290_54 = input.LA(1);

                         
                        int index290_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA290_55 = input.LA(1);

                         
                        int index290_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA290_56 = input.LA(1);

                         
                        int index290_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_56);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA290_57 = input.LA(1);

                         
                        int index290_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_57);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA290_58 = input.LA(1);

                         
                        int index290_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_58);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA290_59 = input.LA(1);

                         
                        int index290_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_59);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA290_60 = input.LA(1);

                         
                        int index290_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_60);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA290_61 = input.LA(1);

                         
                        int index290_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_61);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA290_62 = input.LA(1);

                         
                        int index290_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_62);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA290_63 = input.LA(1);

                         
                        int index290_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_63);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA290_64 = input.LA(1);

                         
                        int index290_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_64);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA290_65 = input.LA(1);

                         
                        int index290_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_65);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA290_66 = input.LA(1);

                         
                        int index290_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_66);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA290_67 = input.LA(1);

                         
                        int index290_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_67);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA290_68 = input.LA(1);

                         
                        int index290_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_68);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA290_69 = input.LA(1);

                         
                        int index290_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_69);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA290_70 = input.LA(1);

                         
                        int index290_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_70);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA290_71 = input.LA(1);

                         
                        int index290_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_71);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA290_72 = input.LA(1);

                         
                        int index290_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index290_72);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA290_73 = input.LA(1);

                         
                        int index290_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred149_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index290_73);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 290, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_191s = "\7\4\1\uffff\1\4\4\144\1\uffff";
    static final String dfa_192s = "\7\u0095\1\uffff\1\u0095\4\156\1\uffff";
    static final String dfa_193s = "\7\uffff\1\1\5\uffff\1\2";
    static final String[] dfa_194s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\22\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\2\uffff\1\7\1\uffff\1\15\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            "\1\15\11\uffff\1\7",
            ""
    };
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "15988:2: ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String dfa_195s = "\7\4\1\uffff\1\4\4\134\1\uffff";
    static final String[] dfa_196s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\7\uffff\1\15\12\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\6\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\5\uffff\1\15\1\uffff\2\7\11\uffff\1\7\1\uffff\1\7\11\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            "\1\15\21\uffff\1\7",
            ""
    };
    static final char[] dfa_195 = DFA.unpackEncodedStringToUnsignedChars(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "16535:3: ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String dfa_197s = "\1\4\1\uffff\5\4\4\140\1\uffff";
    static final String dfa_198s = "\1\176\1\uffff\5\176\4\160\1\uffff";
    static final String[] dfa_199s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\1\uffff\1\13\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\5\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\1\uffff\2\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            ""
    };
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final char[] dfa_198 = DFA.unpackEncodedStringToUnsignedChars(dfa_198s);
    static final short[][] dfa_199 = unpackEncodedStringArray(dfa_199s);

    class DFA288 extends DFA {

        public DFA288(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 288;
            this.eot = dfa_50;
            this.eof = dfa_90;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_199;
        }
        public String getDescription() {
            return "16646:2: ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )?";
        }
    }

    class DFA298 extends DFA {

        public DFA298(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 298;
            this.eot = dfa_185;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "16727:1: ( ( ( ( ( () ( ( ruleTypeRefWithModifiers ) )? ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=> ( () ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )? ( (lv_declaredName_3_0= norm1_LiteralOrComputedPropertyName ) ) otherlv_4= Colon ) ) ( (lv_expression_5_0= norm3_AssignmentExpression ) ) ) | ( ( ( ( () norm1_GetterHeader[null] ) )=> ( () this_GetterHeader_7= norm1_GetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_8_0= ruleBlock ) ) ) | ( ( ( ( () Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () otherlv_10= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_11_0= norm1_LiteralOrComputedPropertyName ) ) ) ) otherlv_12= LeftParenthesis ( (lv_fpar_13_0= norm1_FormalParameter ) ) otherlv_14= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_15_0= ruleBlock ) ) ) | ( ( ( ( () ( ruleTypeVariables[null] )? ( ( ruleTypeRefWithModifiers ) )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () (this_TypeVariables_17= ruleTypeVariables[$current] )? ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_21= norm1_MethodParamsAndBody[$current] ) ) | ( ( (lv_declaredName_22_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsAndBody_23= ruleMethodParamsAndBody[$current] ) ) ) ) ) (otherlv_24= Semicolon )? ) | ( () ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )? ( (lv_identifierRef_27_0= norm1_IdentifierRef ) ) (otherlv_28= EqualsSign ( (lv_expression_29_0= norm3_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA298_0 = input.LA(1);

                         
                        int index298_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA298_0>=4 && LA298_0<=149 && (s=T2S.M_22[LA298_0-(4)])>=0)) { /* 73 cases */ }
                        else if ( (LA298_0==LessThanSign) && (synpred158_InternalN4JSXParser())) {s = 74;}

                        else if ( (LA298_0==Asterisk) && (synpred158_InternalN4JSXParser())) {s = 75;}

                        else if ( (LA298_0==LeftParenthesis) ) {s = 76;}

                         
                        input.seek(index298_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA298_1 = input.LA(1);

                         
                        int index298_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA298_2 = input.LA(1);

                         
                        int index298_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA298_3 = input.LA(1);

                         
                        int index298_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA298_4 = input.LA(1);

                         
                        int index298_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA298_5 = input.LA(1);

                         
                        int index298_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA298_6 = input.LA(1);

                         
                        int index298_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA298_7 = input.LA(1);

                         
                        int index298_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA298_8 = input.LA(1);

                         
                        int index298_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA298_9 = input.LA(1);

                         
                        int index298_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA298_10 = input.LA(1);

                         
                        int index298_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA298_11 = input.LA(1);

                         
                        int index298_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA298_12 = input.LA(1);

                         
                        int index298_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA298_13 = input.LA(1);

                         
                        int index298_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA298_14 = input.LA(1);

                         
                        int index298_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA298_15 = input.LA(1);

                         
                        int index298_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA298_16 = input.LA(1);

                         
                        int index298_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA298_17 = input.LA(1);

                         
                        int index298_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA298_18 = input.LA(1);

                         
                        int index298_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA298_19 = input.LA(1);

                         
                        int index298_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA298_20 = input.LA(1);

                         
                        int index298_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA298_21 = input.LA(1);

                         
                        int index298_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA298_22 = input.LA(1);

                         
                        int index298_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA298_23 = input.LA(1);

                         
                        int index298_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA298_24 = input.LA(1);

                         
                        int index298_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA298_25 = input.LA(1);

                         
                        int index298_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA298_26 = input.LA(1);

                         
                        int index298_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA298_27 = input.LA(1);

                         
                        int index298_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA298_28 = input.LA(1);

                         
                        int index298_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA298_29 = input.LA(1);

                         
                        int index298_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA298_30 = input.LA(1);

                         
                        int index298_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA298_31 = input.LA(1);

                         
                        int index298_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA298_32 = input.LA(1);

                         
                        int index298_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA298_33 = input.LA(1);

                         
                        int index298_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA298_34 = input.LA(1);

                         
                        int index298_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA298_35 = input.LA(1);

                         
                        int index298_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA298_36 = input.LA(1);

                         
                        int index298_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA298_37 = input.LA(1);

                         
                        int index298_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA298_38 = input.LA(1);

                         
                        int index298_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA298_39 = input.LA(1);

                         
                        int index298_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA298_40 = input.LA(1);

                         
                        int index298_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA298_41 = input.LA(1);

                         
                        int index298_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA298_42 = input.LA(1);

                         
                        int index298_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA298_43 = input.LA(1);

                         
                        int index298_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA298_44 = input.LA(1);

                         
                        int index298_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA298_45 = input.LA(1);

                         
                        int index298_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA298_46 = input.LA(1);

                         
                        int index298_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA298_47 = input.LA(1);

                         
                        int index298_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA298_48 = input.LA(1);

                         
                        int index298_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA298_49 = input.LA(1);

                         
                        int index298_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA298_50 = input.LA(1);

                         
                        int index298_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred153_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA298_51 = input.LA(1);

                         
                        int index298_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred155_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA298_52 = input.LA(1);

                         
                        int index298_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA298_53 = input.LA(1);

                         
                        int index298_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA298_54 = input.LA(1);

                         
                        int index298_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA298_55 = input.LA(1);

                         
                        int index298_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA298_56 = input.LA(1);

                         
                        int index298_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_56);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA298_57 = input.LA(1);

                         
                        int index298_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_57);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA298_58 = input.LA(1);

                         
                        int index298_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_58);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA298_59 = input.LA(1);

                         
                        int index298_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_59);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA298_60 = input.LA(1);

                         
                        int index298_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_60);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA298_61 = input.LA(1);

                         
                        int index298_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_61);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA298_62 = input.LA(1);

                         
                        int index298_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_62);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA298_63 = input.LA(1);

                         
                        int index298_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_63);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA298_64 = input.LA(1);

                         
                        int index298_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_64);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA298_65 = input.LA(1);

                         
                        int index298_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_65);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA298_66 = input.LA(1);

                         
                        int index298_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_66);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA298_67 = input.LA(1);

                         
                        int index298_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_67);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA298_68 = input.LA(1);

                         
                        int index298_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_68);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA298_69 = input.LA(1);

                         
                        int index298_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_69);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA298_70 = input.LA(1);

                         
                        int index298_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_70);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA298_71 = input.LA(1);

                         
                        int index298_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_71);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA298_72 = input.LA(1);

                         
                        int index298_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                         
                        input.seek(index298_72);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA298_73 = input.LA(1);

                         
                        int index298_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred158_InternalN4JSXParser()) ) {s = 75;}

                        else if ( (true) ) {s = 76;}

                         
                        input.seek(index298_73);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 298, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA291 extends DFA {

        public DFA291(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 291;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "16744:2: ( (lv_declaredTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA293 extends DFA {

        public DFA293(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 293;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "17291:3: ( (lv_returnTypeRef_18_0= ruleTypeRefWithModifiers ) )?";
        }
    }
    static final String[] dfa_200s = {
            "\1\12\1\10\1\13\1\uffff\1\4\3\13\2\uffff\1\13\4\uffff\2\13\3\uffff\1\13\1\uffff\1\13\1\uffff\1\5\1\uffff\1\13\1\3\7\uffff\1\11\2\uffff\1\2\3\uffff\1\13\1\uffff\1\1\1\uffff\1\7\1\1\6\uffff\2\13\1\uffff\2\13\23\uffff\1\13\3\uffff\1\13\5\uffff\1\1\14\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\14\uffff\1\6",
            "",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\5\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\3\1\1\uffff\4\1\2\uffff\1\1\4\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\2\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\3\uffff\1\1\7\uffff\2\1\1\uffff\2\1\23\uffff\1\1\3\uffff\1\1\4\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\3\uffff\1\1\1\13\1\uffff\1\1\5\uffff\1\1\1\13\15\uffff\1\1",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            "\1\13\6\uffff\1\13\6\uffff\1\1\1\uffff\1\13",
            ""
    };
    static final short[][] dfa_200 = unpackEncodedStringArray(dfa_200s);

    class DFA296 extends DFA {

        public DFA296(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 296;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_200;
        }
        public String getDescription() {
            return "17402:2: ( (lv_declaredTypeRef_26_0= ruleTypeRef ) )?";
        }
    }

    class DFA300 extends DFA {

        public DFA300(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 300;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "17525:3: ( (lv_returnTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA304 extends DFA {

        public DFA304(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 304;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "17685:3: ( (lv_returnTypeRef_2_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA307 extends DFA {

        public DFA307(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 307;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "17827:2: ( (lv_declaredTypeRef_1_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA308 extends DFA {

        public DFA308(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 308;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "17916:2: ( (lv_declaredTypeRef_1_0= ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA309 extends DFA {

        public DFA309(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 309;
            this.eot = dfa_50;
            this.eof = dfa_90;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_199;
        }
        public String getDescription() {
            return "17996:2: ( (lv_declaredTypeRef_0_0= ruleTypeRef ) )?";
        }
    }

    class DFA311 extends DFA {

        public DFA311(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 311;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_93;
            this.special = dfa_55;
            this.transition = dfa_200;
        }
        public String getDescription() {
            return "18068:2: ( (lv_declaredTypeRef_0_0= ruleTypeRef ) )?";
        }
    }
    static final String dfa_201s = "\70\uffff";
    static final String dfa_202s = "\2\4\66\uffff";
    static final String dfa_203s = "\2\u0095\66\uffff";
    static final String dfa_204s = "\2\uffff\1\3\1\1\64\2";
    static final String dfa_205s = "\1\uffff\1\0\66\uffff}>";
    static final String[] dfa_206s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\5\2\7\uffff\2\2\1\1\2\2\13\uffff\1\2\7\uffff\1\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\2\6\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\27\1\22\1\34\1\uffff\1\31\1\35\1\37\1\16\2\uffff\1\15\1\64\3\uffff\1\36\1\14\3\uffff\1\40\1\uffff\1\17\1\uffff\1\24\1\uffff\1\33\1\32\2\uffff\1\65\1\uffff\1\53\1\6\1\uffff\1\26\1\uffff\1\10\1\30\3\uffff\1\21\1\55\1\5\1\52\1\25\7\uffff\1\11\1\13\1\4\1\41\1\12\13\uffff\1\57\7\uffff\1\20\3\uffff\1\23\5\uffff\1\62\5\uffff\1\3\1\56\2\uffff\1\42\3\uffff\1\63\1\60\2\uffff\1\61\6\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\7\2\uffff\1\54\11\uffff\1\67\1\66\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final char[] dfa_202 = DFA.unpackEncodedStringToUnsignedChars(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final short[] dfa_204 = DFA.unpackEncodedString(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[][] dfa_206 = unpackEncodedStringArray(dfa_206s);

    class DFA329 extends DFA {

        public DFA329(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 329;
            this.eot = dfa_201;
            this.eof = dfa_201;
            this.min = dfa_202;
            this.max = dfa_203;
            this.accept = dfa_204;
            this.special = dfa_205;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "19812:1: ( ( ( ( ( () New FullStop ) )=> ( () otherlv_1= New otherlv_2= FullStop ) ) otherlv_3= Target ) | ( ( ( ( () New ) )=> ( () otherlv_5= New ) ) ( (lv_callee_6_0= ruleMemberExpression ) ) ( ( LessThanSign )=>this_TypeArguments_7= ruleTypeArguments[$current] )? ( ( ( ( LeftParenthesis ) )=> (lv_withArgs_8_0= LeftParenthesis ) ) (this_Arguments_9= ruleArguments[$current] )? otherlv_10= RightParenthesis ( ( () this_IndexedAccessExpressionTail_12= ruleIndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_14= ruleParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_16_0= ruleTemplateLiteral ) ) ) )* )? ) | (this_PrimaryExpression_17= rulePrimaryExpression ( ( () this_IndexedAccessExpressionTail_19= ruleIndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_21= ruleParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_23_0= ruleTemplateLiteral ) ) ) )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA329_1 = input.LA(1);

                         
                        int index329_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA329_1==FullStop) && (synpred181_InternalN4JSXParser())) {s = 3;}

                        
                        else if ((LA329_1>=4 && LA329_1<=149 && (s=T2S.M_24[LA329_1-(4)])>=0) && (synpred182_InternalN4JSXParser())) { /* 53 cases */ }
                        input.seek(index329_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 329, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_207s = "\2\4\65\uffff";
    static final String dfa_208s = "\2\u0095\65\uffff";
    static final String dfa_209s = "\2\uffff\1\3\1\1\63\2";
    static final String dfa_210s = "\1\uffff\1\0\65\uffff}>";
    static final String[] dfa_211s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\2\uffff\1\2\3\uffff\5\2\7\uffff\2\2\1\1\2\2\13\uffff\1\2\7\uffff\1\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff\2\2\2\uffff\1\2\6\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\26\1\21\1\33\1\uffff\1\30\1\34\1\36\1\15\2\uffff\1\14\1\63\3\uffff\1\35\1\13\3\uffff\1\37\1\uffff\1\16\1\uffff\1\23\1\uffff\1\32\1\31\2\uffff\1\64\1\uffff\1\52\1\6\1\uffff\1\25\2\uffff\1\27\3\uffff\1\20\1\54\1\5\1\51\1\24\7\uffff\1\10\1\12\1\4\1\40\1\11\13\uffff\1\56\7\uffff\1\17\3\uffff\1\22\5\uffff\1\61\5\uffff\1\3\1\55\2\uffff\1\41\3\uffff\1\62\1\57\2\uffff\1\60\6\uffff\1\42\1\uffff\1\47\1\44\1\45\1\46\1\uffff\1\50\1\uffff\1\7\2\uffff\1\53\11\uffff\1\66\1\65\10\uffff\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final char[] dfa_208 = DFA.unpackEncodedStringToUnsignedChars(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[] dfa_210 = DFA.unpackEncodedString(dfa_210s);
    static final short[][] dfa_211 = unpackEncodedStringArray(dfa_211s);

    class DFA335 extends DFA {

        public DFA335(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 335;
            this.eot = dfa_36;
            this.eof = dfa_36;
            this.min = dfa_207;
            this.max = dfa_208;
            this.accept = dfa_209;
            this.special = dfa_210;
            this.transition = dfa_211;
        }
        public String getDescription() {
            return "20072:1: ( ( ( ( ( () New FullStop ) )=> ( () otherlv_1= New otherlv_2= FullStop ) ) otherlv_3= Target ) | ( ( ( ( () New ) )=> ( () otherlv_5= New ) ) ( (lv_callee_6_0= norm1_MemberExpression ) ) ( ( LessThanSign )=>this_TypeArguments_7= ruleTypeArguments[$current] )? ( ( ( ( LeftParenthesis ) )=> (lv_withArgs_8_0= LeftParenthesis ) ) (this_Arguments_9= norm1_Arguments[$current] )? otherlv_10= RightParenthesis ( ( () this_IndexedAccessExpressionTail_12= norm1_IndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_14= norm1_ParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_16_0= norm1_TemplateLiteral ) ) ) )* )? ) | (this_PrimaryExpression_17= norm1_PrimaryExpression ( ( () this_IndexedAccessExpressionTail_19= norm1_IndexedAccessExpressionTail[$current] ) | ( () this_ParameterizedPropertyAccessExpressionTail_21= norm1_ParameterizedPropertyAccessExpressionTail[$current] ) | ( () ( (lv_template_23_0= norm1_TemplateLiteral ) ) ) )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA335_1 = input.LA(1);

                         
                        int index335_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA335_1==FullStop) && (synpred185_InternalN4JSXParser())) {s = 3;}

                        
                        else if ((LA335_1>=4 && LA335_1<=149 && (s=T2S.M_25[LA335_1-(4)])>=0) && (synpred186_InternalN4JSXParser())) { /* 52 cases */ }
                        input.seek(index335_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 335, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_212s = "\1\1\102\uffff";
    static final String dfa_213s = "\1\7\1\uffff\1\4\1\uffff\1\4\76\uffff";
    static final String dfa_214s = "\1\u0099\1\uffff\1\u0095\1\uffff\1\u0095\76\uffff";
    static final String dfa_215s = "\1\uffff\1\2\1\uffff\1\1\1\uffff\76\1";
    static final String dfa_216s = "\1\0\3\uffff\1\1\76\uffff}>";
    static final String[] dfa_217s = {
            "\1\1\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\3\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\4\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\3\1\1\uffff\4\1\2\uffff\2\1\3\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\4\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\1\uffff\2\1\3\uffff\6\1\6\uffff\5\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\4\1\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\11\uffff\2\1\10\uffff\1\1",
            "",
            "\1\31\1\24\1\36\1\uffff\1\33\1\37\1\41\1\20\2\uffff\1\17\1\66\3\uffff\1\40\1\16\1\72\2\uffff\1\42\1\uffff\1\21\1\uffff\1\26\1\74\1\35\1\34\2\uffff\1\67\1\uffff\1\55\1\10\1\uffff\1\30\1\uffff\1\12\1\32\3\uffff\1\23\1\57\1\7\1\54\1\27\1\73\6\uffff\1\13\1\15\1\6\1\43\1\14\7\uffff\1\75\1\uffff\1\76\1\uffff\1\61\4\uffff\1\1\2\uffff\1\22\3\uffff\1\25\2\uffff\1\102\2\uffff\1\64\2\uffff\1\77\1\uffff\1\100\1\uffff\1\60\2\uffff\1\44\1\uffff\1\5\1\uffff\1\65\1\62\2\uffff\1\63\2\uffff\1\101\3\uffff\1\45\1\uffff\1\52\1\47\1\50\1\51\1\uffff\1\53\1\uffff\1\11\2\uffff\1\56\11\uffff\1\71\1\70\10\uffff\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final char[] dfa_214 = DFA.unpackEncodedStringToUnsignedChars(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[] dfa_216 = DFA.unpackEncodedString(dfa_216s);
    static final short[][] dfa_217 = unpackEncodedStringArray(dfa_217s);

    class DFA348 extends DFA {

        public DFA348(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 348;
            this.eot = dfa_132;
            this.eof = dfa_212;
            this.min = dfa_213;
            this.max = dfa_214;
            this.accept = dfa_215;
            this.special = dfa_216;
            this.transition = dfa_217;
        }
        public String getDescription() {
            return "()* loopback of 21179:1: ( ( ( () ( ( ruleShiftOperator ) ) ( ( ruleAdditiveExpression ) ) ) )=> ( () ( (lv_op_2_0= ruleShiftOperator ) ) ( (lv_rhs_3_0= ruleAdditiveExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA348_0 = input.LA(1);

                         
                        int index348_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA348_0==EOF||LA348_0==Instanceof||LA348_0==ExclamationMarkEqualsSignEqualsSign||(LA348_0>=LessThanSignLessThanSignEqualsSign && LA348_0<=EqualsSignEqualsSignEqualsSign)||(LA348_0>=ExclamationMarkEqualsSign && LA348_0<=AsteriskEqualsSign)||LA348_0==PlusSignEqualsSign||(LA348_0>=HyphenMinusEqualsSign && LA348_0<=SolidusEqualsSign)||(LA348_0>=LessThanSignEqualsSign && LA348_0<=EqualsSignEqualsSign)||LA348_0==GreaterThanSignEqualsSign||LA348_0==CircumflexAccentEqualsSign||(LA348_0>=In && LA348_0<=VerticalLineVerticalLine)||LA348_0==Ampersand||LA348_0==RightParenthesis||LA348_0==Comma||(LA348_0>=Colon && LA348_0<=EqualsSign)||LA348_0==QuestionMark||(LA348_0>=RightSquareBracket && LA348_0<=CircumflexAccent)||(LA348_0>=VerticalLine && LA348_0<=RightCurlyBracket)||LA348_0==RULE_ML_COMMENT||LA348_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA348_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA348_0==LessThanSignLessThanSign) && (synpred197_InternalN4JSXParser())) {s = 3;}

                         
                        input.seek(index348_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA348_4 = input.LA(1);

                         
                        int index348_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA348_4==GreaterThanSignEqualsSign) ) {s = 1;}

                        
                        else if ((LA348_4>=4 && LA348_4<=149 && (s=T2S.M_26[LA348_4-(4)])>=0) && (synpred197_InternalN4JSXParser())) { /* 63 cases */ }
                        input.seek(index348_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 348, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_218s = "\1\1\101\uffff";
    static final String dfa_219s = "\1\7\1\uffff\1\4\1\uffff\1\4\75\uffff";
    static final String dfa_220s = "\1\u0099\1\uffff\1\u0095\1\uffff\1\u0095\75\uffff";
    static final String dfa_221s = "\1\uffff\1\2\1\uffff\1\1\1\uffff\75\1";
    static final String dfa_222s = "\1\1\3\uffff\1\0\75\uffff}>";
    static final String[] dfa_223s = {
            "\1\1\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\3\2\1\1\uffff\1\1\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\4\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\3\1\1\uffff\4\1\2\uffff\2\1\3\uffff\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\4\1\2\uffff\1\1\1\uffff\2\1\1\uffff\1\1\2\uffff\1\1\3\uffff\6\1\6\uffff\5\1\7\uffff\1\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\2\uffff\1\1\3\uffff\1\1\2\uffff\1\1\2\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\4\1\uffff\2\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\11\uffff\2\1\10\uffff\1\1",
            "",
            "\1\30\1\23\1\35\1\uffff\1\32\1\36\1\40\1\17\2\uffff\1\16\1\65\3\uffff\1\37\1\15\1\71\2\uffff\1\41\1\uffff\1\20\1\uffff\1\25\1\73\1\34\1\33\2\uffff\1\66\1\uffff\1\54\1\10\1\uffff\1\27\2\uffff\1\31\3\uffff\1\22\1\56\1\7\1\53\1\26\1\72\6\uffff\1\12\1\14\1\6\1\42\1\13\7\uffff\1\74\1\uffff\1\75\1\uffff\1\60\4\uffff\1\1\2\uffff\1\21\3\uffff\1\24\2\uffff\1\101\2\uffff\1\63\2\uffff\1\76\1\uffff\1\77\1\uffff\1\57\2\uffff\1\43\1\uffff\1\5\1\uffff\1\64\1\61\2\uffff\1\62\2\uffff\1\100\3\uffff\1\44\1\uffff\1\51\1\46\1\47\1\50\1\uffff\1\52\1\uffff\1\11\2\uffff\1\55\11\uffff\1\70\1\67\10\uffff\1\45",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final char[] dfa_219 = DFA.unpackEncodedStringToUnsignedChars(dfa_219s);
    static final char[] dfa_220 = DFA.unpackEncodedStringToUnsignedChars(dfa_220s);
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final short[] dfa_222 = DFA.unpackEncodedString(dfa_222s);
    static final short[][] dfa_223 = unpackEncodedStringArray(dfa_223s);

    class DFA349 extends DFA {

        public DFA349(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 349;
            this.eot = dfa_30;
            this.eof = dfa_218;
            this.min = dfa_219;
            this.max = dfa_220;
            this.accept = dfa_221;
            this.special = dfa_222;
            this.transition = dfa_223;
        }
        public String getDescription() {
            return "()* loopback of 21252:1: ( ( ( () ( ( ruleShiftOperator ) ) ( ( norm1_AdditiveExpression ) ) ) )=> ( () ( (lv_op_2_0= ruleShiftOperator ) ) ( (lv_rhs_3_0= norm1_AdditiveExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA349_4 = input.LA(1);

                         
                        int index349_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA349_4==GreaterThanSignEqualsSign) ) {s = 1;}

                        
                        else if ((LA349_4>=4 && LA349_4<=149 && (s=T2S.M_27[LA349_4-(4)])>=0) && (synpred198_InternalN4JSXParser())) { /* 62 cases */ }
                        input.seek(index349_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA349_0 = input.LA(1);

                         
                        int index349_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA349_0==EOF||LA349_0==Instanceof||LA349_0==ExclamationMarkEqualsSignEqualsSign||(LA349_0>=LessThanSignLessThanSignEqualsSign && LA349_0<=EqualsSignEqualsSignEqualsSign)||(LA349_0>=ExclamationMarkEqualsSign && LA349_0<=AsteriskEqualsSign)||LA349_0==PlusSignEqualsSign||(LA349_0>=HyphenMinusEqualsSign && LA349_0<=SolidusEqualsSign)||(LA349_0>=LessThanSignEqualsSign && LA349_0<=EqualsSignEqualsSign)||LA349_0==GreaterThanSignEqualsSign||LA349_0==CircumflexAccentEqualsSign||(LA349_0>=In && LA349_0<=VerticalLineVerticalLine)||LA349_0==Ampersand||LA349_0==RightParenthesis||LA349_0==Comma||(LA349_0>=Colon && LA349_0<=EqualsSign)||LA349_0==QuestionMark||(LA349_0>=RightSquareBracket && LA349_0<=CircumflexAccent)||(LA349_0>=VerticalLine && LA349_0<=RightCurlyBracket)||LA349_0==RULE_ML_COMMENT||LA349_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA349_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA349_0==LessThanSignLessThanSign) && (synpred198_InternalN4JSXParser())) {s = 3;}

                         
                        input.seek(index349_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 349, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_224s = "\104\uffff";
    static final String dfa_225s = "\1\1\103\uffff";
    static final String dfa_226s = "\1\7\1\uffff\1\4\101\uffff";
    static final String dfa_227s = "\1\160\1\uffff\1\u0095\101\uffff";
    static final String dfa_228s = "\1\uffff\1\2\1\uffff\101\1";
    static final String dfa_229s = "\1\0\1\uffff\1\1\101\uffff}>";
    static final String[] dfa_230s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\3\1\1\1\2\1\1\3\uffff\1\1\1\uffff\2\1",
            "",
            "\1\32\1\25\1\37\1\uffff\1\34\1\40\1\42\1\21\2\uffff\1\20\1\67\3\uffff\1\41\1\17\1\73\2\uffff\1\43\1\uffff\1\22\1\uffff\1\27\1\75\1\36\1\35\2\uffff\1\70\1\uffff\1\56\1\11\1\uffff\1\31\1\uffff\1\13\1\33\3\uffff\1\24\1\60\1\10\1\55\1\30\1\74\6\uffff\1\14\1\16\1\7\1\44\1\15\7\uffff\1\76\1\uffff\1\77\1\uffff\1\62\4\uffff\1\1\2\uffff\1\23\3\uffff\1\26\2\uffff\1\103\2\uffff\1\65\2\uffff\1\100\1\uffff\1\101\1\uffff\1\61\2\uffff\1\45\1\uffff\1\1\1\uffff\1\66\1\63\2\uffff\1\64\2\uffff\1\102\3\uffff\1\46\1\uffff\1\53\1\50\1\51\1\52\1\uffff\1\54\1\uffff\1\12\2\uffff\1\57\11\uffff\1\72\1\71\10\uffff\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[] dfa_225 = DFA.unpackEncodedString(dfa_225s);
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final char[] dfa_227 = DFA.unpackEncodedStringToUnsignedChars(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[] dfa_229 = DFA.unpackEncodedString(dfa_229s);
    static final short[][] dfa_230 = unpackEncodedStringArray(dfa_230s);

    class DFA352 extends DFA {

        public DFA352(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 352;
            this.eot = dfa_224;
            this.eof = dfa_225;
            this.min = dfa_226;
            this.max = dfa_227;
            this.accept = dfa_228;
            this.special = dfa_229;
            this.transition = dfa_230;
        }
        public String getDescription() {
            return "()* loopback of 21380:1: ( ( ( () ( ( ruleRelationalOperator ) ) ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= ruleRelationalOperator ) ) ( ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= ruleShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA352_0 = input.LA(1);

                         
                        int index352_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA352_0==EOF||LA352_0==ExclamationMarkEqualsSignEqualsSign||(LA352_0>=LessThanSignLessThanSignEqualsSign && LA352_0<=EqualsSignEqualsSignEqualsSign)||(LA352_0>=ExclamationMarkEqualsSign && LA352_0<=AsteriskEqualsSign)||LA352_0==PlusSignEqualsSign||(LA352_0>=HyphenMinusEqualsSign && LA352_0<=SolidusEqualsSign)||LA352_0==EqualsSignEqualsSign||LA352_0==CircumflexAccentEqualsSign||(LA352_0>=In && LA352_0<=VerticalLineVerticalLine)||LA352_0==Ampersand||LA352_0==Comma||LA352_0==Semicolon||LA352_0==EqualsSign||LA352_0==QuestionMark||LA352_0==CircumflexAccent||(LA352_0>=VerticalLine && LA352_0<=RightCurlyBracket)) ) {s = 1;}

                        else if ( (LA352_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA352_0==LessThanSign) && (synpred199_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA352_0==LessThanSignEqualsSign) && (synpred199_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA352_0==GreaterThanSignEqualsSign) && (synpred199_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA352_0==Instanceof) && (synpred199_InternalN4JSXParser())) {s = 6;}

                         
                        input.seek(index352_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA352_2 = input.LA(1);

                         
                        int index352_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA352_2>=4 && LA352_2<=149 && (s=T2S.M_28[LA352_2-(4)])>=0) && (synpred199_InternalN4JSXParser())) { /* 61 cases */ }
                        else if ( (LA352_2==GreaterThanSignEqualsSign||LA352_2==GreaterThanSign) ) {s = 1;}

                         
                        input.seek(index352_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 352, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_231s = "\105\uffff";
    static final String dfa_232s = "\1\1\104\uffff";
    static final String dfa_233s = "\1\7\1\uffff\1\4\102\uffff";
    static final String dfa_234s = "\1\u0099\1\uffff\1\u0095\102\uffff";
    static final String dfa_235s = "\1\uffff\1\2\1\uffff\102\1";
    static final String dfa_236s = "\1\0\1\uffff\1\1\102\uffff}>";
    static final String[] dfa_237s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\1\7\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\2\1\1\3\1\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\1\33\1\26\1\40\1\uffff\1\35\1\41\1\43\1\22\2\uffff\1\21\1\70\3\uffff\1\42\1\20\1\74\2\uffff\1\44\1\uffff\1\23\1\uffff\1\30\1\76\1\37\1\36\2\uffff\1\71\1\uffff\1\57\1\12\1\uffff\1\32\1\uffff\1\14\1\34\3\uffff\1\25\1\61\1\11\1\56\1\31\1\75\6\uffff\1\15\1\17\1\10\1\45\1\16\7\uffff\1\77\1\uffff\1\100\1\uffff\1\63\4\uffff\1\1\2\uffff\1\24\3\uffff\1\27\2\uffff\1\104\2\uffff\1\66\2\uffff\1\101\1\uffff\1\102\1\uffff\1\62\2\uffff\1\46\1\uffff\1\1\1\uffff\1\67\1\64\2\uffff\1\65\2\uffff\1\103\3\uffff\1\47\1\uffff\1\54\1\51\1\52\1\53\1\uffff\1\55\1\uffff\1\13\2\uffff\1\60\11\uffff\1\73\1\72\10\uffff\1\50",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final char[] dfa_233 = DFA.unpackEncodedStringToUnsignedChars(dfa_233s);
    static final char[] dfa_234 = DFA.unpackEncodedStringToUnsignedChars(dfa_234s);
    static final short[] dfa_235 = DFA.unpackEncodedString(dfa_235s);
    static final short[] dfa_236 = DFA.unpackEncodedString(dfa_236s);
    static final short[][] dfa_237 = unpackEncodedStringArray(dfa_237s);

    class DFA353 extends DFA {

        public DFA353(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 353;
            this.eot = dfa_231;
            this.eof = dfa_232;
            this.min = dfa_233;
            this.max = dfa_234;
            this.accept = dfa_235;
            this.special = dfa_236;
            this.transition = dfa_237;
        }
        public String getDescription() {
            return "()* loopback of 21709:1: ( ( ( () ( ( norm1_RelationalOperator ) ) ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= norm1_RelationalOperator ) ) ( ( New | This_1 | Super | Yield | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= ruleShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA353_0 = input.LA(1);

                         
                        int index353_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA353_0==EOF||LA353_0==ExclamationMarkEqualsSignEqualsSign||(LA353_0>=LessThanSignLessThanSignEqualsSign && LA353_0<=EqualsSignEqualsSignEqualsSign)||(LA353_0>=ExclamationMarkEqualsSign && LA353_0<=AsteriskEqualsSign)||LA353_0==PlusSignEqualsSign||(LA353_0>=HyphenMinusEqualsSign && LA353_0<=SolidusEqualsSign)||LA353_0==EqualsSignEqualsSign||LA353_0==CircumflexAccentEqualsSign||(LA353_0>=VerticalLineEqualsSign && LA353_0<=VerticalLineVerticalLine)||LA353_0==Ampersand||LA353_0==RightParenthesis||LA353_0==Comma||(LA353_0>=Colon && LA353_0<=Semicolon)||LA353_0==EqualsSign||LA353_0==QuestionMark||(LA353_0>=RightSquareBracket && LA353_0<=CircumflexAccent)||(LA353_0>=VerticalLine && LA353_0<=RightCurlyBracket)||LA353_0==RULE_ML_COMMENT||LA353_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA353_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA353_0==LessThanSign) && (synpred201_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA353_0==LessThanSignEqualsSign) && (synpred201_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA353_0==GreaterThanSignEqualsSign) && (synpred201_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA353_0==Instanceof) && (synpred201_InternalN4JSXParser())) {s = 6;}

                        else if ( (LA353_0==In) && (synpred201_InternalN4JSXParser())) {s = 7;}

                         
                        input.seek(index353_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA353_2 = input.LA(1);

                         
                        int index353_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA353_2>=4 && LA353_2<=149 && (s=T2S.M_29[LA353_2-(4)])>=0) && (synpred201_InternalN4JSXParser())) { /* 61 cases */ }
                        else if ( (LA353_2==GreaterThanSignEqualsSign||LA353_2==GreaterThanSign) ) {s = 1;}

                         
                        input.seek(index353_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 353, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_238s = "\1\7\1\uffff\1\4\100\uffff";
    static final String dfa_239s = "\1\160\1\uffff\1\u0095\100\uffff";
    static final String dfa_240s = "\1\uffff\1\2\1\uffff\100\1";
    static final String dfa_241s = "\1\1\1\uffff\1\0\100\uffff}>";
    static final String[] dfa_242s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\4\1\2\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\3\1\1\1\2\1\1\3\uffff\1\1\1\uffff\2\1",
            "",
            "\1\31\1\24\1\36\1\uffff\1\33\1\37\1\41\1\20\2\uffff\1\17\1\66\3\uffff\1\40\1\16\1\72\2\uffff\1\42\1\uffff\1\21\1\uffff\1\26\1\74\1\35\1\34\2\uffff\1\67\1\uffff\1\55\1\11\1\uffff\1\30\2\uffff\1\32\3\uffff\1\23\1\57\1\10\1\54\1\27\1\73\6\uffff\1\13\1\15\1\7\1\43\1\14\7\uffff\1\75\1\uffff\1\76\1\uffff\1\61\4\uffff\1\1\2\uffff\1\22\3\uffff\1\25\2\uffff\1\102\2\uffff\1\64\2\uffff\1\77\1\uffff\1\100\1\uffff\1\60\2\uffff\1\44\1\uffff\1\1\1\uffff\1\65\1\62\2\uffff\1\63\2\uffff\1\101\3\uffff\1\45\1\uffff\1\52\1\47\1\50\1\51\1\uffff\1\53\1\uffff\1\12\2\uffff\1\56\11\uffff\1\71\1\70\10\uffff\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final char[] dfa_239 = DFA.unpackEncodedStringToUnsignedChars(dfa_239s);
    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final short[] dfa_241 = DFA.unpackEncodedString(dfa_241s);
    static final short[][] dfa_242 = unpackEncodedStringArray(dfa_242s);

    class DFA354 extends DFA {

        public DFA354(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 354;
            this.eot = dfa_132;
            this.eof = dfa_212;
            this.min = dfa_238;
            this.max = dfa_239;
            this.accept = dfa_240;
            this.special = dfa_241;
            this.transition = dfa_242;
        }
        public String getDescription() {
            return "()* loopback of 22038:1: ( ( ( () ( ( ruleRelationalOperator ) ) ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= ruleRelationalOperator ) ) ( ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= norm1_ShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA354_2 = input.LA(1);

                         
                        int index354_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA354_2==GreaterThanSignEqualsSign||LA354_2==GreaterThanSign) ) {s = 1;}

                        else if ( (LA354_2==New) && (synpred203_InternalN4JSXParser())) {s = 7;}

                        else if ( (LA354_2==This_1) && (synpred203_InternalN4JSXParser())) {s = 8;}

                        else if ( (LA354_2==Super) && (synpred203_InternalN4JSXParser())) {s = 9;}

                        else if ( (LA354_2==RULE_IDENTIFIER) && (synpred203_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA354_2==Get) && (synpred203_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA354_2==Set) && (synpred203_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA354_2==Let) && (synpred203_InternalN4JSXParser())) {s = 13;}

                        else if ( (LA354_2==Project) && (synpred203_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA354_2==External) && (synpred203_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA354_2==Abstract) && (synpred203_InternalN4JSXParser())) {s = 16;}

                        else if ( (LA354_2==Static) && (synpred203_InternalN4JSXParser())) {s = 17;}

                        else if ( (LA354_2==As) && (synpred203_InternalN4JSXParser())) {s = 18;}

                        else if ( (LA354_2==From) && (synpred203_InternalN4JSXParser())) {s = 19;}

                        else if ( (LA354_2==Constructor) && (synpred203_InternalN4JSXParser())) {s = 20;}

                        else if ( (LA354_2==Of) && (synpred203_InternalN4JSXParser())) {s = 21;}

                        else if ( (LA354_2==Target) && (synpred203_InternalN4JSXParser())) {s = 22;}

                        else if ( (LA354_2==Type) && (synpred203_InternalN4JSXParser())) {s = 23;}

                        else if ( (LA354_2==Union) && (synpred203_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA354_2==Intersection) && (synpred203_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA354_2==This) && (synpred203_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA354_2==Promisify) && (synpred203_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA354_2==Await) && (synpred203_InternalN4JSXParser())) {s = 28;}

                        else if ( (LA354_2==Async) && (synpred203_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA354_2==Implements) && (synpred203_InternalN4JSXParser())) {s = 30;}

                        else if ( (LA354_2==Interface) && (synpred203_InternalN4JSXParser())) {s = 31;}

                        else if ( (LA354_2==Private) && (synpred203_InternalN4JSXParser())) {s = 32;}

                        else if ( (LA354_2==Protected) && (synpred203_InternalN4JSXParser())) {s = 33;}

                        else if ( (LA354_2==Public) && (synpred203_InternalN4JSXParser())) {s = 34;}

                        else if ( (LA354_2==Out) && (synpred203_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA354_2==LessThanSign) && (synpred203_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA354_2==RULE_DOUBLE) && (synpred203_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA354_2==RULE_INT) && (synpred203_InternalN4JSXParser())) {s = 38;}

                        else if ( (LA354_2==RULE_BINARY_INT) && (synpred203_InternalN4JSXParser())) {s = 39;}

                        else if ( (LA354_2==RULE_OCTAL_INT) && (synpred203_InternalN4JSXParser())) {s = 40;}

                        else if ( (LA354_2==RULE_LEGACY_OCTAL_INT) && (synpred203_InternalN4JSXParser())) {s = 41;}

                        else if ( (LA354_2==RULE_HEX_INT) && (synpred203_InternalN4JSXParser())) {s = 42;}

                        else if ( (LA354_2==RULE_SCIENTIFIC_INT) && (synpred203_InternalN4JSXParser())) {s = 43;}

                        else if ( (LA354_2==True) && (synpred203_InternalN4JSXParser())) {s = 44;}

                        else if ( (LA354_2==False) && (synpred203_InternalN4JSXParser())) {s = 45;}

                        else if ( (LA354_2==RULE_STRING) && (synpred203_InternalN4JSXParser())) {s = 46;}

                        else if ( (LA354_2==Null) && (synpred203_InternalN4JSXParser())) {s = 47;}

                        else if ( (LA354_2==Solidus) && (synpred203_InternalN4JSXParser())) {s = 48;}

                        else if ( (LA354_2==SolidusEqualsSign) && (synpred203_InternalN4JSXParser())) {s = 49;}

                        else if ( (LA354_2==LeftSquareBracket) && (synpred203_InternalN4JSXParser())) {s = 50;}

                        else if ( (LA354_2==LeftCurlyBracket) && (synpred203_InternalN4JSXParser())) {s = 51;}

                        else if ( (LA354_2==LeftParenthesis) && (synpred203_InternalN4JSXParser())) {s = 52;}

                        else if ( (LA354_2==CommercialAt) && (synpred203_InternalN4JSXParser())) {s = 53;}

                        else if ( (LA354_2==Function) && (synpred203_InternalN4JSXParser())) {s = 54;}

                        else if ( (LA354_2==Class) && (synpred203_InternalN4JSXParser())) {s = 55;}

                        else if ( (LA354_2==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred203_InternalN4JSXParser())) {s = 56;}

                        else if ( (LA354_2==RULE_TEMPLATE_HEAD) && (synpred203_InternalN4JSXParser())) {s = 57;}

                        else if ( (LA354_2==Delete) && (synpred203_InternalN4JSXParser())) {s = 58;}

                        else if ( (LA354_2==Void) && (synpred203_InternalN4JSXParser())) {s = 59;}

                        else if ( (LA354_2==Typeof) && (synpred203_InternalN4JSXParser())) {s = 60;}

                        else if ( (LA354_2==PlusSignPlusSign) && (synpred203_InternalN4JSXParser())) {s = 61;}

                        else if ( (LA354_2==HyphenMinusHyphenMinus) && (synpred203_InternalN4JSXParser())) {s = 62;}

                        else if ( (LA354_2==PlusSign) && (synpred203_InternalN4JSXParser())) {s = 63;}

                        else if ( (LA354_2==HyphenMinus) && (synpred203_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA354_2==Tilde) && (synpred203_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA354_2==ExclamationMark) && (synpred203_InternalN4JSXParser())) {s = 66;}

                         
                        input.seek(index354_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA354_0 = input.LA(1);

                         
                        int index354_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA354_0==EOF||LA354_0==ExclamationMarkEqualsSignEqualsSign||(LA354_0>=LessThanSignLessThanSignEqualsSign && LA354_0<=EqualsSignEqualsSignEqualsSign)||(LA354_0>=ExclamationMarkEqualsSign && LA354_0<=AsteriskEqualsSign)||LA354_0==PlusSignEqualsSign||(LA354_0>=HyphenMinusEqualsSign && LA354_0<=SolidusEqualsSign)||LA354_0==EqualsSignEqualsSign||LA354_0==CircumflexAccentEqualsSign||(LA354_0>=In && LA354_0<=VerticalLineVerticalLine)||LA354_0==Ampersand||LA354_0==Comma||LA354_0==Semicolon||LA354_0==EqualsSign||LA354_0==QuestionMark||LA354_0==CircumflexAccent||(LA354_0>=VerticalLine && LA354_0<=RightCurlyBracket)) ) {s = 1;}

                        else if ( (LA354_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA354_0==LessThanSign) && (synpred203_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA354_0==LessThanSignEqualsSign) && (synpred203_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA354_0==GreaterThanSignEqualsSign) && (synpred203_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA354_0==Instanceof) && (synpred203_InternalN4JSXParser())) {s = 6;}

                         
                        input.seek(index354_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 354, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_243s = "\1\u0099\1\uffff\1\u0095\101\uffff";
    static final String dfa_244s = "\1\1\1\uffff\1\0\101\uffff}>";
    static final String[] dfa_245s = {
            "\1\6\55\uffff\1\1\1\uffff\2\1\10\uffff\5\1\1\uffff\1\1\1\uffff\2\1\1\uffff\1\4\1\1\1\uffff\1\5\1\uffff\1\1\3\uffff\1\7\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\3\uffff\2\1\1\3\1\1\1\2\1\1\2\uffff\2\1\1\uffff\2\1\46\uffff\1\1\1\uffff\1\1",
            "",
            "\1\32\1\25\1\37\1\uffff\1\34\1\40\1\42\1\21\2\uffff\1\20\1\67\3\uffff\1\41\1\17\1\73\2\uffff\1\43\1\uffff\1\22\1\uffff\1\27\1\75\1\36\1\35\2\uffff\1\70\1\uffff\1\56\1\12\1\uffff\1\31\2\uffff\1\33\3\uffff\1\24\1\60\1\11\1\55\1\30\1\74\6\uffff\1\14\1\16\1\10\1\44\1\15\7\uffff\1\76\1\uffff\1\77\1\uffff\1\62\4\uffff\1\1\2\uffff\1\23\3\uffff\1\26\2\uffff\1\103\2\uffff\1\65\2\uffff\1\100\1\uffff\1\101\1\uffff\1\61\2\uffff\1\45\1\uffff\1\1\1\uffff\1\66\1\63\2\uffff\1\64\2\uffff\1\102\3\uffff\1\46\1\uffff\1\53\1\50\1\51\1\52\1\uffff\1\54\1\uffff\1\13\2\uffff\1\57\11\uffff\1\72\1\71\10\uffff\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_243 = DFA.unpackEncodedStringToUnsignedChars(dfa_243s);
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final short[][] dfa_245 = unpackEncodedStringArray(dfa_245s);

    class DFA355 extends DFA {

        public DFA355(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 355;
            this.eot = dfa_224;
            this.eof = dfa_225;
            this.min = dfa_226;
            this.max = dfa_243;
            this.accept = dfa_228;
            this.special = dfa_244;
            this.transition = dfa_245;
        }
        public String getDescription() {
            return "()* loopback of 22362:1: ( ( ( () ( ( norm1_RelationalOperator ) ) ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD ) ) )=> ( () ( (lv_op_2_0= norm1_RelationalOperator ) ) ( ( New | This_1 | Super | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | LeftParenthesis | CommercialAt | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_rhs_3_0= norm1_ShiftExpression ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA355_2 = input.LA(1);

                         
                        int index355_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA355_2==GreaterThanSignEqualsSign||LA355_2==GreaterThanSign) ) {s = 1;}

                        else if ( (LA355_2==New) && (synpred205_InternalN4JSXParser())) {s = 8;}

                        else if ( (LA355_2==This_1) && (synpred205_InternalN4JSXParser())) {s = 9;}

                        else if ( (LA355_2==Super) && (synpred205_InternalN4JSXParser())) {s = 10;}

                        else if ( (LA355_2==RULE_IDENTIFIER) && (synpred205_InternalN4JSXParser())) {s = 11;}

                        else if ( (LA355_2==Get) && (synpred205_InternalN4JSXParser())) {s = 12;}

                        else if ( (LA355_2==Set) && (synpred205_InternalN4JSXParser())) {s = 13;}

                        else if ( (LA355_2==Let) && (synpred205_InternalN4JSXParser())) {s = 14;}

                        else if ( (LA355_2==Project) && (synpred205_InternalN4JSXParser())) {s = 15;}

                        else if ( (LA355_2==External) && (synpred205_InternalN4JSXParser())) {s = 16;}

                        else if ( (LA355_2==Abstract) && (synpred205_InternalN4JSXParser())) {s = 17;}

                        else if ( (LA355_2==Static) && (synpred205_InternalN4JSXParser())) {s = 18;}

                        else if ( (LA355_2==As) && (synpred205_InternalN4JSXParser())) {s = 19;}

                        else if ( (LA355_2==From) && (synpred205_InternalN4JSXParser())) {s = 20;}

                        else if ( (LA355_2==Constructor) && (synpred205_InternalN4JSXParser())) {s = 21;}

                        else if ( (LA355_2==Of) && (synpred205_InternalN4JSXParser())) {s = 22;}

                        else if ( (LA355_2==Target) && (synpred205_InternalN4JSXParser())) {s = 23;}

                        else if ( (LA355_2==Type) && (synpred205_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA355_2==Union) && (synpred205_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA355_2==Intersection) && (synpred205_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA355_2==This) && (synpred205_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA355_2==Promisify) && (synpred205_InternalN4JSXParser())) {s = 28;}

                        else if ( (LA355_2==Await) && (synpred205_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA355_2==Async) && (synpred205_InternalN4JSXParser())) {s = 30;}

                        else if ( (LA355_2==Implements) && (synpred205_InternalN4JSXParser())) {s = 31;}

                        else if ( (LA355_2==Interface) && (synpred205_InternalN4JSXParser())) {s = 32;}

                        else if ( (LA355_2==Private) && (synpred205_InternalN4JSXParser())) {s = 33;}

                        else if ( (LA355_2==Protected) && (synpred205_InternalN4JSXParser())) {s = 34;}

                        else if ( (LA355_2==Public) && (synpred205_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA355_2==Out) && (synpred205_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA355_2==LessThanSign) && (synpred205_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA355_2==RULE_DOUBLE) && (synpred205_InternalN4JSXParser())) {s = 38;}

                        else if ( (LA355_2==RULE_INT) && (synpred205_InternalN4JSXParser())) {s = 39;}

                        else if ( (LA355_2==RULE_BINARY_INT) && (synpred205_InternalN4JSXParser())) {s = 40;}

                        else if ( (LA355_2==RULE_OCTAL_INT) && (synpred205_InternalN4JSXParser())) {s = 41;}

                        else if ( (LA355_2==RULE_LEGACY_OCTAL_INT) && (synpred205_InternalN4JSXParser())) {s = 42;}

                        else if ( (LA355_2==RULE_HEX_INT) && (synpred205_InternalN4JSXParser())) {s = 43;}

                        else if ( (LA355_2==RULE_SCIENTIFIC_INT) && (synpred205_InternalN4JSXParser())) {s = 44;}

                        else if ( (LA355_2==True) && (synpred205_InternalN4JSXParser())) {s = 45;}

                        else if ( (LA355_2==False) && (synpred205_InternalN4JSXParser())) {s = 46;}

                        else if ( (LA355_2==RULE_STRING) && (synpred205_InternalN4JSXParser())) {s = 47;}

                        else if ( (LA355_2==Null) && (synpred205_InternalN4JSXParser())) {s = 48;}

                        else if ( (LA355_2==Solidus) && (synpred205_InternalN4JSXParser())) {s = 49;}

                        else if ( (LA355_2==SolidusEqualsSign) && (synpred205_InternalN4JSXParser())) {s = 50;}

                        else if ( (LA355_2==LeftSquareBracket) && (synpred205_InternalN4JSXParser())) {s = 51;}

                        else if ( (LA355_2==LeftCurlyBracket) && (synpred205_InternalN4JSXParser())) {s = 52;}

                        else if ( (LA355_2==LeftParenthesis) && (synpred205_InternalN4JSXParser())) {s = 53;}

                        else if ( (LA355_2==CommercialAt) && (synpred205_InternalN4JSXParser())) {s = 54;}

                        else if ( (LA355_2==Function) && (synpred205_InternalN4JSXParser())) {s = 55;}

                        else if ( (LA355_2==Class) && (synpred205_InternalN4JSXParser())) {s = 56;}

                        else if ( (LA355_2==RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL) && (synpred205_InternalN4JSXParser())) {s = 57;}

                        else if ( (LA355_2==RULE_TEMPLATE_HEAD) && (synpred205_InternalN4JSXParser())) {s = 58;}

                        else if ( (LA355_2==Delete) && (synpred205_InternalN4JSXParser())) {s = 59;}

                        else if ( (LA355_2==Void) && (synpred205_InternalN4JSXParser())) {s = 60;}

                        else if ( (LA355_2==Typeof) && (synpred205_InternalN4JSXParser())) {s = 61;}

                        else if ( (LA355_2==PlusSignPlusSign) && (synpred205_InternalN4JSXParser())) {s = 62;}

                        else if ( (LA355_2==HyphenMinusHyphenMinus) && (synpred205_InternalN4JSXParser())) {s = 63;}

                        else if ( (LA355_2==PlusSign) && (synpred205_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA355_2==HyphenMinus) && (synpred205_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA355_2==Tilde) && (synpred205_InternalN4JSXParser())) {s = 66;}

                        else if ( (LA355_2==ExclamationMark) && (synpred205_InternalN4JSXParser())) {s = 67;}

                         
                        input.seek(index355_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA355_0 = input.LA(1);

                         
                        int index355_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA355_0==EOF||LA355_0==ExclamationMarkEqualsSignEqualsSign||(LA355_0>=LessThanSignLessThanSignEqualsSign && LA355_0<=EqualsSignEqualsSignEqualsSign)||(LA355_0>=ExclamationMarkEqualsSign && LA355_0<=AsteriskEqualsSign)||LA355_0==PlusSignEqualsSign||(LA355_0>=HyphenMinusEqualsSign && LA355_0<=SolidusEqualsSign)||LA355_0==EqualsSignEqualsSign||LA355_0==CircumflexAccentEqualsSign||(LA355_0>=VerticalLineEqualsSign && LA355_0<=VerticalLineVerticalLine)||LA355_0==Ampersand||LA355_0==RightParenthesis||LA355_0==Comma||(LA355_0>=Colon && LA355_0<=Semicolon)||LA355_0==EqualsSign||LA355_0==QuestionMark||(LA355_0>=RightSquareBracket && LA355_0<=CircumflexAccent)||(LA355_0>=VerticalLine && LA355_0<=RightCurlyBracket)||LA355_0==RULE_ML_COMMENT||LA355_0==RULE_EOL) ) {s = 1;}

                        else if ( (LA355_0==GreaterThanSign) ) {s = 2;}

                        else if ( (LA355_0==LessThanSign) && (synpred205_InternalN4JSXParser())) {s = 3;}

                        else if ( (LA355_0==LessThanSignEqualsSign) && (synpred205_InternalN4JSXParser())) {s = 4;}

                        else if ( (LA355_0==GreaterThanSignEqualsSign) && (synpred205_InternalN4JSXParser())) {s = 5;}

                        else if ( (LA355_0==Instanceof) && (synpred205_InternalN4JSXParser())) {s = 6;}

                        else if ( (LA355_0==In) && (synpred205_InternalN4JSXParser())) {s = 7;}

                         
                        input.seek(index355_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 355, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_246s = "\101\uffff";
    static final String dfa_247s = "\1\4\4\0\1\uffff\31\0\42\uffff";
    static final String dfa_248s = "\1\u0095\4\0\1\uffff\31\0\42\uffff";
    static final String dfa_249s = "\5\uffff\1\3\31\uffff\1\4\37\uffff\1\1\1\2";
    static final String dfa_250s = "\1\0\1\1\1\2\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\42\uffff}>";
    static final String[] dfa_251s = {
            "\1\26\1\21\1\31\1\uffff\1\30\1\32\1\34\1\15\2\uffff\1\14\1\37\3\uffff\1\33\1\13\1\37\2\uffff\1\35\1\uffff\1\16\1\uffff\1\23\1\37\1\4\1\1\2\uffff\1\37\1\uffff\2\37\1\uffff\1\25\1\uffff\1\7\1\27\3\uffff\1\20\3\37\1\24\1\37\6\uffff\1\10\1\12\1\37\1\36\1\11\7\uffff\1\37\1\uffff\1\37\1\uffff\1\37\7\uffff\1\17\3\uffff\1\22\2\uffff\1\37\2\uffff\1\3\1\uffff\1\5\1\37\1\uffff\1\37\1\uffff\1\37\2\uffff\1\37\3\uffff\1\2\1\37\2\uffff\1\37\2\uffff\1\37\3\uffff\1\37\1\uffff\4\37\1\uffff\1\37\1\uffff\1\6\2\uffff\1\37\11\uffff\2\37\10\uffff\1\37",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final char[] dfa_247 = DFA.unpackEncodedStringToUnsignedChars(dfa_247s);
    static final char[] dfa_248 = DFA.unpackEncodedStringToUnsignedChars(dfa_248s);
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final short[] dfa_250 = DFA.unpackEncodedString(dfa_250s);
    static final short[][] dfa_251 = unpackEncodedStringArray(dfa_251s);

    class DFA387 extends DFA {

        public DFA387(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 387;
            this.eot = dfa_246;
            this.eof = dfa_246;
            this.min = dfa_247;
            this.max = dfa_248;
            this.accept = dfa_249;
            this.special = dfa_250;
            this.transition = dfa_251;
        }
        public String getDescription() {
            return "24956:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= ruleAwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= rulePromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ruleBindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= ruleArrowExpression ) | (this_ConditionalExpression_3= ruleConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= ruleAssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA387_0 = input.LA(1);

                         
                        int index387_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA387_0==Await) ) {s = 1;}

                        else if ( (LA387_0==CommercialAt) ) {s = 2;}

                        else if ( (LA387_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA387_0==Async) ) {s = 4;}

                        else if ( (LA387_0==Asterisk) && (synpred240_InternalN4JSXParser())) {s = 5;}

                        
                        else if ((LA387_0>=4 && LA387_0<=126 && (s=T2S.M_30[LA387_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA387_0==Function||LA387_0==Delete||LA387_0==Typeof||LA387_0==Class||(LA387_0>=False && LA387_0<=Super)||(LA387_0>=Null && LA387_0<=True)||LA387_0==Void||LA387_0==New||LA387_0==PlusSignPlusSign||LA387_0==HyphenMinusHyphenMinus||LA387_0==SolidusEqualsSign||LA387_0==ExclamationMark||LA387_0==PlusSign||LA387_0==HyphenMinus||LA387_0==Solidus||LA387_0==LessThanSign||LA387_0==LeftSquareBracket||LA387_0==LeftCurlyBracket||LA387_0==Tilde||LA387_0==RULE_DOUBLE||(LA387_0>=RULE_HEX_INT && LA387_0<=RULE_LEGACY_OCTAL_INT)||LA387_0==RULE_SCIENTIFIC_INT||LA387_0==RULE_STRING||(LA387_0>=RULE_TEMPLATE_HEAD && LA387_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA387_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index387_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA387_1 = input.LA(1);

                         
                        int index387_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA387_2 = input.LA(1);

                         
                        int index387_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA387_3 = input.LA(1);

                         
                        int index387_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA387_4 = input.LA(1);

                         
                        int index387_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA387_6 = input.LA(1);

                         
                        int index387_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA387_7 = input.LA(1);

                         
                        int index387_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA387_8 = input.LA(1);

                         
                        int index387_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA387_9 = input.LA(1);

                         
                        int index387_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA387_10 = input.LA(1);

                         
                        int index387_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA387_11 = input.LA(1);

                         
                        int index387_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA387_12 = input.LA(1);

                         
                        int index387_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA387_13 = input.LA(1);

                         
                        int index387_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA387_14 = input.LA(1);

                         
                        int index387_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA387_15 = input.LA(1);

                         
                        int index387_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA387_16 = input.LA(1);

                         
                        int index387_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA387_17 = input.LA(1);

                         
                        int index387_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA387_18 = input.LA(1);

                         
                        int index387_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA387_19 = input.LA(1);

                         
                        int index387_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA387_20 = input.LA(1);

                         
                        int index387_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA387_21 = input.LA(1);

                         
                        int index387_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA387_22 = input.LA(1);

                         
                        int index387_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA387_23 = input.LA(1);

                         
                        int index387_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA387_24 = input.LA(1);

                         
                        int index387_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA387_25 = input.LA(1);

                         
                        int index387_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA387_26 = input.LA(1);

                         
                        int index387_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA387_27 = input.LA(1);

                         
                        int index387_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA387_28 = input.LA(1);

                         
                        int index387_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA387_29 = input.LA(1);

                         
                        int index387_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA387_30 = input.LA(1);

                         
                        int index387_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index387_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 387, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_252s = "\1\14\15\uffff";
    static final String dfa_253s = "\1\67\13\0\2\uffff";
    static final String dfa_254s = "\1\160\13\0\2\uffff";
    static final String dfa_255s = "\14\uffff\1\2\1\1";
    static final String dfa_256s = "\1\uffff\1\0\1\6\1\1\1\7\1\2\1\10\1\3\1\5\1\11\1\4\1\12\2\uffff}>";
    static final String[] dfa_257s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\3\uffff\2\14\1\13\10\uffff\1\14\4\uffff\1\14\1\uffff\1\1\1\10\7\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final char[] dfa_253 = DFA.unpackEncodedStringToUnsignedChars(dfa_253s);
    static final char[] dfa_254 = DFA.unpackEncodedStringToUnsignedChars(dfa_254s);
    static final short[] dfa_255 = DFA.unpackEncodedString(dfa_255s);
    static final short[] dfa_256 = DFA.unpackEncodedString(dfa_256s);
    static final short[][] dfa_257 = unpackEncodedStringArray(dfa_257s);

    class DFA386 extends DFA {

        public DFA386(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 386;
            this.eot = dfa_18;
            this.eof = dfa_252;
            this.min = dfa_253;
            this.max = dfa_254;
            this.accept = dfa_255;
            this.special = dfa_256;
            this.transition = dfa_257;
        }
        public String getDescription() {
            return "25092:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= ruleAssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA386_1 = input.LA(1);

                         
                        int index386_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA386_3 = input.LA(1);

                         
                        int index386_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA386_5 = input.LA(1);

                         
                        int index386_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA386_7 = input.LA(1);

                         
                        int index386_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA386_10 = input.LA(1);

                         
                        int index386_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA386_8 = input.LA(1);

                         
                        int index386_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA386_2 = input.LA(1);

                         
                        int index386_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA386_4 = input.LA(1);

                         
                        int index386_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA386_6 = input.LA(1);

                         
                        int index386_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA386_9 = input.LA(1);

                         
                        int index386_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA386_11 = input.LA(1);

                         
                        int index386_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred241_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index386_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 386, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA389 extends DFA {

        public DFA389(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 389;
            this.eot = dfa_246;
            this.eof = dfa_246;
            this.min = dfa_247;
            this.max = dfa_248;
            this.accept = dfa_249;
            this.special = dfa_250;
            this.transition = dfa_251;
        }
        public String getDescription() {
            return "25152:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm1_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm1_PromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( ruleFormalParameter ) ) ( Comma ( ( ruleFormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ruleBindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm1_ArrowExpression ) | (this_ConditionalExpression_3= norm1_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= norm1_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA389_0 = input.LA(1);

                         
                        int index389_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA389_0==Await) ) {s = 1;}

                        else if ( (LA389_0==CommercialAt) ) {s = 2;}

                        else if ( (LA389_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA389_0==Async) ) {s = 4;}

                        else if ( (LA389_0==Asterisk) && (synpred247_InternalN4JSXParser())) {s = 5;}

                        
                        else if ((LA389_0>=4 && LA389_0<=126 && (s=T2S.M_30[LA389_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA389_0==Function||LA389_0==Delete||LA389_0==Typeof||LA389_0==Class||(LA389_0>=False && LA389_0<=Super)||(LA389_0>=Null && LA389_0<=True)||LA389_0==Void||LA389_0==New||LA389_0==PlusSignPlusSign||LA389_0==HyphenMinusHyphenMinus||LA389_0==SolidusEqualsSign||LA389_0==ExclamationMark||LA389_0==PlusSign||LA389_0==HyphenMinus||LA389_0==Solidus||LA389_0==LessThanSign||LA389_0==LeftSquareBracket||LA389_0==LeftCurlyBracket||LA389_0==Tilde||LA389_0==RULE_DOUBLE||(LA389_0>=RULE_HEX_INT && LA389_0<=RULE_LEGACY_OCTAL_INT)||LA389_0==RULE_SCIENTIFIC_INT||LA389_0==RULE_STRING||(LA389_0>=RULE_TEMPLATE_HEAD && LA389_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA389_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index389_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA389_1 = input.LA(1);

                         
                        int index389_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred242_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA389_2 = input.LA(1);

                         
                        int index389_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA389_3 = input.LA(1);

                         
                        int index389_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA389_4 = input.LA(1);

                         
                        int index389_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA389_6 = input.LA(1);

                         
                        int index389_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA389_7 = input.LA(1);

                         
                        int index389_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA389_8 = input.LA(1);

                         
                        int index389_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA389_9 = input.LA(1);

                         
                        int index389_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA389_10 = input.LA(1);

                         
                        int index389_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA389_11 = input.LA(1);

                         
                        int index389_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA389_12 = input.LA(1);

                         
                        int index389_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA389_13 = input.LA(1);

                         
                        int index389_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA389_14 = input.LA(1);

                         
                        int index389_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA389_15 = input.LA(1);

                         
                        int index389_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA389_16 = input.LA(1);

                         
                        int index389_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA389_17 = input.LA(1);

                         
                        int index389_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA389_18 = input.LA(1);

                         
                        int index389_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA389_19 = input.LA(1);

                         
                        int index389_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA389_20 = input.LA(1);

                         
                        int index389_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA389_21 = input.LA(1);

                         
                        int index389_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA389_22 = input.LA(1);

                         
                        int index389_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA389_23 = input.LA(1);

                         
                        int index389_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA389_24 = input.LA(1);

                         
                        int index389_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA389_25 = input.LA(1);

                         
                        int index389_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA389_26 = input.LA(1);

                         
                        int index389_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA389_27 = input.LA(1);

                         
                        int index389_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA389_28 = input.LA(1);

                         
                        int index389_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA389_29 = input.LA(1);

                         
                        int index389_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA389_30 = input.LA(1);

                         
                        int index389_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred247_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index389_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 389, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_258s = "\1\u0099\13\0\2\uffff";
    static final String[] dfa_259s = {
            "\1\7\12\uffff\1\4\1\uffff\1\11\1\2\1\uffff\1\5\1\uffff\1\6\1\3\6\uffff\1\12\5\uffff\1\13\5\uffff\1\14\2\uffff\1\14\3\uffff\2\14\1\uffff\1\1\1\10\3\uffff\1\14\3\uffff\1\14\46\uffff\1\14\1\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final short[][] dfa_259 = unpackEncodedStringArray(dfa_259s);

    class DFA388 extends DFA {

        public DFA388(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 388;
            this.eot = dfa_18;
            this.eof = dfa_252;
            this.min = dfa_253;
            this.max = dfa_258;
            this.accept = dfa_255;
            this.special = dfa_256;
            this.transition = dfa_259;
        }
        public String getDescription() {
            return "25288:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_5_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_6_0= norm1_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA388_1 = input.LA(1);

                         
                        int index388_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA388_3 = input.LA(1);

                         
                        int index388_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA388_5 = input.LA(1);

                         
                        int index388_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA388_7 = input.LA(1);

                         
                        int index388_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA388_10 = input.LA(1);

                         
                        int index388_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA388_8 = input.LA(1);

                         
                        int index388_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA388_2 = input.LA(1);

                         
                        int index388_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA388_4 = input.LA(1);

                         
                        int index388_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA388_6 = input.LA(1);

                         
                        int index388_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_6);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA388_9 = input.LA(1);

                         
                        int index388_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA388_11 = input.LA(1);

                         
                        int index388_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index388_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 388, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_260s = "\1\4\4\0\1\uffff\30\0\43\uffff";
    static final String dfa_261s = "\1\u0095\4\0\1\uffff\30\0\43\uffff";
    static final String dfa_262s = "\5\uffff\1\3\30\uffff\1\4\1\5\37\uffff\1\1\1\2";
    static final String dfa_263s = "\1\0\1\1\1\2\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\43\uffff}>";
    static final String[] dfa_264s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\37\3\uffff\1\32\1\12\1\37\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\37\1\4\1\1\2\uffff\1\37\1\uffff\2\37\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\3\37\1\23\1\37\6\uffff\1\7\1\11\1\37\1\35\1\10\7\uffff\1\37\1\uffff\1\37\1\uffff\1\37\7\uffff\1\16\3\uffff\1\21\2\uffff\1\37\2\uffff\1\3\1\uffff\1\5\1\37\1\uffff\1\37\1\uffff\1\37\2\uffff\1\37\3\uffff\1\2\1\37\2\uffff\1\37\2\uffff\1\37\3\uffff\1\37\1\uffff\4\37\1\uffff\1\37\1\uffff\1\6\2\uffff\1\37\11\uffff\2\37\10\uffff\1\37",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final char[] dfa_261 = DFA.unpackEncodedStringToUnsignedChars(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[] dfa_263 = DFA.unpackEncodedString(dfa_263s);
    static final short[][] dfa_264 = unpackEncodedStringArray(dfa_264s);

    class DFA391 extends DFA {

        public DFA391(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 391;
            this.eot = dfa_246;
            this.eof = dfa_246;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_262;
            this.special = dfa_263;
            this.transition = dfa_264;
        }
        public String getDescription() {
            return "25348:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm2_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm2_PromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( norm1_BindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm2_ArrowExpression ) | this_YieldExpression_3= ruleYieldExpression | (this_ConditionalExpression_4= norm2_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm2_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA391_0 = input.LA(1);

                         
                        int index391_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA391_0==Await) ) {s = 1;}

                        else if ( (LA391_0==CommercialAt) ) {s = 2;}

                        else if ( (LA391_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA391_0==Async) ) {s = 4;}

                        else if ( (LA391_0==Asterisk) && (synpred254_InternalN4JSXParser())) {s = 5;}

                        
                        else if ((LA391_0>=4 && LA391_0<=126 && (s=T2S.M_32[LA391_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA391_0==Function||LA391_0==Delete||LA391_0==Typeof||LA391_0==Class||(LA391_0>=False && LA391_0<=Super)||(LA391_0>=Null && LA391_0<=True)||LA391_0==Void||LA391_0==New||LA391_0==PlusSignPlusSign||LA391_0==HyphenMinusHyphenMinus||LA391_0==SolidusEqualsSign||LA391_0==ExclamationMark||LA391_0==PlusSign||LA391_0==HyphenMinus||LA391_0==Solidus||LA391_0==LessThanSign||LA391_0==LeftSquareBracket||LA391_0==LeftCurlyBracket||LA391_0==Tilde||LA391_0==RULE_DOUBLE||(LA391_0>=RULE_HEX_INT && LA391_0<=RULE_LEGACY_OCTAL_INT)||LA391_0==RULE_SCIENTIFIC_INT||LA391_0==RULE_STRING||(LA391_0>=RULE_TEMPLATE_HEAD && LA391_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA391_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index391_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA391_1 = input.LA(1);

                         
                        int index391_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred249_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA391_2 = input.LA(1);

                         
                        int index391_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred250_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA391_3 = input.LA(1);

                         
                        int index391_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA391_4 = input.LA(1);

                         
                        int index391_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA391_6 = input.LA(1);

                         
                        int index391_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA391_7 = input.LA(1);

                         
                        int index391_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA391_8 = input.LA(1);

                         
                        int index391_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA391_9 = input.LA(1);

                         
                        int index391_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA391_10 = input.LA(1);

                         
                        int index391_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA391_11 = input.LA(1);

                         
                        int index391_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA391_12 = input.LA(1);

                         
                        int index391_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA391_13 = input.LA(1);

                         
                        int index391_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA391_14 = input.LA(1);

                         
                        int index391_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA391_15 = input.LA(1);

                         
                        int index391_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA391_16 = input.LA(1);

                         
                        int index391_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA391_17 = input.LA(1);

                         
                        int index391_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA391_18 = input.LA(1);

                         
                        int index391_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA391_19 = input.LA(1);

                         
                        int index391_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA391_20 = input.LA(1);

                         
                        int index391_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA391_21 = input.LA(1);

                         
                        int index391_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA391_22 = input.LA(1);

                         
                        int index391_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA391_23 = input.LA(1);

                         
                        int index391_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA391_24 = input.LA(1);

                         
                        int index391_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA391_25 = input.LA(1);

                         
                        int index391_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA391_26 = input.LA(1);

                         
                        int index391_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA391_27 = input.LA(1);

                         
                        int index391_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA391_28 = input.LA(1);

                         
                        int index391_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA391_29 = input.LA(1);

                         
                        int index391_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred254_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index391_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 391, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_265s = "\1\uffff\1\5\1\10\1\0\1\2\1\6\1\11\1\1\1\4\1\3\1\7\1\12\2\uffff}>";
    static final short[] dfa_265 = DFA.unpackEncodedString(dfa_265s);

    class DFA390 extends DFA {

        public DFA390(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 390;
            this.eot = dfa_18;
            this.eof = dfa_252;
            this.min = dfa_253;
            this.max = dfa_254;
            this.accept = dfa_255;
            this.special = dfa_265;
            this.transition = dfa_257;
        }
        public String getDescription() {
            return "25494:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm2_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA390_3 = input.LA(1);

                         
                        int index390_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA390_7 = input.LA(1);

                         
                        int index390_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA390_4 = input.LA(1);

                         
                        int index390_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA390_9 = input.LA(1);

                         
                        int index390_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA390_8 = input.LA(1);

                         
                        int index390_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA390_1 = input.LA(1);

                         
                        int index390_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA390_5 = input.LA(1);

                         
                        int index390_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA390_10 = input.LA(1);

                         
                        int index390_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA390_2 = input.LA(1);

                         
                        int index390_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_2);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA390_6 = input.LA(1);

                         
                        int index390_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_6);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA390_11 = input.LA(1);

                         
                        int index390_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index390_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 390, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA393 extends DFA {

        public DFA393(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 393;
            this.eot = dfa_246;
            this.eof = dfa_246;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_262;
            this.special = dfa_263;
            this.transition = dfa_264;
        }
        public String getDescription() {
            return "25554:1: ( ( ( ( () Await ) )=>this_AwaitExpression_0= norm3_AwaitExpression ) | ( ( ( () CommercialAt Promisify ) )=>this_PromisifyExpression_1= norm3_PromisifyExpression ) | ( ( ( ( ( ( ( LeftParenthesis )=> LeftParenthesis ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Async )=> ( ( ( Async ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( ( Asterisk )=> ( ( ( Asterisk ) ) ruleNoLineTerminator[null] LeftParenthesis ) ) ( ( ( norm1_FormalParameter ) ) ( Comma ( ( norm1_FormalParameter ) ) )* )? RightParenthesis ( Colon ( ( ruleTypeRef ) ) )? ) | ( ( norm1_BindingIdentifierAsFormalParameter ) ) ) EqualsSignGreaterThanSign ) )=>this_ArrowExpression_2= norm3_ArrowExpression ) | this_YieldExpression_3= norm1_YieldExpression | (this_ConditionalExpression_4= norm3_ConditionalExpression ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm3_AssignmentExpression ) ) )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA393_0 = input.LA(1);

                         
                        int index393_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA393_0==Await) ) {s = 1;}

                        else if ( (LA393_0==CommercialAt) ) {s = 2;}

                        else if ( (LA393_0==LeftParenthesis) ) {s = 3;}

                        else if ( (LA393_0==Async) ) {s = 4;}

                        else if ( (LA393_0==Asterisk) && (synpred261_InternalN4JSXParser())) {s = 5;}

                        
                        else if ((LA393_0>=4 && LA393_0<=126 && (s=T2S.M_32[LA393_0-(4)])>=0)) { /* 26 cases */ }
                        else if ( (LA393_0==Function||LA393_0==Delete||LA393_0==Typeof||LA393_0==Class||(LA393_0>=False && LA393_0<=Super)||(LA393_0>=Null && LA393_0<=True)||LA393_0==Void||LA393_0==New||LA393_0==PlusSignPlusSign||LA393_0==HyphenMinusHyphenMinus||LA393_0==SolidusEqualsSign||LA393_0==ExclamationMark||LA393_0==PlusSign||LA393_0==HyphenMinus||LA393_0==Solidus||LA393_0==LessThanSign||LA393_0==LeftSquareBracket||LA393_0==LeftCurlyBracket||LA393_0==Tilde||LA393_0==RULE_DOUBLE||(LA393_0>=RULE_HEX_INT && LA393_0<=RULE_LEGACY_OCTAL_INT)||LA393_0==RULE_SCIENTIFIC_INT||LA393_0==RULE_STRING||(LA393_0>=RULE_TEMPLATE_HEAD && LA393_0<=RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL)||LA393_0==RULE_INT) ) {s = 31;}

                         
                        input.seek(index393_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA393_1 = input.LA(1);

                         
                        int index393_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_InternalN4JSXParser()) ) {s = 63;}

                        else if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA393_2 = input.LA(1);

                         
                        int index393_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalN4JSXParser()) ) {s = 64;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA393_3 = input.LA(1);

                         
                        int index393_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA393_4 = input.LA(1);

                         
                        int index393_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA393_6 = input.LA(1);

                         
                        int index393_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA393_7 = input.LA(1);

                         
                        int index393_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA393_8 = input.LA(1);

                         
                        int index393_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA393_9 = input.LA(1);

                         
                        int index393_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA393_10 = input.LA(1);

                         
                        int index393_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA393_11 = input.LA(1);

                         
                        int index393_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA393_12 = input.LA(1);

                         
                        int index393_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA393_13 = input.LA(1);

                         
                        int index393_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA393_14 = input.LA(1);

                         
                        int index393_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA393_15 = input.LA(1);

                         
                        int index393_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA393_16 = input.LA(1);

                         
                        int index393_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA393_17 = input.LA(1);

                         
                        int index393_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA393_18 = input.LA(1);

                         
                        int index393_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA393_19 = input.LA(1);

                         
                        int index393_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA393_20 = input.LA(1);

                         
                        int index393_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA393_21 = input.LA(1);

                         
                        int index393_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA393_22 = input.LA(1);

                         
                        int index393_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA393_23 = input.LA(1);

                         
                        int index393_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA393_24 = input.LA(1);

                         
                        int index393_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA393_25 = input.LA(1);

                         
                        int index393_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA393_26 = input.LA(1);

                         
                        int index393_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA393_27 = input.LA(1);

                         
                        int index393_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA393_28 = input.LA(1);

                         
                        int index393_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA393_29 = input.LA(1);

                         
                        int index393_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_InternalN4JSXParser()) ) {s = 5;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index393_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 393, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_266s = "\1\uffff\1\2\1\5\1\11\1\0\1\3\1\6\1\12\1\10\1\1\1\4\1\7\2\uffff}>";
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);

    class DFA392 extends DFA {

        public DFA392(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 392;
            this.eot = dfa_18;
            this.eof = dfa_252;
            this.min = dfa_253;
            this.max = dfa_258;
            this.accept = dfa_255;
            this.special = dfa_266;
            this.transition = dfa_259;
        }
        public String getDescription() {
            return "25700:1: ( ( ( ( () ( ( ruleAssignmentOperator ) ) ) )=> ( () ( (lv_op_6_0= ruleAssignmentOperator ) ) ) ) ( (lv_rhs_7_0= norm3_AssignmentExpression ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA392_4 = input.LA(1);

                         
                        int index392_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA392_9 = input.LA(1);

                         
                        int index392_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA392_1 = input.LA(1);

                         
                        int index392_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA392_5 = input.LA(1);

                         
                        int index392_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA392_10 = input.LA(1);

                         
                        int index392_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA392_2 = input.LA(1);

                         
                        int index392_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_2);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA392_6 = input.LA(1);

                         
                        int index392_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA392_11 = input.LA(1);

                         
                        int index392_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_11);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA392_8 = input.LA(1);

                         
                        int index392_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA392_3 = input.LA(1);

                         
                        int index392_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_3);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA392_7 = input.LA(1);

                         
                        int index392_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred262_InternalN4JSXParser()) ) {s = 13;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index392_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 392, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_267s = "\1\2\116\uffff";
    static final String[] dfa_268s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\5\2\3\uffff\1\2\1\uffff\7\2\6\uffff\2\2\2\uffff\3\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\1\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final short[][] dfa_268 = unpackEncodedStringArray(dfa_268s);

    class DFA394 extends DFA {

        public DFA394(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 394;
            this.eot = dfa_113;
            this.eof = dfa_267;
            this.min = dfa_114;
            this.max = dfa_115;
            this.accept = dfa_116;
            this.special = dfa_117;
            this.transition = dfa_268;
        }
        public String getDescription() {
            return "25779:1: ( ( ( Asterisk ) )=> (lv_many_2_0= Asterisk ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA394_1 = input.LA(1);

                         
                        int index394_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred263_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index394_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 394, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_269s = "\116\uffff";
    static final String dfa_270s = "\1\77\115\uffff";
    static final String dfa_271s = "\1\4\20\uffff\1\0\35\uffff\1\0\36\uffff";
    static final String dfa_272s = "\1\u0095\20\uffff\1\0\35\uffff\1\0\36\uffff";
    static final String dfa_273s = "\1\uffff\20\1\1\uffff\35\1\1\uffff\17\1\1\2\16\uffff";
    static final String dfa_274s = "\1\0\20\uffff\1\1\35\uffff\1\2\36\uffff}>";
    static final String[] dfa_275s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\62\3\uffff\1\32\1\12\1\66\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\1\55\1\40\1\52\1\23\1\67\3\uffff\1\77\2\uffff\1\7\1\11\1\37\1\35\1\10\3\uffff\1\77\1\uffff\2\77\1\71\1\77\1\72\1\77\1\57\6\uffff\1\77\1\16\2\uffff\1\77\1\21\1\77\1\uffff\1\76\2\uffff\1\3\1\uffff\1\5\1\73\1\77\1\74\1\uffff\1\56\1\uffff\1\77\1\42\2\77\1\uffff\1\2\1\60\2\uffff\1\61\1\uffff\1\77\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_269 = DFA.unpackEncodedString(dfa_269s);
    static final short[] dfa_270 = DFA.unpackEncodedString(dfa_270s);
    static final char[] dfa_271 = DFA.unpackEncodedStringToUnsignedChars(dfa_271s);
    static final char[] dfa_272 = DFA.unpackEncodedStringToUnsignedChars(dfa_272s);
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final short[] dfa_274 = DFA.unpackEncodedString(dfa_274s);
    static final short[][] dfa_275 = unpackEncodedStringArray(dfa_275s);

    class DFA395 extends DFA {

        public DFA395(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 395;
            this.eot = dfa_269;
            this.eof = dfa_270;
            this.min = dfa_271;
            this.max = dfa_272;
            this.accept = dfa_273;
            this.special = dfa_274;
            this.transition = dfa_275;
        }
        public String getDescription() {
            return "25802:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_3_0= norm2_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA395_0 = input.LA(1);

                         
                        int index395_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA395_0>=5 && LA395_0<=126 && (s=T2S.M_34[LA395_0-(5)])>=0) && (synpred264_InternalN4JSXParser())) { /* 16 cases */ }
                        else if ( (LA395_0==Of) ) {s = 17;}

                        
                        else if ((LA395_0>=4 && LA395_0<=149 && (s=T2S.M_35[LA395_0-(4)])>=0) && (synpred264_InternalN4JSXParser())) { /* 30 cases */ }
                        else if ( (LA395_0==SolidusEqualsSign) ) {s = 47;}

                        
                        else if ((LA395_0>=15 && LA395_0<=140 && (s=T2S.M_36[LA395_0-(15)])>=0) && (synpred264_InternalN4JSXParser())) { /* 16 cases */ }
                        else if ( (LA395_0==EOF||LA395_0==LessThanSignLessThanSignEqualsSign||LA395_0==PercentSignEqualsSign||(LA395_0>=AmpersandEqualsSign && LA395_0<=AsteriskEqualsSign)||LA395_0==PlusSignEqualsSign||LA395_0==HyphenMinusEqualsSign||LA395_0==CircumflexAccentEqualsSign||LA395_0==In||LA395_0==VerticalLineEqualsSign||LA395_0==Comma||LA395_0==Semicolon||(LA395_0>=EqualsSign && LA395_0<=GreaterThanSign)||LA395_0==RightCurlyBracket) ) {s = 63;}

                         
                        input.seek(index395_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA395_17 = input.LA(1);

                         
                        int index395_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index395_17);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA395_47 = input.LA(1);

                         
                        int index395_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred264_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index395_47);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 395, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_276s = "\122\uffff";
    static final String dfa_277s = "\1\2\121\uffff";
    static final String dfa_278s = "\1\4\1\0\120\uffff";
    static final String dfa_279s = "\1\u0099\1\0\120\uffff";
    static final String dfa_280s = "\2\uffff\1\2\116\uffff\1\1";
    static final String dfa_281s = "\1\uffff\1\0\120\uffff}>";
    static final String[] dfa_282s = {
            "\3\2\1\uffff\4\2\2\uffff\2\2\3\uffff\3\2\2\uffff\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\2\2\3\uffff\6\2\3\uffff\1\2\2\uffff\5\2\3\uffff\1\2\1\uffff\7\2\6\uffff\2\2\3\uffff\2\2\1\uffff\1\2\2\uffff\2\2\1\1\3\2\1\uffff\6\2\1\uffff\3\2\1\uffff\1\2\1\uffff\2\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final char[] dfa_278 = DFA.unpackEncodedStringToUnsignedChars(dfa_278s);
    static final char[] dfa_279 = DFA.unpackEncodedStringToUnsignedChars(dfa_279s);
    static final short[] dfa_280 = DFA.unpackEncodedString(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final short[][] dfa_282 = unpackEncodedStringArray(dfa_282s);

    class DFA396 extends DFA {

        public DFA396(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 396;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_279;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_282;
        }
        public String getDescription() {
            return "25946:1: ( ( ( Asterisk ) )=> (lv_many_2_0= Asterisk ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA396_1 = input.LA(1);

                         
                        int index396_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index396_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 396, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_283s = "\1\77\120\uffff";
    static final String dfa_284s = "\1\4\56\uffff\1\0\41\uffff";
    static final String dfa_285s = "\1\u0099\56\uffff\1\0\41\uffff";
    static final String dfa_286s = "\1\uffff\56\1\1\uffff\17\1\1\2\21\uffff";
    static final String dfa_287s = "\1\0\56\uffff\1\1\41\uffff}>";
    static final String[] dfa_288s = {
            "\1\25\1\20\1\30\1\uffff\1\27\1\31\1\33\1\14\2\uffff\1\13\1\62\3\uffff\1\32\1\12\1\66\2\uffff\1\34\1\uffff\1\15\1\uffff\1\22\1\70\1\4\1\1\2\uffff\1\63\1\uffff\1\53\1\41\1\uffff\1\24\1\uffff\1\36\1\26\3\uffff\1\17\1\55\1\40\1\52\1\23\1\67\3\uffff\1\77\2\uffff\1\7\1\11\1\37\1\35\1\10\3\uffff\1\77\1\uffff\2\77\1\71\1\77\1\72\1\77\1\57\6\uffff\1\77\1\16\3\uffff\1\21\1\77\1\uffff\1\76\2\uffff\1\3\1\77\1\5\1\73\1\77\1\74\1\uffff\1\56\2\77\1\42\2\77\1\uffff\1\2\1\60\1\77\1\uffff\1\61\1\uffff\1\77\1\75\3\uffff\1\43\1\uffff\1\50\1\45\1\46\1\47\1\uffff\1\51\1\uffff\1\6\2\uffff\1\54\11\uffff\1\65\1\64\10\uffff\1\44\1\uffff\1\77\1\uffff\1\77",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_283 = DFA.unpackEncodedString(dfa_283s);
    static final char[] dfa_284 = DFA.unpackEncodedStringToUnsignedChars(dfa_284s);
    static final char[] dfa_285 = DFA.unpackEncodedStringToUnsignedChars(dfa_285s);
    static final short[] dfa_286 = DFA.unpackEncodedString(dfa_286s);
    static final short[] dfa_287 = DFA.unpackEncodedString(dfa_287s);
    static final short[][] dfa_288 = unpackEncodedStringArray(dfa_288s);

    class DFA397 extends DFA {

        public DFA397(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 397;
            this.eot = dfa_102;
            this.eof = dfa_283;
            this.min = dfa_284;
            this.max = dfa_285;
            this.accept = dfa_286;
            this.special = dfa_287;
            this.transition = dfa_288;
        }
        public String getDescription() {
            return "25969:3: ( ( Await | CommercialAt | LeftParenthesis | Async | Asterisk | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Implements | Interface | Private | Protected | Public | Out | Yield | New | This_1 | Super | LessThanSign | True | False | Null | Solidus | SolidusEqualsSign | LeftSquareBracket | LeftCurlyBracket | Function | Class | Delete | Void | Typeof | PlusSignPlusSign | HyphenMinusHyphenMinus | PlusSign | HyphenMinus | Tilde | ExclamationMark | RULE_IDENTIFIER | RULE_DOUBLE | RULE_INT | RULE_BINARY_INT | RULE_OCTAL_INT | RULE_LEGACY_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT | RULE_STRING | RULE_NO_SUBSTITUTION_TEMPLATE_LITERAL | RULE_TEMPLATE_HEAD )=> (lv_expression_3_0= norm3_AssignmentExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA397_0 = input.LA(1);

                         
                        int index397_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA397_0>=4 && LA397_0<=149 && (s=T2S.M_37[LA397_0-(4)])>=0) && (synpred266_InternalN4JSXParser())) { /* 46 cases */ }
                        else if ( (LA397_0==SolidusEqualsSign) ) {s = 47;}

                        
                        else if ((LA397_0>=15 && LA397_0<=140 && (s=T2S.M_36[LA397_0-(15)])>=0) && (synpred266_InternalN4JSXParser())) { /* 16 cases */ }
                        else if ( (LA397_0==EOF||LA397_0==LessThanSignLessThanSignEqualsSign||LA397_0==PercentSignEqualsSign||(LA397_0>=AmpersandEqualsSign && LA397_0<=AsteriskEqualsSign)||LA397_0==PlusSignEqualsSign||LA397_0==HyphenMinusEqualsSign||LA397_0==CircumflexAccentEqualsSign||LA397_0==VerticalLineEqualsSign||LA397_0==RightParenthesis||LA397_0==Comma||(LA397_0>=Colon && LA397_0<=Semicolon)||(LA397_0>=EqualsSign && LA397_0<=GreaterThanSign)||LA397_0==RightSquareBracket||LA397_0==RightCurlyBracket||LA397_0==RULE_ML_COMMENT||LA397_0==RULE_EOL) ) {s = 63;}

                         
                        input.seek(index397_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA397_47 = input.LA(1);

                         
                        int index397_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred266_InternalN4JSXParser()) ) {s = 62;}

                        else if ( (true) ) {s = 63;}

                         
                        input.seek(index397_47);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 397, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_289s = "\136\uffff";
    static final String dfa_290s = "\1\2\135\uffff";
    static final String dfa_291s = "\1\4\1\0\134\uffff";
    static final String dfa_292s = "\1\u0095\1\0\134\uffff";
    static final String dfa_293s = "\2\uffff\1\2\132\uffff\1\1";
    static final String dfa_294s = "\1\uffff\1\0\134\uffff}>";
    static final String[] dfa_295s = {
            "\61\2\1\uffff\1\2\2\uffff\10\2\5\uffff\1\2\1\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\uffff\5\2\2\uffff\1\2\2\uffff\1\1\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\2\uffff\3\2\2\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[] dfa_290 = DFA.unpackEncodedString(dfa_290s);
    static final char[] dfa_291 = DFA.unpackEncodedStringToUnsignedChars(dfa_291s);
    static final char[] dfa_292 = DFA.unpackEncodedStringToUnsignedChars(dfa_292s);
    static final short[] dfa_293 = DFA.unpackEncodedString(dfa_293s);
    static final short[] dfa_294 = DFA.unpackEncodedString(dfa_294s);
    static final short[][] dfa_295 = unpackEncodedStringArray(dfa_295s);

    class DFA429 extends DFA {

        public DFA429(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 429;
            this.eot = dfa_289;
            this.eof = dfa_290;
            this.min = dfa_291;
            this.max = dfa_292;
            this.accept = dfa_293;
            this.special = dfa_294;
            this.transition = dfa_295;
        }
        public String getDescription() {
            return "28426:2: ( ( ( LeftParenthesis )=>otherlv_1= LeftParenthesis ) ( ( (lv_args_2_0= ruleAnnotationArgument ) ) (otherlv_3= Comma ( (lv_args_4_0= ruleAnnotationArgument ) ) )* )? otherlv_5= RightParenthesis )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA429_1 = input.LA(1);

                         
                        int index429_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred275_InternalN4JSXParser()) ) {s = 93;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index429_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 429, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_296s = "\1\4\1\uffff\30\0\2\uffff\61\0\4\uffff";
    static final String dfa_297s = "\1\u0095\1\uffff\30\0\2\uffff\61\0\4\uffff";
    static final String dfa_298s = "\1\uffff\1\1\30\uffff\2\4\61\uffff\1\6\1\2\1\3\1\5";
    static final String dfa_299s = "\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\4\uffff}>";
    static final String[] dfa_300s = {
            "\1\26\1\23\1\103\1\57\1\15\1\104\1\4\1\7\1\41\1\42\1\6\1\53\1\43\1\50\1\51\1\2\1\3\1\44\1\47\1\55\1\5\1\61\1\10\1\63\1\16\1\66\1\34\1\14\1\35\1\37\1\40\1\11\1\75\1\62\1\64\1\25\1\70\1\72\1\13\1\36\1\46\1\76\1\101\1\73\1\21\1\74\1\22\1\12\1\71\4\uffff\1\52\1\30\1\77\1\60\1\105\1\31\1\65\1\67\21\uffff\1\100\1\45\1\54\1\56\1\102\5\uffff\1\115\1\uffff\1\33\7\uffff\1\32\2\uffff\1\27\1\1\1\114\2\uffff\1\24\2\uffff\1\20\3\uffff\1\107\1\uffff\1\112\1\uffff\1\111\2\uffff\1\113\1\uffff\1\17\2\uffff\1\106\23\uffff\1\110",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_296 = DFA.unpackEncodedStringToUnsignedChars(dfa_296s);
    static final char[] dfa_297 = DFA.unpackEncodedStringToUnsignedChars(dfa_297s);
    static final short[] dfa_298 = DFA.unpackEncodedString(dfa_298s);
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final short[][] dfa_300 = unpackEncodedStringArray(dfa_300s);

    class DFA471 extends DFA {

        public DFA471(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 471;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_296;
            this.max = dfa_297;
            this.accept = dfa_298;
            this.special = dfa_299;
            this.transition = dfa_300;
        }
        public String getDescription() {
            return "29981:1: (this_AnnotatedN4MemberDeclaration_0= ruleAnnotatedN4MemberDeclaration | ( ( ( () ( ( ruleN4Modifier ) )* ruleGetterHeader[null] ) )=>this_N4GetterDeclaration_1= ruleN4GetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_N4SetterDeclaration_2= ruleN4SetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_N4MethodDeclaration_3= ruleN4MethodDeclaration ) | this_N4FieldDeclaration_4= ruleN4FieldDeclaration | this_N4CallableConstructorDeclaration_5= ruleN4CallableConstructorDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA471_0 = input.LA(1);

                         
                        int index471_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA471_0>=4 && LA471_0<=126 && (s=T2S.M_39[LA471_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA471_0==LessThanSign) && (synpred285_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA471_0==Asterisk) && (synpred285_InternalN4JSXParser())) {s = 27;}

                        
                        else if ((LA471_0>=6 && LA471_0<=149 && (s=T2S.M_40[LA471_0-(6)])>=0)) { /* 50 cases */ }
                        input.seek(index471_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA471_2 = input.LA(1);

                         
                        int index471_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA471_3 = input.LA(1);

                         
                        int index471_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA471_4 = input.LA(1);

                         
                        int index471_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA471_5 = input.LA(1);

                         
                        int index471_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA471_6 = input.LA(1);

                         
                        int index471_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA471_7 = input.LA(1);

                         
                        int index471_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA471_8 = input.LA(1);

                         
                        int index471_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA471_9 = input.LA(1);

                         
                        int index471_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA471_10 = input.LA(1);

                         
                        int index471_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA471_11 = input.LA(1);

                         
                        int index471_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA471_12 = input.LA(1);

                         
                        int index471_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA471_13 = input.LA(1);

                         
                        int index471_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA471_14 = input.LA(1);

                         
                        int index471_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA471_15 = input.LA(1);

                         
                        int index471_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA471_16 = input.LA(1);

                         
                        int index471_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA471_17 = input.LA(1);

                         
                        int index471_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA471_18 = input.LA(1);

                         
                        int index471_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA471_19 = input.LA(1);

                         
                        int index471_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA471_20 = input.LA(1);

                         
                        int index471_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA471_21 = input.LA(1);

                         
                        int index471_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA471_22 = input.LA(1);

                         
                        int index471_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA471_23 = input.LA(1);

                         
                        int index471_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA471_24 = input.LA(1);

                         
                        int index471_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA471_25 = input.LA(1);

                         
                        int index471_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred284_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA471_28 = input.LA(1);

                         
                        int index471_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_28);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA471_29 = input.LA(1);

                         
                        int index471_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_29);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA471_30 = input.LA(1);

                         
                        int index471_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_30);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA471_31 = input.LA(1);

                         
                        int index471_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_31);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA471_32 = input.LA(1);

                         
                        int index471_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_32);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA471_33 = input.LA(1);

                         
                        int index471_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_33);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA471_34 = input.LA(1);

                         
                        int index471_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_34);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA471_35 = input.LA(1);

                         
                        int index471_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_35);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA471_36 = input.LA(1);

                         
                        int index471_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_36);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA471_37 = input.LA(1);

                         
                        int index471_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_37);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA471_38 = input.LA(1);

                         
                        int index471_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_38);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA471_39 = input.LA(1);

                         
                        int index471_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_39);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA471_40 = input.LA(1);

                         
                        int index471_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_40);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA471_41 = input.LA(1);

                         
                        int index471_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_41);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA471_42 = input.LA(1);

                         
                        int index471_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_42);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA471_43 = input.LA(1);

                         
                        int index471_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_43);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA471_44 = input.LA(1);

                         
                        int index471_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_44);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA471_45 = input.LA(1);

                         
                        int index471_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_45);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA471_46 = input.LA(1);

                         
                        int index471_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_46);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA471_47 = input.LA(1);

                         
                        int index471_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_47);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA471_48 = input.LA(1);

                         
                        int index471_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_48);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA471_49 = input.LA(1);

                         
                        int index471_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_49);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA471_50 = input.LA(1);

                         
                        int index471_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_50);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA471_51 = input.LA(1);

                         
                        int index471_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_51);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA471_52 = input.LA(1);

                         
                        int index471_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_52);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA471_53 = input.LA(1);

                         
                        int index471_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_53);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA471_54 = input.LA(1);

                         
                        int index471_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_54);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA471_55 = input.LA(1);

                         
                        int index471_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_55);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA471_56 = input.LA(1);

                         
                        int index471_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_56);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA471_57 = input.LA(1);

                         
                        int index471_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_57);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA471_58 = input.LA(1);

                         
                        int index471_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_58);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA471_59 = input.LA(1);

                         
                        int index471_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_59);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA471_60 = input.LA(1);

                         
                        int index471_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_60);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA471_61 = input.LA(1);

                         
                        int index471_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_61);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA471_62 = input.LA(1);

                         
                        int index471_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_62);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA471_63 = input.LA(1);

                         
                        int index471_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_63);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA471_64 = input.LA(1);

                         
                        int index471_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_64);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA471_65 = input.LA(1);

                         
                        int index471_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_65);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA471_66 = input.LA(1);

                         
                        int index471_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_66);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA471_67 = input.LA(1);

                         
                        int index471_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_67);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA471_68 = input.LA(1);

                         
                        int index471_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_68);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA471_69 = input.LA(1);

                         
                        int index471_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_69);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA471_70 = input.LA(1);

                         
                        int index471_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_70);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA471_71 = input.LA(1);

                         
                        int index471_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_71);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA471_72 = input.LA(1);

                         
                        int index471_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_72);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA471_73 = input.LA(1);

                         
                        int index471_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_73);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA471_74 = input.LA(1);

                         
                        int index471_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_74);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA471_75 = input.LA(1);

                         
                        int index471_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_75);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA471_76 = input.LA(1);

                         
                        int index471_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index471_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 471, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA472 extends DFA {

        public DFA472(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 472;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_296;
            this.max = dfa_297;
            this.accept = dfa_298;
            this.special = dfa_299;
            this.transition = dfa_300;
        }
        public String getDescription() {
            return "30285:1: (this_AnnotatedN4MemberDeclaration_0= norm1_AnnotatedN4MemberDeclaration | ( ( ( () ( ( ruleN4Modifier ) )* norm1_GetterHeader[null] ) )=>this_N4GetterDeclaration_1= norm1_N4GetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=>this_N4SetterDeclaration_2= norm1_N4SetterDeclaration ) | ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=>this_N4MethodDeclaration_3= norm1_N4MethodDeclaration ) | this_N4FieldDeclaration_4= norm1_N4FieldDeclaration | this_N4CallableConstructorDeclaration_5= norm1_N4CallableConstructorDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA472_0 = input.LA(1);

                         
                        int index472_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA472_0>=4 && LA472_0<=126 && (s=T2S.M_39[LA472_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA472_0==LessThanSign) && (synpred288_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA472_0==Asterisk) && (synpred288_InternalN4JSXParser())) {s = 27;}

                        
                        else if ((LA472_0>=6 && LA472_0<=149 && (s=T2S.M_40[LA472_0-(6)])>=0)) { /* 50 cases */ }
                        input.seek(index472_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA472_2 = input.LA(1);

                         
                        int index472_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA472_3 = input.LA(1);

                         
                        int index472_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA472_4 = input.LA(1);

                         
                        int index472_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA472_5 = input.LA(1);

                         
                        int index472_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA472_6 = input.LA(1);

                         
                        int index472_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA472_7 = input.LA(1);

                         
                        int index472_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA472_8 = input.LA(1);

                         
                        int index472_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA472_9 = input.LA(1);

                         
                        int index472_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA472_10 = input.LA(1);

                         
                        int index472_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA472_11 = input.LA(1);

                         
                        int index472_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA472_12 = input.LA(1);

                         
                        int index472_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA472_13 = input.LA(1);

                         
                        int index472_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA472_14 = input.LA(1);

                         
                        int index472_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA472_15 = input.LA(1);

                         
                        int index472_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA472_16 = input.LA(1);

                         
                        int index472_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA472_17 = input.LA(1);

                         
                        int index472_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA472_18 = input.LA(1);

                         
                        int index472_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA472_19 = input.LA(1);

                         
                        int index472_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA472_20 = input.LA(1);

                         
                        int index472_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA472_21 = input.LA(1);

                         
                        int index472_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA472_22 = input.LA(1);

                         
                        int index472_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA472_23 = input.LA(1);

                         
                        int index472_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA472_24 = input.LA(1);

                         
                        int index472_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred286_InternalN4JSXParser()) ) {s = 78;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA472_25 = input.LA(1);

                         
                        int index472_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalN4JSXParser()) ) {s = 79;}

                        else if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA472_28 = input.LA(1);

                         
                        int index472_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_28);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA472_29 = input.LA(1);

                         
                        int index472_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_29);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA472_30 = input.LA(1);

                         
                        int index472_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_30);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA472_31 = input.LA(1);

                         
                        int index472_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_31);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA472_32 = input.LA(1);

                         
                        int index472_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_32);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA472_33 = input.LA(1);

                         
                        int index472_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_33);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA472_34 = input.LA(1);

                         
                        int index472_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_34);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA472_35 = input.LA(1);

                         
                        int index472_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_35);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA472_36 = input.LA(1);

                         
                        int index472_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_36);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA472_37 = input.LA(1);

                         
                        int index472_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_37);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA472_38 = input.LA(1);

                         
                        int index472_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_38);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA472_39 = input.LA(1);

                         
                        int index472_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_39);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA472_40 = input.LA(1);

                         
                        int index472_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_40);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA472_41 = input.LA(1);

                         
                        int index472_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_41);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA472_42 = input.LA(1);

                         
                        int index472_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_42);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA472_43 = input.LA(1);

                         
                        int index472_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_43);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA472_44 = input.LA(1);

                         
                        int index472_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_44);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA472_45 = input.LA(1);

                         
                        int index472_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_45);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA472_46 = input.LA(1);

                         
                        int index472_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_46);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA472_47 = input.LA(1);

                         
                        int index472_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_47);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA472_48 = input.LA(1);

                         
                        int index472_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_48);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA472_49 = input.LA(1);

                         
                        int index472_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_49);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA472_50 = input.LA(1);

                         
                        int index472_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_50);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA472_51 = input.LA(1);

                         
                        int index472_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_51);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA472_52 = input.LA(1);

                         
                        int index472_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_52);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA472_53 = input.LA(1);

                         
                        int index472_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_53);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA472_54 = input.LA(1);

                         
                        int index472_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_54);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA472_55 = input.LA(1);

                         
                        int index472_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_55);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA472_56 = input.LA(1);

                         
                        int index472_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_56);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA472_57 = input.LA(1);

                         
                        int index472_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_57);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA472_58 = input.LA(1);

                         
                        int index472_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_58);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA472_59 = input.LA(1);

                         
                        int index472_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_59);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA472_60 = input.LA(1);

                         
                        int index472_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_60);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA472_61 = input.LA(1);

                         
                        int index472_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_61);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA472_62 = input.LA(1);

                         
                        int index472_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_62);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA472_63 = input.LA(1);

                         
                        int index472_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_63);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA472_64 = input.LA(1);

                         
                        int index472_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_64);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA472_65 = input.LA(1);

                         
                        int index472_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_65);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA472_66 = input.LA(1);

                         
                        int index472_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_66);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA472_67 = input.LA(1);

                         
                        int index472_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_67);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA472_68 = input.LA(1);

                         
                        int index472_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_68);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA472_69 = input.LA(1);

                         
                        int index472_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_69);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA472_70 = input.LA(1);

                         
                        int index472_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_70);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA472_71 = input.LA(1);

                         
                        int index472_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_71);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA472_72 = input.LA(1);

                         
                        int index472_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_72);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA472_73 = input.LA(1);

                         
                        int index472_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_73);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA472_74 = input.LA(1);

                         
                        int index472_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_74);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA472_75 = input.LA(1);

                         
                        int index472_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_75);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA472_76 = input.LA(1);

                         
                        int index472_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalN4JSXParser()) ) {s = 27;}

                        else if ( (true) ) {s = 80;}

                         
                        input.seek(index472_76);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 472, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_301s = "\1\4\30\0\2\uffff\61\0\3\uffff";
    static final String dfa_302s = "\1\u0095\30\0\2\uffff\61\0\3\uffff";
    static final String dfa_303s = "\31\uffff\2\3\61\uffff\1\1\1\2\1\4";
    static final String dfa_304s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\2\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\3\uffff}>";
    static final String[] dfa_305s = {
            "\1\25\1\22\1\102\1\56\1\14\1\103\1\3\1\6\1\40\1\41\1\5\1\52\1\42\1\47\1\50\1\1\1\2\1\43\1\46\1\54\1\4\1\60\1\7\1\62\1\15\1\65\1\33\1\13\1\34\1\36\1\37\1\10\1\74\1\61\1\63\1\24\1\67\1\71\1\12\1\35\1\45\1\75\1\100\1\72\1\20\1\73\1\21\1\11\1\70\4\uffff\1\51\1\27\1\76\1\57\1\104\1\30\1\64\1\66\21\uffff\1\77\1\44\1\53\1\55\1\101\7\uffff\1\32\7\uffff\1\31\2\uffff\1\26\1\uffff\1\113\2\uffff\1\23\2\uffff\1\17\3\uffff\1\106\1\uffff\1\111\1\uffff\1\110\2\uffff\1\112\1\uffff\1\16\2\uffff\1\105\23\uffff\1\107",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final char[] dfa_302 = DFA.unpackEncodedStringToUnsignedChars(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[] dfa_304 = DFA.unpackEncodedString(dfa_304s);
    static final short[][] dfa_305 = unpackEncodedStringArray(dfa_305s);

    class DFA484 extends DFA {

        public DFA484(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 484;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_301;
            this.max = dfa_302;
            this.accept = dfa_303;
            this.special = dfa_304;
            this.transition = dfa_305;
        }
        public String getDescription() {
            return "30606:1: ( ( ( ( ( () ( ( ruleN4Modifier ) )* ruleGetterHeader[null] ) )=> ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_GetterHeader_3= ruleGetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= ruleBlock ) )? (otherlv_5= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () ( (lv_declaredModifiers_7_0= ruleN4Modifier ) )* otherlv_8= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_9_0= ruleLiteralOrComputedPropertyName ) ) ) ) otherlv_10= LeftParenthesis ( (lv_fpar_11_0= ruleFormalParameter ) ) otherlv_12= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= ruleBlock ) )? (otherlv_14= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( ruleLiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )* (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_21= norm1_MethodParamsReturnAndBody[$current] ) ) | (this_AsyncNoTrailingLineBreak_22= ruleAsyncNoTrailingLineBreak[$current] ( (lv_declaredName_23_0= ruleLiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_24= ruleMethodParamsReturnAndBody[$current] ) ) ) ) ) (otherlv_25= Semicolon )? ) | ( () this_FieldDeclarationImpl_27= ruleFieldDeclarationImpl[$current] ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA484_0 = input.LA(1);

                         
                        int index484_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA484_0>=4 && LA484_0<=126 && (s=T2S.M_43[LA484_0-(4)])>=0)) { /* 24 cases */ }
                        else if ( (LA484_0==LessThanSign) && (synpred294_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA484_0==Asterisk) && (synpred294_InternalN4JSXParser())) {s = 26;}

                        
                        else if ((LA484_0>=6 && LA484_0<=149 && (s=T2S.M_44[LA484_0-(6)])>=0)) { /* 49 cases */ }
                        input.seek(index484_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA484_1 = input.LA(1);

                         
                        int index484_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA484_2 = input.LA(1);

                         
                        int index484_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA484_3 = input.LA(1);

                         
                        int index484_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA484_4 = input.LA(1);

                         
                        int index484_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA484_5 = input.LA(1);

                         
                        int index484_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA484_6 = input.LA(1);

                         
                        int index484_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA484_7 = input.LA(1);

                         
                        int index484_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA484_8 = input.LA(1);

                         
                        int index484_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA484_9 = input.LA(1);

                         
                        int index484_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA484_10 = input.LA(1);

                         
                        int index484_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA484_11 = input.LA(1);

                         
                        int index484_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA484_12 = input.LA(1);

                         
                        int index484_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA484_13 = input.LA(1);

                         
                        int index484_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA484_14 = input.LA(1);

                         
                        int index484_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA484_15 = input.LA(1);

                         
                        int index484_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA484_16 = input.LA(1);

                         
                        int index484_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA484_17 = input.LA(1);

                         
                        int index484_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA484_18 = input.LA(1);

                         
                        int index484_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA484_19 = input.LA(1);

                         
                        int index484_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA484_20 = input.LA(1);

                         
                        int index484_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA484_21 = input.LA(1);

                         
                        int index484_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA484_22 = input.LA(1);

                         
                        int index484_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA484_23 = input.LA(1);

                         
                        int index484_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA484_24 = input.LA(1);

                         
                        int index484_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred291_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA484_27 = input.LA(1);

                         
                        int index484_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA484_28 = input.LA(1);

                         
                        int index484_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA484_29 = input.LA(1);

                         
                        int index484_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA484_30 = input.LA(1);

                         
                        int index484_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA484_31 = input.LA(1);

                         
                        int index484_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA484_32 = input.LA(1);

                         
                        int index484_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA484_33 = input.LA(1);

                         
                        int index484_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA484_34 = input.LA(1);

                         
                        int index484_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA484_35 = input.LA(1);

                         
                        int index484_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA484_36 = input.LA(1);

                         
                        int index484_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA484_37 = input.LA(1);

                         
                        int index484_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA484_38 = input.LA(1);

                         
                        int index484_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA484_39 = input.LA(1);

                         
                        int index484_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA484_40 = input.LA(1);

                         
                        int index484_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA484_41 = input.LA(1);

                         
                        int index484_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA484_42 = input.LA(1);

                         
                        int index484_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA484_43 = input.LA(1);

                         
                        int index484_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA484_44 = input.LA(1);

                         
                        int index484_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA484_45 = input.LA(1);

                         
                        int index484_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA484_46 = input.LA(1);

                         
                        int index484_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA484_47 = input.LA(1);

                         
                        int index484_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA484_48 = input.LA(1);

                         
                        int index484_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA484_49 = input.LA(1);

                         
                        int index484_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA484_50 = input.LA(1);

                         
                        int index484_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA484_51 = input.LA(1);

                         
                        int index484_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA484_52 = input.LA(1);

                         
                        int index484_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA484_53 = input.LA(1);

                         
                        int index484_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA484_54 = input.LA(1);

                         
                        int index484_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA484_55 = input.LA(1);

                         
                        int index484_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA484_56 = input.LA(1);

                         
                        int index484_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA484_57 = input.LA(1);

                         
                        int index484_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA484_58 = input.LA(1);

                         
                        int index484_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA484_59 = input.LA(1);

                         
                        int index484_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA484_60 = input.LA(1);

                         
                        int index484_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA484_61 = input.LA(1);

                         
                        int index484_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA484_62 = input.LA(1);

                         
                        int index484_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA484_63 = input.LA(1);

                         
                        int index484_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA484_64 = input.LA(1);

                         
                        int index484_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA484_65 = input.LA(1);

                         
                        int index484_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA484_66 = input.LA(1);

                         
                        int index484_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA484_67 = input.LA(1);

                         
                        int index484_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA484_68 = input.LA(1);

                         
                        int index484_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA484_69 = input.LA(1);

                         
                        int index484_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA484_70 = input.LA(1);

                         
                        int index484_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA484_71 = input.LA(1);

                         
                        int index484_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA484_72 = input.LA(1);

                         
                        int index484_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA484_73 = input.LA(1);

                         
                        int index484_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA484_74 = input.LA(1);

                         
                        int index484_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA484_75 = input.LA(1);

                         
                        int index484_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred294_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index484_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 484, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_306s = "\1\u0095\1\0\120\uffff";
    static final String[] dfa_307s = {
            "\61\2\4\uffff\10\2\21\uffff\5\2\5\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\3\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\23\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_306 = DFA.unpackEncodedStringToUnsignedChars(dfa_306s);
    static final short[][] dfa_307 = unpackEncodedStringArray(dfa_307s);

    class DFA474 extends DFA {

        public DFA474(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 474;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_306;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "30647:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA474_1 = input.LA(1);

                         
                        int index474_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index474_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 474, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA477 extends DFA {

        public DFA477(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 477;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_306;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "31077:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA477_1 = input.LA(1);

                         
                        int index477_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred293_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index477_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 477, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_308s = "\1\4\1\uffff\10\4\1\uffff";
    static final String dfa_309s = "\1\u0095\1\uffff\10\u0095\1\uffff";
    static final String dfa_310s = "\1\uffff\1\2\10\uffff\1\1";
    static final String[] dfa_311s = {
            "\6\1\1\10\1\5\2\1\1\4\4\1\1\7\1\3\3\1\1\11\1\1\1\6\10\1\1\2\21\1\4\uffff\10\1\21\uffff\5\1\7\uffff\1\1\7\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\23\uffff\1\1",
            "",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            "\61\12\4\uffff\10\12\21\uffff\5\12\5\uffff\1\1\1\uffff\1\12\7\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\2\uffff\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12",
            ""
    };
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final char[] dfa_309 = DFA.unpackEncodedStringToUnsignedChars(dfa_309s);
    static final short[] dfa_310 = DFA.unpackEncodedString(dfa_310s);
    static final short[][] dfa_311 = unpackEncodedStringArray(dfa_311s);

    class DFA479 extends DFA {

        public DFA479(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 479;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 31135:2: ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )*";
        }
    }

    class DFA481 extends DFA {

        public DFA481(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 481;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "31165:3: (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA496 extends DFA {

        public DFA496(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 496;
            this.eot = dfa_113;
            this.eof = dfa_113;
            this.min = dfa_301;
            this.max = dfa_302;
            this.accept = dfa_303;
            this.special = dfa_304;
            this.transition = dfa_305;
        }
        public String getDescription() {
            return "31316:1: ( ( ( ( ( () ( ( ruleN4Modifier ) )* norm1_GetterHeader[null] ) )=> ( () ( (lv_declaredModifiers_2_0= ruleN4Modifier ) )* this_GetterHeader_3= norm1_GetterHeader[$current] ) ) ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= norm1_Block ) )? (otherlv_5= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* Set ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT ) ) )=> ( () ( (lv_declaredModifiers_7_0= ruleN4Modifier ) )* otherlv_8= Set ( ( Break | Case | Catch | Class | Const | Continue | Debugger | Default | Delete | Do | Else | Export | Extends | Finally | For | Function | If | Import | In | Instanceof | New | Return | Super | Switch | This_1 | Throw | Try | Typeof | Var | Void | While | With | Yield | Null | True | False | Enum | Get | Set | Let | Project | External | Abstract | Static | As | From | Constructor | Of | Target | Type | Union | Intersection | This | Promisify | Await | Async | Implements | Interface | Private | Protected | Public | Out | LeftSquareBracket | RULE_IDENTIFIER | RULE_STRING | RULE_DOUBLE | RULE_INT | RULE_OCTAL_INT | RULE_HEX_INT | RULE_SCIENTIFIC_INT )=> (lv_declaredName_9_0= norm1_LiteralOrComputedPropertyName ) ) ) ) otherlv_10= LeftParenthesis ( (lv_fpar_11_0= norm1_FormalParameter ) ) otherlv_12= RightParenthesis ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= norm1_Block ) )? (otherlv_14= Semicolon )? ) | ( ( ( ( () ( ( ruleN4Modifier ) )* ( ruleTypeVariables[null] )? ( ruleBogusTypeRefFragment[null] )? ( ( ( ( Asterisk ) ) ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) | ( ruleAsyncNoTrailingLineBreak[null] ( ( norm1_LiteralOrComputedPropertyName ) ) LeftParenthesis ) ) ) )=> ( () ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )* (this_TypeVariables_17= ruleTypeVariables[$current] )? (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )? ( ( ( (lv_generator_19_0= Asterisk ) ) ( (lv_declaredName_20_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_21= norm1_MethodParamsReturnAndBody[$current] ) ) | (this_AsyncNoTrailingLineBreak_22= ruleAsyncNoTrailingLineBreak[$current] ( (lv_declaredName_23_0= norm1_LiteralOrComputedPropertyName ) ) ( ( LeftParenthesis )=>this_MethodParamsReturnAndBody_24= ruleMethodParamsReturnAndBody[$current] ) ) ) ) ) (otherlv_25= Semicolon )? ) | ( () this_FieldDeclarationImpl_27= norm1_FieldDeclarationImpl[$current] ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA496_0 = input.LA(1);

                         
                        int index496_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ((LA496_0>=4 && LA496_0<=126 && (s=T2S.M_43[LA496_0-(4)])>=0)) { /* 24 cases */ }
                        else if ( (LA496_0==LessThanSign) && (synpred302_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA496_0==Asterisk) && (synpred302_InternalN4JSXParser())) {s = 26;}

                        
                        else if ((LA496_0>=6 && LA496_0<=149 && (s=T2S.M_44[LA496_0-(6)])>=0)) { /* 49 cases */ }
                        input.seek(index496_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA496_1 = input.LA(1);

                         
                        int index496_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA496_2 = input.LA(1);

                         
                        int index496_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA496_3 = input.LA(1);

                         
                        int index496_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA496_4 = input.LA(1);

                         
                        int index496_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA496_5 = input.LA(1);

                         
                        int index496_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA496_6 = input.LA(1);

                         
                        int index496_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA496_7 = input.LA(1);

                         
                        int index496_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA496_8 = input.LA(1);

                         
                        int index496_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA496_9 = input.LA(1);

                         
                        int index496_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA496_10 = input.LA(1);

                         
                        int index496_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA496_11 = input.LA(1);

                         
                        int index496_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA496_12 = input.LA(1);

                         
                        int index496_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA496_13 = input.LA(1);

                         
                        int index496_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA496_14 = input.LA(1);

                         
                        int index496_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA496_15 = input.LA(1);

                         
                        int index496_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA496_16 = input.LA(1);

                         
                        int index496_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA496_17 = input.LA(1);

                         
                        int index496_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA496_18 = input.LA(1);

                         
                        int index496_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA496_19 = input.LA(1);

                         
                        int index496_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA496_20 = input.LA(1);

                         
                        int index496_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA496_21 = input.LA(1);

                         
                        int index496_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA496_22 = input.LA(1);

                         
                        int index496_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA496_23 = input.LA(1);

                         
                        int index496_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_InternalN4JSXParser()) ) {s = 76;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA496_24 = input.LA(1);

                         
                        int index496_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred299_InternalN4JSXParser()) ) {s = 77;}

                        else if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA496_27 = input.LA(1);

                         
                        int index496_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA496_28 = input.LA(1);

                         
                        int index496_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA496_29 = input.LA(1);

                         
                        int index496_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA496_30 = input.LA(1);

                         
                        int index496_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA496_31 = input.LA(1);

                         
                        int index496_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA496_32 = input.LA(1);

                         
                        int index496_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA496_33 = input.LA(1);

                         
                        int index496_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA496_34 = input.LA(1);

                         
                        int index496_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA496_35 = input.LA(1);

                         
                        int index496_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA496_36 = input.LA(1);

                         
                        int index496_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA496_37 = input.LA(1);

                         
                        int index496_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA496_38 = input.LA(1);

                         
                        int index496_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA496_39 = input.LA(1);

                         
                        int index496_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA496_40 = input.LA(1);

                         
                        int index496_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA496_41 = input.LA(1);

                         
                        int index496_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA496_42 = input.LA(1);

                         
                        int index496_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA496_43 = input.LA(1);

                         
                        int index496_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA496_44 = input.LA(1);

                         
                        int index496_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA496_45 = input.LA(1);

                         
                        int index496_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA496_46 = input.LA(1);

                         
                        int index496_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_46);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA496_47 = input.LA(1);

                         
                        int index496_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_47);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA496_48 = input.LA(1);

                         
                        int index496_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_48);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA496_49 = input.LA(1);

                         
                        int index496_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_49);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA496_50 = input.LA(1);

                         
                        int index496_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_50);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA496_51 = input.LA(1);

                         
                        int index496_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_51);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA496_52 = input.LA(1);

                         
                        int index496_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_52);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA496_53 = input.LA(1);

                         
                        int index496_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_53);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA496_54 = input.LA(1);

                         
                        int index496_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_54);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA496_55 = input.LA(1);

                         
                        int index496_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_55);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA496_56 = input.LA(1);

                         
                        int index496_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_56);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA496_57 = input.LA(1);

                         
                        int index496_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_57);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA496_58 = input.LA(1);

                         
                        int index496_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_58);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA496_59 = input.LA(1);

                         
                        int index496_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_59);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA496_60 = input.LA(1);

                         
                        int index496_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_60);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA496_61 = input.LA(1);

                         
                        int index496_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_61);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA496_62 = input.LA(1);

                         
                        int index496_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_62);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA496_63 = input.LA(1);

                         
                        int index496_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_63);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA496_64 = input.LA(1);

                         
                        int index496_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_64);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA496_65 = input.LA(1);

                         
                        int index496_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_65);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA496_66 = input.LA(1);

                         
                        int index496_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_66);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA496_67 = input.LA(1);

                         
                        int index496_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_67);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA496_68 = input.LA(1);

                         
                        int index496_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_68);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA496_69 = input.LA(1);

                         
                        int index496_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_69);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA496_70 = input.LA(1);

                         
                        int index496_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_70);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA496_71 = input.LA(1);

                         
                        int index496_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_71);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA496_72 = input.LA(1);

                         
                        int index496_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_72);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA496_73 = input.LA(1);

                         
                        int index496_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_73);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA496_74 = input.LA(1);

                         
                        int index496_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_74);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA496_75 = input.LA(1);

                         
                        int index496_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred302_InternalN4JSXParser()) ) {s = 26;}

                        else if ( (true) ) {s = 78;}

                         
                        input.seek(index496_75);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 496, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_312s = "\1\4\1\0\117\uffff";
    static final String dfa_313s = "\1\u0095\1\0\117\uffff";
    static final String dfa_314s = "\2\uffff\1\2\115\uffff\1\1";
    static final String dfa_315s = "\1\uffff\1\0\117\uffff}>";
    static final String[] dfa_316s = {
            "\61\2\4\uffff\10\2\21\uffff\5\2\5\uffff\1\2\1\uffff\1\2\6\uffff\2\2\2\uffff\3\2\2\uffff\1\1\1\uffff\2\2\3\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\1\uffff\1\2\2\uffff\1\2\23\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_312 = DFA.unpackEncodedStringToUnsignedChars(dfa_312s);
    static final char[] dfa_313 = DFA.unpackEncodedStringToUnsignedChars(dfa_313s);
    static final short[] dfa_314 = DFA.unpackEncodedString(dfa_314s);
    static final short[] dfa_315 = DFA.unpackEncodedString(dfa_315s);
    static final short[][] dfa_316 = unpackEncodedStringArray(dfa_316s);

    class DFA486 extends DFA {

        public DFA486(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 486;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_312;
            this.max = dfa_313;
            this.accept = dfa_314;
            this.special = dfa_315;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "31357:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_4_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA486_1 = input.LA(1);

                         
                        int index486_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred298_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index486_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 486, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA489 extends DFA {

        public DFA489(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 489;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_312;
            this.max = dfa_313;
            this.accept = dfa_314;
            this.special = dfa_315;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "31787:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_13_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA489_1 = input.LA(1);

                         
                        int index489_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index489_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 489, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA491 extends DFA {

        public DFA491(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 491;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 31845:2: ( (lv_declaredModifiers_16_0= ruleN4Modifier ) )*";
        }
    }

    class DFA493 extends DFA {

        public DFA493(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 493;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "31875:3: (this_BogusTypeRefFragment_18= ruleBogusTypeRefFragment[$current] )?";
        }
    }
    static final String dfa_317s = "\2\uffff\10\1\1\uffff";
    static final String dfa_318s = "\1\u0095\1\uffff\10\u0099\1\uffff";
    static final String[] dfa_319s = {
            "\6\1\1\10\1\5\2\1\1\4\4\1\1\7\1\3\3\1\1\11\1\1\1\6\10\1\1\2\21\1\4\uffff\10\1\21\uffff\5\1\22\uffff\1\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\2\uffff\1\1\23\uffff\1\1",
            "",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            "\61\12\4\uffff\10\12\21\uffff\5\12\15\uffff\2\1\1\uffff\1\1\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\1\1\12\3\uffff\1\12\1\uffff\1\12\1\uffff\1\12\2\uffff\1\12\1\uffff\1\12\2\uffff\1\12\23\uffff\1\12\1\uffff\1\1\1\uffff\1\1",
            ""
    };
    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final char[] dfa_318 = DFA.unpackEncodedStringToUnsignedChars(dfa_318s);
    static final short[][] dfa_319 = unpackEncodedStringArray(dfa_319s);

    class DFA497 extends DFA {

        public DFA497(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 497;
            this.eot = dfa_24;
            this.eof = dfa_317;
            this.min = dfa_308;
            this.max = dfa_318;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_319;
        }
        public String getDescription() {
            return "()* loopback of 32017:2: ( (lv_declaredModifiers_0_0= ruleN4Modifier ) )*";
        }
    }
    static final String dfa_320s = "\1\uffff\6\15\1\uffff\5\15\1\uffff";
    static final String dfa_321s = "\1\u0095\6\u0099\1\uffff\5\u0099\1\uffff";
    static final String[] dfa_322s = {
            "\1\14\1\12\2\15\1\4\23\15\1\5\2\15\1\3\7\15\1\13\2\15\1\2\5\15\1\10\1\15\1\11\1\1\1\15\4\uffff\10\15\21\uffff\5\15\22\uffff\1\7\1\uffff\1\15\2\uffff\1\7\2\uffff\1\7\3\uffff\1\15\1\uffff\1\15\1\uffff\1\15\2\uffff\1\15\1\uffff\1\6\2\uffff\1\15\23\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\2\uffff\1\7\1\uffff\2\15\1\7\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "",
            "\61\7\4\uffff\10\7\21\uffff\5\7\10\uffff\1\7\4\uffff\2\15\1\uffff\1\15\1\uffff\1\7\1\uffff\1\7\4\uffff\1\15\4\uffff\1\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\1\uffff\1\7\2\uffff\1\7\23\uffff\1\7\1\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            "\2\15\1\uffff\1\15\6\uffff\1\7\1\uffff\1\15\46\uffff\1\15\1\uffff\1\15",
            ""
    };
    static final short[] dfa_320 = DFA.unpackEncodedString(dfa_320s);
    static final char[] dfa_321 = DFA.unpackEncodedStringToUnsignedChars(dfa_321s);
    static final short[][] dfa_322 = unpackEncodedStringArray(dfa_322s);

    class DFA498 extends DFA {

        public DFA498(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 498;
            this.eot = dfa_18;
            this.eof = dfa_320;
            this.min = dfa_191;
            this.max = dfa_321;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_322;
        }
        public String getDescription() {
            return "32035:3: (this_BogusTypeRefFragment_1= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA501 extends DFA {

        public DFA501(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 501;
            this.eot = dfa_24;
            this.eof = dfa_317;
            this.min = dfa_308;
            this.max = dfa_318;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_319;
        }
        public String getDescription() {
            return "()* loopback of 32121:2: ( (lv_declaredModifiers_0_0= ruleN4Modifier ) )*";
        }
    }

    class DFA502 extends DFA {

        public DFA502(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 502;
            this.eot = dfa_18;
            this.eof = dfa_320;
            this.min = dfa_191;
            this.max = dfa_321;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_322;
        }
        public String getDescription() {
            return "32139:3: (this_BogusTypeRefFragment_1= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA505 extends DFA {

        public DFA505(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 505;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 32334:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }

    class DFA507 extends DFA {

        public DFA507(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 507;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "32364:3: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA510 extends DFA {

        public DFA510(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 510;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 32518:2: ( (lv_declaredModifiers_1_0= ruleN4Modifier ) )*";
        }
    }

    class DFA512 extends DFA {

        public DFA512(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 512;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "32548:3: (this_BogusTypeRefFragment_3= ruleBogusTypeRefFragment[$current] )?";
        }
    }

    class DFA520 extends DFA {

        public DFA520(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 520;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_306;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "32866:4: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA520_1 = input.LA(1);

                         
                        int index520_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index520_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 520, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA522 extends DFA {

        public DFA522(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 522;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_306;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "32935:4: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA522_1 = input.LA(1);

                         
                        int index522_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred314_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index522_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 522, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA524 extends DFA {

        public DFA524(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 524;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_306;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "33018:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA524_1 = input.LA(1);

                         
                        int index524_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index524_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 524, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA527 extends DFA {

        public DFA527(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 527;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_312;
            this.max = dfa_313;
            this.accept = dfa_314;
            this.special = dfa_315;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "33098:3: ( ( ( () LeftCurlyBracket ) )=> (lv_body_3_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA527_1 = input.LA(1);

                         
                        int index527_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index527_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 527, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA534 extends DFA {

        public DFA534(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 534;
            this.eot = dfa_276;
            this.eof = dfa_277;
            this.min = dfa_278;
            this.max = dfa_306;
            this.accept = dfa_280;
            this.special = dfa_281;
            this.transition = dfa_307;
        }
        public String getDescription() {
            return "33940:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_7_0= ruleBlock ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA534_1 = input.LA(1);

                         
                        int index534_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalN4JSXParser()) ) {s = 81;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index534_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 534, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA537 extends DFA {

        public DFA537(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 537;
            this.eot = dfa_102;
            this.eof = dfa_102;
            this.min = dfa_312;
            this.max = dfa_313;
            this.accept = dfa_314;
            this.special = dfa_315;
            this.transition = dfa_316;
        }
        public String getDescription() {
            return "34382:1: ( ( ( () LeftCurlyBracket ) )=> (lv_body_7_0= norm1_Block ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA537_1 = input.LA(1);

                         
                        int index537_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalN4JSXParser()) ) {s = 80;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index537_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 537, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_323s = "\1\154\1\176\1\uffff\1\176\1\uffff";
    static final String[] dfa_324s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\1\uffff\2\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\1\uffff\2\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            ""
    };
    static final char[] dfa_323 = DFA.unpackEncodedStringToUnsignedChars(dfa_323s);
    static final short[][] dfa_324 = unpackEncodedStringArray(dfa_324s);

    class DFA547 extends DFA {

        public DFA547(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 547;
            this.eot = dfa_174;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_323;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "()* loopback of 34696:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleElision ) )* ( (lv_elements_6_0= ruleBindingRestElement ) ) )*";
        }
    }
    static final String[] dfa_325s = {
            "\1\1\13\uffff\1\2",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\2\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            "",
            "\3\4\1\uffff\4\4\2\uffff\1\4\4\uffff\2\4\3\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\2\4\7\uffff\1\4\2\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\1\4\3\uffff\2\4\1\uffff\2\4\23\uffff\1\4\3\uffff\1\4\11\uffff\1\3\11\uffff\2\4\1\2\1\uffff\1\4\17\uffff\1\4",
            ""
    };
    static final short[][] dfa_325 = unpackEncodedStringArray(dfa_325s);

    class DFA553 extends DFA {

        public DFA553(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 553;
            this.eot = dfa_174;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_323;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_325;
        }
        public String getDescription() {
            return "()* loopback of 34825:2: (otherlv_4= Comma ( (lv_elements_5_0= ruleElision ) )* ( (lv_elements_6_0= norm1_BindingRestElement ) ) )*";
        }
    }
    static final String dfa_326s = "\111\uffff";
    static final String dfa_327s = "\1\uffff\1\107\40\uffff\1\107\4\uffff\31\107\11\uffff";
    static final String dfa_328s = "\1\4\1\140\40\uffff\1\140\4\uffff\31\140\11\uffff";
    static final String dfa_329s = "\1\u0095\1\160\40\uffff\1\160\4\uffff\31\160\11\uffff";
    static final String dfa_330s = "\2\uffff\40\1\1\uffff\4\1\31\uffff\7\1\1\2\1\1";
    static final String dfa_331s = "\1\3\1\30\40\uffff\1\12\4\uffff\1\13\1\17\1\22\1\25\1\31\1\0\1\4\1\7\1\14\1\20\1\23\1\26\1\32\1\1\1\5\1\10\1\15\1\21\1\24\1\27\1\33\1\2\1\6\1\11\1\16\11\uffff}>";
    static final String[] dfa_332s = {
            "\1\65\1\60\1\72\1\25\1\67\1\73\1\75\1\54\1\7\1\10\1\53\1\21\1\11\1\16\1\17\1\74\1\52\1\12\1\15\1\23\1\76\1\27\1\55\1\31\1\62\1\35\1\71\1\70\1\2\1\4\1\5\1\6\1\45\1\30\1\33\1\64\1\40\1\42\1\66\1\3\1\14\1\46\1\57\1\43\1\32\1\44\1\63\1\37\1\41\4\uffff\1\20\1\47\1\51\1\26\1\77\1\50\1\34\1\36\21\uffff\1\56\1\13\1\22\1\24\1\61\23\uffff\1\107\1\106\11\uffff\1\101\1\uffff\1\104\1\uffff\1\103\2\uffff\1\105\1\uffff\1\1\2\uffff\1\100\23\uffff\1\102",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_326 = DFA.unpackEncodedString(dfa_326s);
    static final short[] dfa_327 = DFA.unpackEncodedString(dfa_327s);
    static final char[] dfa_328 = DFA.unpackEncodedStringToUnsignedChars(dfa_328s);
    static final char[] dfa_329 = DFA.unpackEncodedStringToUnsignedChars(dfa_329s);
    static final short[] dfa_330 = DFA.unpackEncodedString(dfa_330s);
    static final short[] dfa_331 = DFA.unpackEncodedString(dfa_331s);
    static final short[][] dfa_332 = unpackEncodedStringArray(dfa_332s);

    class DFA557 extends DFA {

        public DFA557(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 557;
            this.eot = dfa_326;
            this.eof = dfa_327;
            this.min = dfa_328;
            this.max = dfa_329;
            this.accept = dfa_330;
            this.special = dfa_331;
            this.transition = dfa_332;
        }
        public String getDescription() {
            return "34915:1: ( ( ( ( ( ( ( ruleLiteralOrComputedPropertyName ) ) Colon ) )=> ( ( (lv_declaredName_0_0= ruleLiteralOrComputedPropertyName ) ) otherlv_1= Colon ) ) ( (lv_value_2_0= ruleBindingElement ) ) ) | ( (lv_value_3_0= ruleSingleNameBinding ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA557_44 = input.LA(1);

                         
                        int index557_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_44==EOF||LA557_44==Comma||LA557_44==EqualsSign||LA557_44==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_44==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_44);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA557_52 = input.LA(1);

                         
                        int index557_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_52==EOF||LA557_52==Comma||LA557_52==EqualsSign||LA557_52==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_52==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_52);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA557_60 = input.LA(1);

                         
                        int index557_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_60==EOF||LA557_60==Comma||LA557_60==EqualsSign||LA557_60==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_60==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_60);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA557_0 = input.LA(1);

                         
                        int index557_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA557_0>=7 && LA557_0<=126 && (s=T2S.M_47[LA557_0-(7)])>=0) && (synpred327_InternalN4JSXParser())) { /* 33 cases */ }
                        else if ( (LA557_0==Yield) ) {s = 34;}

                        else if ( (LA557_0==Null) && (synpred327_InternalN4JSXParser())) {s = 35;}

                        else if ( (LA557_0==True) && (synpred327_InternalN4JSXParser())) {s = 36;}

                        else if ( (LA557_0==False) && (synpred327_InternalN4JSXParser())) {s = 37;}

                        else if ( (LA557_0==Enum) && (synpred327_InternalN4JSXParser())) {s = 38;}

                        
                        else if ((LA557_0>=4 && LA557_0<=86 && (s=T2S.M_48[LA557_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA557_0==RULE_STRING) && (synpred327_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA557_0==RULE_DOUBLE) && (synpred327_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA557_0==RULE_INT) && (synpred327_InternalN4JSXParser())) {s = 66;}

                        else if ( (LA557_0==RULE_OCTAL_INT) && (synpred327_InternalN4JSXParser())) {s = 67;}

                        else if ( (LA557_0==RULE_HEX_INT) && (synpred327_InternalN4JSXParser())) {s = 68;}

                        else if ( (LA557_0==RULE_SCIENTIFIC_INT) && (synpred327_InternalN4JSXParser())) {s = 69;}

                        else if ( (LA557_0==LeftSquareBracket) && (synpred327_InternalN4JSXParser())) {s = 70;}

                        else if ( (LA557_0==CommercialAt) ) {s = 71;}

                         
                        input.seek(index557_0);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA557_45 = input.LA(1);

                         
                        int index557_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_45==EOF||LA557_45==Comma||LA557_45==EqualsSign||LA557_45==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_45==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_45);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA557_53 = input.LA(1);

                         
                        int index557_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_53==EOF||LA557_53==Comma||LA557_53==EqualsSign||LA557_53==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_53==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_53);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA557_61 = input.LA(1);

                         
                        int index557_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_61==EOF||LA557_61==Comma||LA557_61==EqualsSign||LA557_61==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_61==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_61);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA557_46 = input.LA(1);

                         
                        int index557_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_46==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_46==EOF||LA557_46==Comma||LA557_46==EqualsSign||LA557_46==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_46);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA557_54 = input.LA(1);

                         
                        int index557_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_54==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_54==EOF||LA557_54==Comma||LA557_54==EqualsSign||LA557_54==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_54);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA557_62 = input.LA(1);

                         
                        int index557_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_62==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_62==EOF||LA557_62==Comma||LA557_62==EqualsSign||LA557_62==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_62);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA557_34 = input.LA(1);

                         
                        int index557_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_34==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_34==EOF||LA557_34==Comma||LA557_34==EqualsSign||LA557_34==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_34);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA557_39 = input.LA(1);

                         
                        int index557_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_39==EOF||LA557_39==Comma||LA557_39==EqualsSign||LA557_39==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_39==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_39);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA557_47 = input.LA(1);

                         
                        int index557_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_47==EOF||LA557_47==Comma||LA557_47==EqualsSign||LA557_47==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_47==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_47);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA557_55 = input.LA(1);

                         
                        int index557_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_55==EOF||LA557_55==Comma||LA557_55==EqualsSign||LA557_55==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_55==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_55);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA557_63 = input.LA(1);

                         
                        int index557_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_63==EOF||LA557_63==Comma||LA557_63==EqualsSign||LA557_63==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_63==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_63);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA557_40 = input.LA(1);

                         
                        int index557_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_40==EOF||LA557_40==Comma||LA557_40==EqualsSign||LA557_40==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_40==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_40);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA557_48 = input.LA(1);

                         
                        int index557_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_48==EOF||LA557_48==Comma||LA557_48==EqualsSign||LA557_48==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_48==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_48);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA557_56 = input.LA(1);

                         
                        int index557_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_56==EOF||LA557_56==Comma||LA557_56==EqualsSign||LA557_56==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_56==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_56);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA557_41 = input.LA(1);

                         
                        int index557_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_41==EOF||LA557_41==Comma||LA557_41==EqualsSign||LA557_41==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_41==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_41);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA557_49 = input.LA(1);

                         
                        int index557_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_49==EOF||LA557_49==Comma||LA557_49==EqualsSign||LA557_49==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_49==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_49);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA557_57 = input.LA(1);

                         
                        int index557_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_57==EOF||LA557_57==Comma||LA557_57==EqualsSign||LA557_57==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_57==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_57);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA557_42 = input.LA(1);

                         
                        int index557_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_42==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_42==EOF||LA557_42==Comma||LA557_42==EqualsSign||LA557_42==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_42);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA557_50 = input.LA(1);

                         
                        int index557_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_50==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_50==EOF||LA557_50==Comma||LA557_50==EqualsSign||LA557_50==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_50);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA557_58 = input.LA(1);

                         
                        int index557_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_58==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA557_58==EOF||LA557_58==Comma||LA557_58==EqualsSign||LA557_58==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index557_58);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA557_1 = input.LA(1);

                         
                        int index557_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_1==EOF||LA557_1==Comma||LA557_1==EqualsSign||LA557_1==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_1==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_1);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA557_43 = input.LA(1);

                         
                        int index557_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_43==EOF||LA557_43==Comma||LA557_43==EqualsSign||LA557_43==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_43==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_43);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA557_51 = input.LA(1);

                         
                        int index557_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_51==EOF||LA557_51==Comma||LA557_51==EqualsSign||LA557_51==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_51==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_51);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA557_59 = input.LA(1);

                         
                        int index557_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA557_59==EOF||LA557_59==Comma||LA557_59==EqualsSign||LA557_59==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA557_59==Colon) && (synpred327_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index557_59);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 557, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_333s = "\1\4\1\140\45\uffff\31\140\11\uffff";
    static final String dfa_334s = "\1\u0095\1\160\45\uffff\31\160\11\uffff";
    static final String dfa_335s = "\2\uffff\45\1\31\uffff\7\1\1\2\1\1";
    static final String dfa_336s = "\1\21\1\3\45\uffff\1\15\1\22\1\25\1\30\1\0\1\4\1\7\1\12\1\16\1\23\1\26\1\31\1\1\1\5\1\10\1\13\1\17\1\24\1\27\1\32\1\2\1\6\1\11\1\14\1\20\11\uffff}>";
    static final String[] dfa_337s = {
            "\1\65\1\60\1\72\1\25\1\67\1\73\1\75\1\54\1\7\1\10\1\53\1\21\1\11\1\16\1\17\1\74\1\52\1\12\1\15\1\23\1\76\1\27\1\55\1\31\1\62\1\35\1\71\1\70\1\2\1\4\1\5\1\6\1\45\1\30\1\33\1\64\1\40\1\42\1\66\1\3\1\14\1\46\1\57\1\43\1\32\1\44\1\63\1\37\1\41\4\uffff\1\20\1\47\1\51\1\26\1\77\1\50\1\34\1\36\21\uffff\1\56\1\13\1\22\1\24\1\61\23\uffff\1\107\1\106\11\uffff\1\101\1\uffff\1\104\1\uffff\1\103\2\uffff\1\105\1\uffff\1\1\2\uffff\1\100\23\uffff\1\102",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "\1\107\3\uffff\1\110\2\uffff\1\107\10\uffff\1\107",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_333 = DFA.unpackEncodedStringToUnsignedChars(dfa_333s);
    static final char[] dfa_334 = DFA.unpackEncodedStringToUnsignedChars(dfa_334s);
    static final short[] dfa_335 = DFA.unpackEncodedString(dfa_335s);
    static final short[] dfa_336 = DFA.unpackEncodedString(dfa_336s);
    static final short[][] dfa_337 = unpackEncodedStringArray(dfa_337s);

    class DFA558 extends DFA {

        public DFA558(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 558;
            this.eot = dfa_326;
            this.eof = dfa_326;
            this.min = dfa_333;
            this.max = dfa_334;
            this.accept = dfa_335;
            this.special = dfa_336;
            this.transition = dfa_337;
        }
        public String getDescription() {
            return "34994:1: ( ( ( ( ( ( ( norm1_LiteralOrComputedPropertyName ) ) Colon ) )=> ( ( (lv_declaredName_0_0= norm1_LiteralOrComputedPropertyName ) ) otherlv_1= Colon ) ) ( (lv_value_2_0= norm1_BindingElement ) ) ) | ( (lv_value_3_0= norm1_SingleNameBinding ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA558_43 = input.LA(1);

                         
                        int index558_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_43==Comma||LA558_43==EqualsSign||LA558_43==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_43==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_43);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA558_51 = input.LA(1);

                         
                        int index558_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_51==Comma||LA558_51==EqualsSign||LA558_51==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_51==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_51);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA558_59 = input.LA(1);

                         
                        int index558_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_59==Comma||LA558_59==EqualsSign||LA558_59==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_59==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_59);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA558_1 = input.LA(1);

                         
                        int index558_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_1==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_1==Comma||LA558_1==EqualsSign||LA558_1==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_1);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA558_44 = input.LA(1);

                         
                        int index558_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_44==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_44==Comma||LA558_44==EqualsSign||LA558_44==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_44);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA558_52 = input.LA(1);

                         
                        int index558_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_52==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_52==Comma||LA558_52==EqualsSign||LA558_52==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_52);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA558_60 = input.LA(1);

                         
                        int index558_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_60==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_60==Comma||LA558_60==EqualsSign||LA558_60==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_60);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA558_45 = input.LA(1);

                         
                        int index558_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_45==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_45==Comma||LA558_45==EqualsSign||LA558_45==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_45);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA558_53 = input.LA(1);

                         
                        int index558_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_53==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_53==Comma||LA558_53==EqualsSign||LA558_53==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_53);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA558_61 = input.LA(1);

                         
                        int index558_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_61==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_61==Comma||LA558_61==EqualsSign||LA558_61==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_61);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA558_46 = input.LA(1);

                         
                        int index558_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_46==Comma||LA558_46==EqualsSign||LA558_46==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_46==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_46);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA558_54 = input.LA(1);

                         
                        int index558_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_54==Comma||LA558_54==EqualsSign||LA558_54==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_54==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_54);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA558_62 = input.LA(1);

                         
                        int index558_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_62==Comma||LA558_62==EqualsSign||LA558_62==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_62==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_62);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA558_39 = input.LA(1);

                         
                        int index558_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_39==Comma||LA558_39==EqualsSign||LA558_39==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_39==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_39);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA558_47 = input.LA(1);

                         
                        int index558_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_47==Comma||LA558_47==EqualsSign||LA558_47==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_47==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_47);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA558_55 = input.LA(1);

                         
                        int index558_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_55==Comma||LA558_55==EqualsSign||LA558_55==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_55==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_55);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA558_63 = input.LA(1);

                         
                        int index558_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_63==Comma||LA558_63==EqualsSign||LA558_63==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_63==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_63);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA558_0 = input.LA(1);

                         
                        int index558_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA558_0>=7 && LA558_0<=126 && (s=T2S.M_49[LA558_0-(7)])>=0) && (synpred328_InternalN4JSXParser())) { /* 38 cases */ }
                        
                        else if ((LA558_0>=4 && LA558_0<=86 && (s=T2S.M_48[LA558_0-(4)])>=0)) { /* 25 cases */ }
                        else if ( (LA558_0==RULE_STRING) && (synpred328_InternalN4JSXParser())) {s = 64;}

                        else if ( (LA558_0==RULE_DOUBLE) && (synpred328_InternalN4JSXParser())) {s = 65;}

                        else if ( (LA558_0==RULE_INT) && (synpred328_InternalN4JSXParser())) {s = 66;}

                        else if ( (LA558_0==RULE_OCTAL_INT) && (synpred328_InternalN4JSXParser())) {s = 67;}

                        else if ( (LA558_0==RULE_HEX_INT) && (synpred328_InternalN4JSXParser())) {s = 68;}

                        else if ( (LA558_0==RULE_SCIENTIFIC_INT) && (synpred328_InternalN4JSXParser())) {s = 69;}

                        else if ( (LA558_0==LeftSquareBracket) && (synpred328_InternalN4JSXParser())) {s = 70;}

                        else if ( (LA558_0==CommercialAt) ) {s = 71;}

                         
                        input.seek(index558_0);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA558_40 = input.LA(1);

                         
                        int index558_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_40==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_40==Comma||LA558_40==EqualsSign||LA558_40==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_40);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA558_48 = input.LA(1);

                         
                        int index558_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_48==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_48==Comma||LA558_48==EqualsSign||LA558_48==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_48);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA558_56 = input.LA(1);

                         
                        int index558_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_56==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_56==Comma||LA558_56==EqualsSign||LA558_56==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_56);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA558_41 = input.LA(1);

                         
                        int index558_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_41==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_41==Comma||LA558_41==EqualsSign||LA558_41==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_41);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA558_49 = input.LA(1);

                         
                        int index558_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_49==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_49==Comma||LA558_49==EqualsSign||LA558_49==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_49);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA558_57 = input.LA(1);

                         
                        int index558_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_57==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                        else if ( (LA558_57==Comma||LA558_57==EqualsSign||LA558_57==RightCurlyBracket) ) {s = 71;}

                         
                        input.seek(index558_57);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA558_42 = input.LA(1);

                         
                        int index558_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_42==Comma||LA558_42==EqualsSign||LA558_42==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_42==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_42);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA558_50 = input.LA(1);

                         
                        int index558_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_50==Comma||LA558_50==EqualsSign||LA558_50==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_50==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_50);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA558_58 = input.LA(1);

                         
                        int index558_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA558_58==Comma||LA558_58==EqualsSign||LA558_58==RightCurlyBracket) ) {s = 71;}

                        else if ( (LA558_58==Colon) && (synpred328_InternalN4JSXParser())) {s = 72;}

                         
                        input.seek(index558_58);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 558, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_338s = "\23\uffff";
    static final String dfa_339s = "\1\4\1\0\21\uffff";
    static final String dfa_340s = "\1\176\1\0\21\uffff";
    static final String dfa_341s = "\2\uffff\1\2\1\3\15\uffff\1\1\1\4";
    static final String dfa_342s = "\1\uffff\1\0\21\uffff}>";
    static final String[] dfa_343s = {
            "\2\3\2\uffff\1\3\23\uffff\1\3\2\uffff\1\3\7\uffff\1\3\2\uffff\1\3\5\uffff\1\3\1\uffff\2\3\50\uffff\1\1\14\uffff\1\3\1\uffff\1\2\2\uffff\1\3\2\uffff\1\3\14\uffff\1\3",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_338 = DFA.unpackEncodedString(dfa_338s);
    static final char[] dfa_339 = DFA.unpackEncodedStringToUnsignedChars(dfa_339s);
    static final char[] dfa_340 = DFA.unpackEncodedStringToUnsignedChars(dfa_340s);
    static final short[] dfa_341 = DFA.unpackEncodedString(dfa_341s);
    static final short[] dfa_342 = DFA.unpackEncodedString(dfa_342s);
    static final short[][] dfa_343 = unpackEncodedStringArray(dfa_343s);

    class DFA575 extends DFA {

        public DFA575(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 575;
            this.eot = dfa_338;
            this.eof = dfa_338;
            this.min = dfa_339;
            this.max = dfa_340;
            this.accept = dfa_341;
            this.special = dfa_342;
            this.transition = dfa_343;
        }
        public String getDescription() {
            return "35957:1: ( ( ( ( ( () LeftParenthesis ruleTAnonymousFormalParameterList[null] RightParenthesis EqualsSignGreaterThanSign ) )=> ( () otherlv_1= LeftParenthesis this_TAnonymousFormalParameterList_2= ruleTAnonymousFormalParameterList[$current] otherlv_3= RightParenthesis otherlv_4= EqualsSignGreaterThanSign ) ) ( (lv_returnTypeRef_5_0= rulePrimaryTypeExpression ) ) ) | this_ArrayTypeRef_6= ruleArrayTypeRef | this_TypeRefWithModifiers_7= ruleTypeRefWithModifiers | (otherlv_8= LeftParenthesis this_TypeRef_9= ruleTypeRef otherlv_10= RightParenthesis ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA575_1 = input.LA(1);

                         
                        int index575_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalN4JSXParser()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index575_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 575, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_344s = "\173\uffff";
    static final String dfa_345s = "\1\2\172\uffff";
    static final String dfa_346s = "\1\4\1\0\171\uffff";
    static final String dfa_347s = "\1\u0099\1\0\171\uffff";
    static final String dfa_348s = "\2\uffff\1\2\167\uffff\1\1";
    static final String dfa_349s = "\1\uffff\1\0\171\uffff}>";
    static final String[] dfa_350s = {
            "\114\2\1\uffff\16\2\1\1\2\2\1\uffff\17\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_344 = DFA.unpackEncodedString(dfa_344s);
    static final short[] dfa_345 = DFA.unpackEncodedString(dfa_345s);
    static final char[] dfa_346 = DFA.unpackEncodedStringToUnsignedChars(dfa_346s);
    static final char[] dfa_347 = DFA.unpackEncodedStringToUnsignedChars(dfa_347s);
    static final short[] dfa_348 = DFA.unpackEncodedString(dfa_348s);
    static final short[] dfa_349 = DFA.unpackEncodedString(dfa_349s);
    static final short[][] dfa_350 = unpackEncodedStringArray(dfa_350s);

    class DFA579 extends DFA {

        public DFA579(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 579;
            this.eot = dfa_344;
            this.eof = dfa_345;
            this.min = dfa_346;
            this.max = dfa_347;
            this.accept = dfa_348;
            this.special = dfa_349;
            this.transition = dfa_350;
        }
        public String getDescription() {
            return "36202:2: ( ( ( PlusSign ) )=> (lv_dynamic_2_0= PlusSign ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA579_1 = input.LA(1);

                         
                        int index579_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred335_InternalN4JSXParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index579_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 579, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_351s = "\1\4\1\uffff\1\10\7\uffff\2\10";
    static final String dfa_352s = "\1\176\1\uffff\1\u0093\7\uffff\2\176";
    static final String dfa_353s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\uffff";
    static final String[] dfa_354s = {
            "\1\11\1\5\2\uffff\1\1\23\uffff\1\1\2\uffff\1\1\7\uffff\1\10\2\uffff\1\1\5\uffff\1\4\1\uffff\1\5\1\1\50\uffff\1\7\16\uffff\1\3\2\uffff\1\6\2\uffff\1\2\14\uffff\1\1",
            "",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\75\uffff\1\12\14\uffff\1\1\24\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\112\uffff\1\1",
            "\1\1\23\uffff\1\1\2\uffff\1\1\12\uffff\1\1\5\uffff\1\4\2\uffff\1\1\112\uffff\1\1"
    };
    static final char[] dfa_351 = DFA.unpackEncodedStringToUnsignedChars(dfa_351s);
    static final char[] dfa_352 = DFA.unpackEncodedStringToUnsignedChars(dfa_352s);
    static final short[] dfa_353 = DFA.unpackEncodedString(dfa_353s);
    static final short[][] dfa_354 = unpackEncodedStringArray(dfa_354s);

    class DFA582 extends DFA {

        public DFA582(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 582;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_351;
            this.max = dfa_352;
            this.accept = dfa_353;
            this.special = dfa_55;
            this.transition = dfa_354;
        }
        public String getDescription() {
            return "36356:1: (this_ParameterizedTypeRef_0= ruleParameterizedTypeRef | this_ArrayTypeRef_1= ruleArrayTypeRef | this_ThisTypeRef_2= ruleThisTypeRef | this_TypeTypeRef_3= ruleTypeTypeRef | this_FunctionTypeExpressionOLD_4= ruleFunctionTypeExpressionOLD | this_ArrowFunctionTypeExpression_5= ruleArrowFunctionTypeExpression | this_UnionTypeExpressionOLD_6= ruleUnionTypeExpressionOLD | this_IntersectionTypeExpressionOLD_7= ruleIntersectionTypeExpressionOLD )";
        }
    }
    static final String dfa_355s = "\1\uffff\1\34\14\uffff\1\34\3\uffff\3\34\11\uffff";
    static final String dfa_356s = "\1\4\1\133\12\uffff\1\144\1\uffff\1\133\3\144\3\133\11\uffff";
    static final String dfa_357s = "\1\176\1\157\12\uffff\1\156\1\uffff\1\157\3\156\3\157\11\uffff";
    static final String dfa_358s = "\2\uffff\12\1\1\uffff\1\1\7\uffff\7\1\1\2\1\1";
    static final String dfa_359s = "\1\0\1\5\12\uffff\1\6\1\uffff\1\4\1\1\1\7\1\3\1\2\1\10\1\11\11\uffff}>";
    static final String[] dfa_360s = {
            "\1\21\1\14\1\26\1\uffff\1\23\1\27\1\31\1\10\2\uffff\1\7\4\uffff\1\30\1\6\3\uffff\1\32\1\uffff\1\11\1\uffff\1\16\1\uffff\1\25\1\24\7\uffff\1\20\1\uffff\1\2\1\22\3\uffff\1\13\1\uffff\1\34\1\uffff\1\17\1\34\6\uffff\1\3\1\5\1\uffff\1\33\1\4\23\uffff\1\12\3\uffff\1\15\5\uffff\1\34\14\uffff\1\34\1\uffff\1\34\2\uffff\1\34\2\uffff\1\34\14\uffff\1\1",
            "\1\34\1\uffff\1\34\1\uffff\2\34\1\uffff\1\34\1\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\35\11\uffff\1\34",
            "",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\35\11\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "\1\34\1\uffff\1\34\1\uffff\2\34\3\uffff\1\35\1\uffff\1\34\2\uffff\1\34\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_355 = DFA.unpackEncodedString(dfa_355s);
    static final char[] dfa_356 = DFA.unpackEncodedStringToUnsignedChars(dfa_356s);
    static final char[] dfa_357 = DFA.unpackEncodedStringToUnsignedChars(dfa_357s);
    static final short[] dfa_358 = DFA.unpackEncodedString(dfa_358s);
    static final short[] dfa_359 = DFA.unpackEncodedString(dfa_359s);
    static final short[][] dfa_360 = unpackEncodedStringArray(dfa_360s);

    class DFA593 extends DFA {

        public DFA593(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 593;
            this.eot = dfa_57;
            this.eof = dfa_355;
            this.min = dfa_356;
            this.max = dfa_357;
            this.accept = dfa_358;
            this.special = dfa_359;
            this.transition = dfa_360;
        }
        public String getDescription() {
            return "36960:3: ( ( ( ( ruleBindingIdentifier ) )=> (lv_name_1_0= ruleBindingIdentifier ) ) otherlv_2= Colon )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA593_0 = input.LA(1);

                         
                        int index593_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_0==RULE_IDENTIFIER) ) {s = 1;}

                        
                        else if ((LA593_0>=11 && LA593_0<=126 && (s=T2S.M_51[LA593_0-(11)])>=0) && (synpred337_InternalN4JSXParser())) { /* 11 cases */ }
                        else if ( (LA593_0==Constructor) ) {s = 12;}

                        else if ( (LA593_0==Of) && (synpred337_InternalN4JSXParser())) {s = 13;}

                        else if ( (LA593_0==Target) ) {s = 14;}

                        else if ( (LA593_0==Type) ) {s = 15;}

                        else if ( (LA593_0==Union) ) {s = 16;}

                        else if ( (LA593_0==Intersection) ) {s = 17;}

                        else if ( (LA593_0==This) ) {s = 18;}

                        else if ( (LA593_0==Promisify) ) {s = 19;}

                        else if ( (LA593_0==Await) ) {s = 20;}

                        else if ( (LA593_0==Async) && (synpred337_InternalN4JSXParser())) {s = 21;}

                        else if ( (LA593_0==Implements) && (synpred337_InternalN4JSXParser())) {s = 22;}

                        else if ( (LA593_0==Interface) && (synpred337_InternalN4JSXParser())) {s = 23;}

                        else if ( (LA593_0==Private) && (synpred337_InternalN4JSXParser())) {s = 24;}

                        else if ( (LA593_0==Protected) && (synpred337_InternalN4JSXParser())) {s = 25;}

                        else if ( (LA593_0==Public) && (synpred337_InternalN4JSXParser())) {s = 26;}

                        else if ( (LA593_0==Out) && (synpred337_InternalN4JSXParser())) {s = 27;}

                        else if ( (LA593_0==This_1||LA593_0==Void||LA593_0==LeftParenthesis||LA593_0==QuestionMark||LA593_0==LeftSquareBracket||LA593_0==LeftCurlyBracket||LA593_0==Tilde) ) {s = 28;}

                         
                        input.seek(index593_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA593_15 = input.LA(1);

                         
                        int index593_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_15==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA593_15==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index593_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA593_18 = input.LA(1);

                         
                        int index593_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_18==EOF||LA593_18==Ampersand||LA593_18==RightParenthesis||(LA593_18>=PlusSign && LA593_18<=Comma)||LA593_18==LessThanSign||LA593_18==QuestionMark||LA593_18==VerticalLine) ) {s = 28;}

                        else if ( (LA593_18==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                         
                        input.seek(index593_18);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA593_17 = input.LA(1);

                         
                        int index593_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_17==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA593_17==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index593_17);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA593_14 = input.LA(1);

                         
                        int index593_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_14==EOF||LA593_14==Ampersand||LA593_14==RightParenthesis||(LA593_14>=PlusSign && LA593_14<=Comma)||LA593_14==LessThanSign||LA593_14==QuestionMark||LA593_14==VerticalLine) ) {s = 28;}

                        else if ( (LA593_14==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                         
                        input.seek(index593_14);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA593_1 = input.LA(1);

                         
                        int index593_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_1==EOF||LA593_1==Ampersand||LA593_1==RightParenthesis||(LA593_1>=PlusSign && LA593_1<=Comma)||LA593_1==FullStop||LA593_1==LessThanSign||LA593_1==QuestionMark||LA593_1==VerticalLine) ) {s = 28;}

                        else if ( (LA593_1==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                         
                        input.seek(index593_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA593_12 = input.LA(1);

                         
                        int index593_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_12==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA593_12==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index593_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA593_16 = input.LA(1);

                         
                        int index593_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_16==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA593_16==LeftCurlyBracket) ) {s = 28;}

                         
                        input.seek(index593_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA593_19 = input.LA(1);

                         
                        int index593_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_19==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA593_19==EOF||LA593_19==Ampersand||LA593_19==RightParenthesis||(LA593_19>=PlusSign && LA593_19<=Comma)||LA593_19==LessThanSign||LA593_19==QuestionMark||LA593_19==VerticalLine) ) {s = 28;}

                         
                        input.seek(index593_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA593_20 = input.LA(1);

                         
                        int index593_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA593_20==Colon) && (synpred337_InternalN4JSXParser())) {s = 29;}

                        else if ( (LA593_20==EOF||LA593_20==Ampersand||LA593_20==RightParenthesis||(LA593_20>=PlusSign && LA593_20<=Comma)||LA593_20==LessThanSign||LA593_20==QuestionMark||LA593_20==VerticalLine) ) {s = 28;}

                         
                        input.seek(index593_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 593, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_361s = {
            "\114\2\1\uffff\21\2\1\uffff\3\2\1\1\13\2\3\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\11\uffff\2\2\10\uffff\1\2\1\uffff\1\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_361 = unpackEncodedStringArray(dfa_361s);

    class DFA598 extends DFA {

        public DFA598(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 598;
            this.eot = dfa_344;
            this.eof = dfa_345;
            this.min = dfa_346;
            this.max = dfa_347;
            this.accept = dfa_348;
            this.special = dfa_349;
            this.transition = dfa_361;
        }
        public String getDescription() {
            return "37250:2: ( ( ( LessThanSign )=>otherlv_1= LessThanSign ) ( (lv_typeArgs_2_0= ruleTypeArgument ) ) (otherlv_3= Comma ( (lv_typeArgs_4_0= ruleTypeArgument ) ) )* otherlv_5= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA598_1 = input.LA(1);

                         
                        int index598_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred338_InternalN4JSXParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index598_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 598, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA600 extends DFA {

        public DFA600(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 600;
            this.eot = dfa_344;
            this.eof = dfa_345;
            this.min = dfa_346;
            this.max = dfa_347;
            this.accept = dfa_348;
            this.special = dfa_349;
            this.transition = dfa_361;
        }
        public String getDescription() {
            return "37418:2: ( ( ( LessThanSign )=>otherlv_2= LessThanSign ) ( (lv_typeArgs_3_0= ruleTypeArgument ) ) (otherlv_4= Comma ( (lv_typeArgs_5_0= ruleTypeArgument ) ) )* otherlv_6= GreaterThanSign )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA600_1 = input.LA(1);

                         
                        int index600_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred339_InternalN4JSXParser()) ) {s = 122;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index600_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 600, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_362s = "\1\4\2\0\1\uffff\75\0\3\uffff";
    static final String dfa_363s = "\1\176\2\0\1\uffff\75\0\3\uffff";
    static final String dfa_364s = "\3\uffff\1\3\75\uffff\1\1\1\4\1\2";
    static final String dfa_365s = "\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\3\uffff}>";
    static final String[] dfa_366s = {
            "\1\66\1\61\1\73\1\30\1\70\1\74\1\76\1\55\1\12\1\13\1\54\1\24\1\14\1\21\1\22\1\75\1\53\1\15\1\20\1\26\1\77\1\32\1\56\1\34\1\63\1\40\1\72\1\71\1\5\1\7\1\10\1\11\1\50\1\33\1\36\1\65\1\43\1\45\1\67\1\6\1\17\1\51\1\60\1\46\1\35\1\47\1\64\1\42\1\44\4\uffff\1\23\1\1\1\52\1\31\1\100\1\2\1\37\1\41\21\uffff\1\57\1\16\1\25\1\27\1\62\17\uffff\1\3\27\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_362 = DFA.unpackEncodedStringToUnsignedChars(dfa_362s);
    static final char[] dfa_363 = DFA.unpackEncodedStringToUnsignedChars(dfa_363s);
    static final short[] dfa_364 = DFA.unpackEncodedString(dfa_364s);
    static final short[] dfa_365 = DFA.unpackEncodedString(dfa_365s);
    static final short[][] dfa_366 = unpackEncodedStringArray(dfa_366s);

    class DFA604 extends DFA {

        public DFA604(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 604;
            this.eot = dfa_224;
            this.eof = dfa_224;
            this.min = dfa_362;
            this.max = dfa_363;
            this.accept = dfa_364;
            this.special = dfa_365;
            this.transition = dfa_366;
        }
        public String getDescription() {
            return "37561:1: ( ( ( ( () Get ( ( ruleIdentifierName ) ) ) )=>this_TStructGetter_0= ruleTStructGetter ) | ( ( ( () Set ( ( ruleIdentifierName ) ) ) )=>this_TStructSetter_1= ruleTStructSetter ) | ( ( ( () ( LessThanSign ( ( ruleTypeVariable ) ) ( Comma ( ( ruleTypeVariable ) ) )* GreaterThanSign )? ( ( ruleIdentifierName ) ) LeftParenthesis ) )=>this_TStructMethod_2= ruleTStructMethod ) | this_TStructField_3= ruleTStructField )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA604_0 = input.LA(1);

                         
                        int index604_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA604_0==Get) ) {s = 1;}

                        else if ( (LA604_0==Set) ) {s = 2;}

                        else if ( (LA604_0==LessThanSign) && (synpred342_InternalN4JSXParser())) {s = 3;}

                        
                        else if ((LA604_0>=4 && LA604_0<=126 && (s=T2S.M_52[LA604_0-(4)])>=0)) { /* 62 cases */ }
                        input.seek(index604_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA604_1 = input.LA(1);

                         
                        int index604_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_InternalN4JSXParser()) ) {s = 65;}

                        else if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA604_2 = input.LA(1);

                         
                        int index604_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred341_InternalN4JSXParser()) ) {s = 67;}

                        else if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA604_4 = input.LA(1);

                         
                        int index604_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA604_5 = input.LA(1);

                         
                        int index604_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA604_6 = input.LA(1);

                         
                        int index604_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA604_7 = input.LA(1);

                         
                        int index604_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA604_8 = input.LA(1);

                         
                        int index604_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA604_9 = input.LA(1);

                         
                        int index604_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA604_10 = input.LA(1);

                         
                        int index604_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA604_11 = input.LA(1);

                         
                        int index604_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA604_12 = input.LA(1);

                         
                        int index604_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA604_13 = input.LA(1);

                         
                        int index604_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA604_14 = input.LA(1);

                         
                        int index604_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA604_15 = input.LA(1);

                         
                        int index604_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA604_16 = input.LA(1);

                         
                        int index604_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA604_17 = input.LA(1);

                         
                        int index604_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA604_18 = input.LA(1);

                         
                        int index604_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA604_19 = input.LA(1);

                         
                        int index604_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA604_20 = input.LA(1);

                         
                        int index604_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA604_21 = input.LA(1);

                         
                        int index604_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA604_22 = input.LA(1);

                         
                        int index604_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA604_23 = input.LA(1);

                         
                        int index604_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA604_24 = input.LA(1);

                         
                        int index604_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA604_25 = input.LA(1);

                         
                        int index604_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA604_26 = input.LA(1);

                         
                        int index604_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA604_27 = input.LA(1);

                         
                        int index604_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA604_28 = input.LA(1);

                         
                        int index604_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA604_29 = input.LA(1);

                         
                        int index604_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA604_30 = input.LA(1);

                         
                        int index604_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA604_31 = input.LA(1);

                         
                        int index604_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA604_32 = input.LA(1);

                         
                        int index604_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA604_33 = input.LA(1);

                         
                        int index604_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA604_34 = input.LA(1);

                         
                        int index604_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA604_35 = input.LA(1);

                         
                        int index604_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA604_36 = input.LA(1);

                         
                        int index604_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA604_37 = input.LA(1);

                         
                        int index604_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA604_38 = input.LA(1);

                         
                        int index604_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA604_39 = input.LA(1);

                         
                        int index604_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA604_40 = input.LA(1);

                         
                        int index604_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA604_41 = input.LA(1);

                         
                        int index604_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA604_42 = input.LA(1);

                         
                        int index604_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA604_43 = input.LA(1);

                         
                        int index604_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA604_44 = input.LA(1);

                         
                        int index604_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA604_45 = input.LA(1);

                         
                        int index604_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA604_46 = input.LA(1);

                         
                        int index604_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA604_47 = input.LA(1);

                         
                        int index604_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA604_48 = input.LA(1);

                         
                        int index604_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA604_49 = input.LA(1);

                         
                        int index604_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA604_50 = input.LA(1);

                         
                        int index604_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA604_51 = input.LA(1);

                         
                        int index604_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA604_52 = input.LA(1);

                         
                        int index604_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA604_53 = input.LA(1);

                         
                        int index604_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA604_54 = input.LA(1);

                         
                        int index604_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA604_55 = input.LA(1);

                         
                        int index604_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA604_56 = input.LA(1);

                         
                        int index604_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA604_57 = input.LA(1);

                         
                        int index604_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_57);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA604_58 = input.LA(1);

                         
                        int index604_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_58);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA604_59 = input.LA(1);

                         
                        int index604_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_59);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA604_60 = input.LA(1);

                         
                        int index604_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_60);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA604_61 = input.LA(1);

                         
                        int index604_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_61);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA604_62 = input.LA(1);

                         
                        int index604_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_62);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA604_63 = input.LA(1);

                         
                        int index604_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_63);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA604_64 = input.LA(1);

                         
                        int index604_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred342_InternalN4JSXParser()) ) {s = 3;}

                        else if ( (true) ) {s = 66;}

                         
                        input.seek(index604_64);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 604, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA697 extends DFA {

        public DFA697(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 697;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "15351:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA699 extends DFA {

        public DFA699(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 699;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "15591:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA701 extends DFA {

        public DFA701(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 701;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "15658:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA703 extends DFA {

        public DFA703(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 703;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "15898:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA705 extends DFA {

        public DFA705(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 705;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "15972:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA707 extends DFA {

        public DFA707(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 707;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "16493:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA709 extends DFA {

        public DFA709(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 709;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "16728:2: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA711 extends DFA {

        public DFA711(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 711;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "17249:28: ( ( ruleTypeRefWithModifiers ) )?";
        }
    }

    class DFA771 extends DFA {

        public DFA771(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 771;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 30219:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA773 extends DFA {

        public DFA773(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 773;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "30223:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA777 extends DFA {

        public DFA777(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 777;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 30523:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA779 extends DFA {

        public DFA779(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 779;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "30527:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA783 extends DFA {

        public DFA783(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 783;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 31105:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA785 extends DFA {

        public DFA785(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 785;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "31109:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }

    class DFA789 extends DFA {

        public DFA789(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 789;
            this.eot = dfa_24;
            this.eof = dfa_24;
            this.min = dfa_308;
            this.max = dfa_309;
            this.accept = dfa_310;
            this.special = dfa_28;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "()* loopback of 31815:2: ( ( ruleN4Modifier ) )*";
        }
    }

    class DFA791 extends DFA {

        public DFA791(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 791;
            this.eot = dfa_18;
            this.eof = dfa_18;
            this.min = dfa_195;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_22;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "31819:29: ( ruleBogusTypeRefFragment[null] )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xFE1FE7FDFFF8FF72L,0x57A24C6AD25D0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xFE1FE7FDFFF8FF72L,0x57A24C6AD25C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000000000440000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40004108007C0001L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000010800000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000404000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF2L,0x40004000007C0001L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000200C45D8CE00L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x000000084518CC00L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000C05184C00L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x6C044680D5184F70L,0x4002000000440000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000020040L,0x0000404000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000805184E00L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000200805184C00L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000040010000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0001000100000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x2000040010000100L,0x4000000000200000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000010100000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0800200C4519CE00L,0x0000440040000001L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000400000000000L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x7C0FE6BCF538CF70L,0x57A24C4AD2440541L,0x0000000000201802L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x6C044680D5184F70L,0x4001000000440000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40004000007C0001L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0800200C4518CE00L,0x0000000000000001L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0800000805184C00L,0x0000000000000001L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x6C044680D5184F70L,0x40004C0000440000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0001002100000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400040440000L,0x0000000000000002L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400040440000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40014000007C0001L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0001002000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000040008000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000004050440000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000004010440000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x000D048090000130L,0x40024A0010000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000008000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024E0020440000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000120000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024E0000440000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000001000004000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0xFE1FE7FDFFF8FF70L,0x57A34C6AD25C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000440008000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4000404000440000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4000400000440000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x4002460000440000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x6C444680D5184F70L,0x4000000000440000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0000009000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000040000440000L});
    public static final BitSet FOLLOW_ruleExpression_in_ruleExpressionStatement = FOLLOW_32;
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0xFE1FE7FDFFF8FF70L,0x57A24C6AD25C0541L,0x0000000000201802L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x7C0FC6BCF538CF70L,0x57A24C6AD2440541L,0x0000000000201802L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4AF2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000002100600000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000002100000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C6AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000002000600000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x6C044680D5184F70L,0x4001002000440000L,0x0000000002800000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A34C6AD2440540L,0x0000000002A01802L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000080000010000L,0x0001000000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000080000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000200040000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000200040002L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x6C0D4680D5184F70L,0x40024A0000440000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A25C4BD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000000L,0x0000100100000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4BD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A34E40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24E40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A40507C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A00407C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x7C07C6B4D518CF72L,0x57A04C4C10440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4AF2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x7C4FC6B4F538CF70L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x7C07C6B4D518CF70L,0x57A04C4810440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000004010000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40004040007C0001L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000140L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x000D048090000130L,0x4002480010000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000000844000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000800L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000082L,0x0000014000009000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000082L,0x0000014000209000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0120000000000002L,0x0000000000002002L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0080000000000002L,0x00000180008206B4L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x7C0FC6B4F538CF72L,0x57A24C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000010000008000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A34C4AD2440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000040010000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x000F849090000130L,0x57A24A0830000400L,0x0000000000200002L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x000F849090000130L,0x57A24A0810000400L,0x0000000000200002L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x6C044680D51A4F70L,0x4002404000440000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x7C0FC6B4D518CF70L,0x57A04C4810440400L,0x0000000000201802L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000020042L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0008040090000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000020042L,0x0000000100000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x6C044680D5184F70L,0x4000400000440000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000040010000100L,0x4001000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24A40407C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x040D048895184D30L,0x4002420000000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000002L,0x0000402000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x4000000805184C00L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000000L,0x000100B000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000000L,0x000100A000000000L,0x0000000002800000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000002L,0x0000401000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A34E00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A24E00007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x6C444680D5184F70L,0x40005C0100440000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x6C444680D5184F70L,0x40004C0100440000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024A0030440000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x000D048090000132L,0x4002420000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000008000L,0x0000040000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x000D048090000130L,0x4002480000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000000L,0x0000004010000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000000L,0x0001001000000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x6C4D4680D5184F70L,0x40024A0010440000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x6C0D4680D5184F70L,0x40024A0010440000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x000D048090000130L,0x4002400000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x200D048090000130L,0x40024A0010200000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0010000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40014040007C0001L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x40014061007C0001L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0009040090000100L,0x4000020000000000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000002000020002L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x6C044680D5184F72L,0x4002000000440000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x6C044680D5184F72L,0x4000000000440000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0xFE1FFFFFFFFFFFF0L,0x52A00800007C0001L,0x0000000000200002L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x7C0FC6B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x7C0FC4B4F538CF70L,0x57A24C4A92440540L,0x0000000000201802L});

}

final class T2S{
	final static int[] M_0 = { 11, 4, 7, -1, -1, 6, -1, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, -1, -1, -1, -1, -1, -1, 10, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_1 = { 41, 36, 46, -1, 43, 47, 49, 32, -1, -1, 31, -1, -1, 53, -1, 48, 30, -1, -1, -1, 50, -1, 33, -1, 38, -1, 45, 44, -1, -1, -1, -1, -1, -1, -1, 40, -1, 26, 42, -1, -1, -1, 35, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, 27, 29, -1, 51, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25};
	final static int[] M_2 = { 6, -1, -1, -1, -1, 38, 33, 42, -1, 40, 17, 10, 13, 79, 86, 12, 23, 89, -1, -1, 8, 9, 66, 20, 19, 11, 81, 14, 83, 35, 68, 22, 41, 80, -1, 16, 15, 58, 48, 84, 37, 77, 28, 39, 90, 88, 18, 32, 60, 47, 57, 36, 67, 82, -1, -1, -1, -1, 78, 29, 25, 46, 43, 30, 85, 24, -1, -1, -1, -1, -1, 69, -1, 70, -1, 62, -1, -1, -1, -1, -1, -1, -1, 31, 76, 75, -1, 34, -1, -1, 74, -1, -1, 44, -1, 45, 71, -1, 72, -1, 61, -1, 26, 49, -1, -1, -1, 7, 63, -1, -1, 21, -1, 87, 73, -1, -1, -1, 50, -1, 55, 52, 53, 54, -1, 56, -1, 27, -1, -1, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, 64, -1, -1, -1, -1, -1, -1, -1, -1, 51};
	final static int[] M_3 = { 4, 7, -1, -1, 6, 11, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, -1, -1, 10, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_4 = { 26, 21, 30, -1, 28, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, 25, -1, 16, 27, -1, -1, -1, 20, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, 17, 13, -1, 32, 18, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_6 = { 25, 20, 29, -1, 27, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, 26, -1, -1, -1, 19, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, 16, 13, -1, 31, 17, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_7 = { 17, 12, 22, -1, 19, 23, 25, 8, -1, -1, 7, -1, -1, -1, -1, 24, 6, -1, -1, -1, 26, -1, 9, -1, 14, -1, 21, 20, -1, -1, -1, -1, -1, -1, -1, 16, -1, 2, 18, -1, -1, -1, 11, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, 27, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_9 = { 16, 11, 21, -1, 18, 22, 24, 7, -1, -1, 6, -1, -1, -1, -1, 23, 5, -1, -1, -1, 25, -1, 8, -1, 13, -1, 20, 19, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, 17, -1, -1, -1, 10, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, 2, 4, -1, 26, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_16 = { 22, 17, 25, -1, 24, 26, 28, 13, -1, -1, 12, 50, -1, -1, -1, 27, 11, 54, -1, -1, 29, -1, 14, -1, 19, 56, 4, 1, -1, -1, 51, -1, 43, 33, -1, 21, -1, 7, 23, -1, -1, -1, 16, 45, 32, 42, 20, 55, -1, -1, -1, -1, -1, -1, 8, 10, 31, 30, 9, -1, -1, -1, -1, -1, -1, -1, 57, -1, 58, -1, 47, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, 62, -1, -1, 3, -1, 5, 59, -1, 60, -1, 46, -1, -1, 34, -1, -1, -1, 2, 48, -1, -1, 49, -1, -1, 61, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 6, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_17 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, 50, -1, -1, -1, 26, 10, 54, -1, -1, 28, -1, 13, -1, 18, 56, 4, 1, -1, -1, 51, -1, 43, 33, -1, 20, -1, 30, 22, -1, -1, -1, 15, 45, 32, 42, 19, 55, -1, -1, -1, -1, -1, -1, 7, 9, 31, 29, 8, -1, -1, -1, -1, -1, -1, -1, 57, -1, 58, -1, 47, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, 62, -1, -1, 3, -1, 5, 59, -1, 60, -1, 46, -1, -1, 34, -1, -1, -1, 2, 48, -1, -1, 49, -1, -1, 61, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 6, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_18 = { 19, 14, 24, -1, 21, 25, 27, 10, -1, -1, 9, -1, -1, -1, -1, 26, 8, -1, -1, -1, 28, -1, 11, -1, 16, -1, 23, 22, -1, -1, -1, -1, -1, -1, -1, 18, -1, 4, 20, -1, -1, -1, 13, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 5, 7, -1, 29, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
	final static int[] M_19 = { 18, 13, 23, -1, 20, 24, 26, 9, -1, -1, 8, -1, -1, -1, -1, 25, 7, -1, -1, -1, 27, -1, 10, -1, 15, -1, 22, 21, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, 19, -1, -1, -1, 12, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, 4, 6, -1, 28, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3};
	final static int[] M_20 = { 14, 11, 62, 35, 5, 63, 65, 56, 21, 22, 55, 31, 23, 28, 29, 64, 54, 24, 27, 33, 66, 37, 57, 39, 6, 42, 61, 4, 16, 18, 19, 20, 49, 38, 40, 13, 44, 46, 3, 17, 26, 50, 59, 47, 9, 48, 10, 2, 45, -1, -1, -1, -1, 30, 51, 53, 36, 67, 52, 41, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 25, 32, 34, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, 1, 74, -1, -1, 12, -1, -1, 8, -1, -1, -1, 69, -1, 72, -1, 71, -1, -1, 73, -1, 7, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70};
	final static int[] M_22 = { 13, 10, 61, 34, 4, 62, 64, 55, 20, 21, 54, 30, 22, 27, 28, 63, 53, 23, 26, 32, 65, 36, 56, 38, 5, 41, 60, 3, 15, 17, 18, 19, 48, 37, 39, 12, 43, 45, 2, 16, 25, 49, 58, 46, 8, 47, 9, 1, 44, -1, -1, -1, -1, 29, 50, 52, 35, 66, 51, 40, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 24, 31, 33, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, 73, -1, -1, 11, -1, -1, 7, -1, -1, -1, 68, -1, 71, -1, 70, -1, -1, 72, -1, 6, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69};
	final static int[] M_24 = { 23, 18, 28, -1, 25, 29, 31, 14, -1, -1, 13, 52, -1, -1, -1, 30, 12, -1, -1, -1, 32, -1, 15, -1, 20, -1, 27, 26, -1, -1, 53, -1, 43, 6, -1, 22, -1, 8, 24, -1, -1, -1, 17, 45, 5, 42, 21, -1, -1, -1, -1, -1, -1, -1, 9, 11, 4, 33, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, 19, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, 3, 46, -1, -1, 34, -1, -1, -1, 51, 48, -1, -1, 49, -1, -1, -1, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 7, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 54, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_25 = { 22, 17, 27, -1, 24, 28, 30, 13, -1, -1, 12, 51, -1, -1, -1, 29, 11, -1, -1, -1, 31, -1, 14, -1, 19, -1, 26, 25, -1, -1, 52, -1, 42, 6, -1, 21, -1, -1, 23, -1, -1, -1, 16, 44, 5, 41, 20, -1, -1, -1, -1, -1, -1, -1, 8, 10, 4, 32, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, 3, 45, -1, -1, 33, -1, -1, -1, 50, 47, -1, -1, 48, -1, -1, -1, -1, -1, -1, 34, -1, 39, 36, 37, 38, -1, 40, -1, 7, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 53, -1, -1, -1, -1, -1, -1, -1, -1, 35};
	final static int[] M_26 = { 25, 20, 30, -1, 27, 31, 33, 16, -1, -1, 15, 54, -1, -1, -1, 32, 14, 58, -1, -1, 34, -1, 17, -1, 22, 60, 29, 28, -1, -1, 55, -1, 45, 8, -1, 24, -1, 10, 26, -1, -1, -1, 19, 47, 7, 44, 23, 59, -1, -1, -1, -1, -1, -1, 11, 13, 6, 35, 12, -1, -1, -1, -1, -1, -1, -1, 61, -1, 62, -1, 49, -1, -1, -1, -1, 1, -1, -1, 18, -1, -1, -1, 21, -1, -1, 66, -1, -1, 52, -1, -1, 63, -1, 64, -1, 48, -1, -1, 36, -1, 5, -1, 53, 50, -1, -1, 51, -1, -1, 65, -1, -1, -1, 37, -1, 42, 39, 40, 41, -1, 43, -1, 9, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 56, -1, -1, -1, -1, -1, -1, -1, -1, 38};
	final static int[] M_27 = { 24, 19, 29, -1, 26, 30, 32, 15, -1, -1, 14, 53, -1, -1, -1, 31, 13, 57, -1, -1, 33, -1, 16, -1, 21, 59, 28, 27, -1, -1, 54, -1, 44, 8, -1, 23, -1, -1, 25, -1, -1, -1, 18, 46, 7, 43, 22, 58, -1, -1, -1, -1, -1, -1, 10, 12, 6, 34, 11, -1, -1, -1, -1, -1, -1, -1, 60, -1, 61, -1, 48, -1, -1, -1, -1, 1, -1, -1, 17, -1, -1, -1, 20, -1, -1, 65, -1, -1, 51, -1, -1, 62, -1, 63, -1, 47, -1, -1, 35, -1, 5, -1, 52, 49, -1, -1, 50, -1, -1, 64, -1, -1, -1, 36, -1, 41, 38, 39, 40, -1, 42, -1, 9, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 55, -1, -1, -1, -1, -1, -1, -1, -1, 37};
	final static int[] M_28 = { 26, 21, 31, -1, 28, 32, 34, 17, -1, -1, 16, 55, -1, -1, -1, 33, 15, 59, -1, -1, 35, -1, 18, -1, 23, 61, 30, 29, -1, -1, 56, -1, 46, 9, -1, 25, -1, 11, 27, -1, -1, -1, 20, 48, 8, 45, 24, 60, -1, -1, -1, -1, -1, -1, 12, 14, 7, 36, 13, -1, -1, -1, -1, -1, -1, -1, 62, -1, 63, -1, 50, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, 22, -1, -1, 67, -1, -1, 53, -1, -1, 64, -1, 65, -1, 49, -1, -1, 37, -1, -1, -1, 54, 51, -1, -1, 52, -1, -1, 66, -1, -1, -1, 38, -1, 43, 40, 41, 42, -1, 44, -1, 10, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 57, -1, -1, -1, -1, -1, -1, -1, -1, 39};
	final static int[] M_29 = { 27, 22, 32, -1, 29, 33, 35, 18, -1, -1, 17, 56, -1, -1, -1, 34, 16, 60, -1, -1, 36, -1, 19, -1, 24, 62, 31, 30, -1, -1, 57, -1, 47, 10, -1, 26, -1, 12, 28, -1, -1, -1, 21, 49, 9, 46, 25, 61, -1, -1, -1, -1, -1, -1, 13, 15, 8, 37, 14, -1, -1, -1, -1, -1, -1, -1, 63, -1, 64, -1, 51, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, 23, -1, -1, 68, -1, -1, 54, -1, -1, 65, -1, 66, -1, 50, -1, -1, 38, -1, -1, -1, 55, 52, -1, -1, 53, -1, -1, 67, -1, -1, -1, 39, -1, 44, 41, 42, 43, -1, 45, -1, 11, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 58, -1, -1, -1, -1, -1, -1, -1, -1, 40};
	final static int[] M_30 = { 22, 17, 25, -1, 24, 26, 28, 13, -1, -1, 12, -1, -1, -1, -1, 27, 11, -1, -1, -1, 29, -1, 14, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, 7, 23, -1, -1, -1, 16, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, 8, 10, -1, 30, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6};
	final static int[] M_32 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, -1, -1, -1, -1, 26, 10, -1, -1, -1, 28, -1, 13, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, 30, 22, -1, -1, -1, 15, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, 7, 9, -1, 29, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6};
	final static int[] M_34 = { 16, -1, -1, -1, -1, -1, 12, -1, -1, 11, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, 13, -1, -1, -1, 4, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, 9, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6};
	final static int[] M_35 = { 21, -1, 24, -1, 23, 25, 27, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, 28, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, 43, 33, -1, 20, -1, 30, 22, -1, -1, -1, -1, 45, 32, 42, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_36 = { 50, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, -1, 58, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, -1, -1, 59, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, 49, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 52};
	final static int[] M_37 = { 21, 16, 24, -1, 23, 25, 27, 12, -1, -1, 11, -1, -1, -1, -1, 26, 10, -1, -1, -1, 28, -1, 13, -1, 18, -1, 4, 1, -1, -1, -1, -1, 43, 33, -1, 20, -1, 30, 22, -1, -1, -1, 15, 45, 32, 42, 19, -1, -1, -1, -1, -1, -1, -1, 7, 9, 31, 29, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, 17, -1, -1, -1, -1, -1, 3, -1, 5, -1, -1, -1, -1, 46, -1, -1, 34, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 40, 37, 38, 39, -1, 41, -1, 6, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36};
	final static int[] M_39 = { 22, 19, -1, -1, 13, -1, 4, 7, -1, -1, 6, -1, -1, -1, -1, 2, 3, -1, -1, -1, 5, -1, 8, -1, 14, -1, -1, 12, -1, -1, -1, 9, -1, -1, -1, 21, -1, -1, 11, -1, -1, -1, -1, -1, 17, -1, 18, 10, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 1, -1, -1, -1, 20, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15};
	final static int[] M_40 = { 67, 47, -1, 68, -1, -1, 33, 34, -1, 43, 35, 40, 41, -1, -1, 36, 39, 45, -1, 49, -1, 51, -1, 54, 28, -1, 29, 31, 32, -1, 61, 50, 52, -1, 56, 58, -1, 30, 38, 62, 65, 59, -1, 60, -1, -1, 57, -1, -1, -1, -1, 42, -1, 63, 48, 69, -1, 53, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 37, 44, 46, 66, -1, -1, -1, -1, -1, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, 74, -1, 73, -1, -1, 75, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72};
	final static int[] M_43 = { 21, 18, -1, -1, 12, -1, 3, 6, -1, -1, 5, -1, -1, -1, -1, 1, 2, -1, -1, -1, 4, -1, 7, -1, 13, -1, -1, 11, -1, -1, -1, 8, -1, -1, -1, 20, -1, -1, 10, -1, -1, -1, -1, -1, 16, -1, 17, 9, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, 19, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14};
	final static int[] M_44 = { 66, 46, -1, 67, -1, -1, 32, 33, -1, 42, 34, 39, 40, -1, -1, 35, 38, 44, -1, 48, -1, 50, -1, 53, 27, -1, 28, 30, 31, -1, 60, 49, 51, -1, 55, 57, -1, 29, 37, 61, 64, 58, -1, 59, -1, -1, 56, -1, -1, -1, -1, 41, -1, 62, 47, 68, -1, 52, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 36, 43, 45, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, 73, -1, 72, -1, -1, 74, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71};
	final static int[] M_47 = { 21, -1, -1, -1, -1, 7, 8, -1, 17, 9, 14, 15, -1, -1, 10, 13, 19, -1, 23, -1, 25, -1, 29, -1, -1, 2, 4, 5, 6, -1, 24, 27, -1, 32, -1, -1, 3, 12, -1, -1, -1, 26, -1, -1, 31, 33, -1, -1, -1, -1, 16, -1, -1, 22, -1, -1, 28, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 18, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_48 = { 53, 48, 58, -1, 55, 59, 61, 44, -1, -1, 43, -1, -1, -1, -1, 60, 42, -1, -1, -1, 62, -1, 45, -1, 50, -1, 57, 56, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, 54, -1, -1, -1, 47, -1, -1, -1, 51, -1, -1, -1, -1, -1, -1, -1, 39, 41, -1, 63, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, 49};
	final static int[] M_49 = { 21, -1, -1, -1, -1, 7, 8, -1, 17, 9, 14, 15, -1, -1, 10, 13, 19, -1, 23, -1, 25, -1, 29, -1, -1, 2, 4, 5, 6, 37, 24, 27, -1, 32, 34, -1, 3, 12, 38, -1, 35, 26, 36, -1, 31, 33, -1, -1, -1, -1, 16, -1, -1, 22, -1, -1, 28, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 18, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_51 = { 8, -1, -1, 7, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1};
	final static int[] M_52 = { 54, 49, 59, 24, 56, 60, 62, 45, 10, 11, 44, 20, 12, 17, 18, 61, 43, 13, 16, 22, 63, 26, 46, 28, 51, 32, 58, 57, 5, 7, 8, 9, 40, 27, 30, 53, 35, 37, 55, 6, 15, 41, 48, 38, 29, 39, 52, 34, 36, -1, -1, -1, -1, 19, -1, 42, 25, 64, -1, 31, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 14, 21, 23, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4};
}