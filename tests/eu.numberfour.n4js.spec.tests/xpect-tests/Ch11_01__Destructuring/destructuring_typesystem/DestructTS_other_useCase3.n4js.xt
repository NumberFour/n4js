/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP  */


// use case:
// IterableN with Promise<> and async / await



var p1 : Promise<string,?>;
var p2 : Promise<number,?>;



async function foo1() {
	// XPECT type of 'result1' --> string
	// XPECT type of 'result2' --> number
	var [result1,result2] = [await p1, await p2];
}





// channeling multiple promises through a function:

async function <T1,T2> waitForBoth(param : Iterable2<Promise<T1,?>,Promise<T2,?>>) : Iterable2<T1,T2> {
	var [p1,p2] = param;
	return [await p1,await p2];
}

async function foo2() {
	// XPECT type of 'result1' --> string
	// XPECT type of 'result2' --> number
	var [result1,result2] = await waitForBoth( [p1,p2] as Iterable2<Promise<string,?>,Promise<number,?>> ); // TODO get rid of cast!
}

