/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


class A {}
class ASub extends A {}
class B {}


class T1 {
	
	get g_onlyInT1() : A { return null; };
	
	get g1() : A { return null; };
	
	public get g2() : A { return null; };
	
	get g3() : A { return null; };
	
	get g4() : A { return null; };
}


class T2 {
	
	get g_onlyInT2() : A { return null; };
	
	get g1() : A { return null; };
	
	private get g2() : A { return null; };
	
	get g3() : ASub { return null; };
	
	get g4() : B { return null; };
}


var u : union{T1,T2};


// XPECT errors --> "Member g_onlyInT1 not present in all types of union; missing from: T2." at "g_onlyInT1"
u.g_onlyInT1;
// XPECT errors --> "Member g_onlyInT2 not present in all types of union; missing from: T1." at "g_onlyInT2"
u.g_onlyInT2;
// XPECT type of 'u.g1' --> A
u.g1;
// XPECT errors --> "The getter g2 is not visible." at "g2"
u.g2;
// XPECT type of 'u.g3' --> union{A,ASub}
u.g3;
// XPECT type of 'u.g4' --> union{A,B}
u.g4;


// writing to a getter
// XPECT errors --> "The accessor g1 is read-only." at "g1"
u.g1 = null;

