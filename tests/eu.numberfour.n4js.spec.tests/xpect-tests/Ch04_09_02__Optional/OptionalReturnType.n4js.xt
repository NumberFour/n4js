/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */

var n : number;


// function declaration

// XPECT noerrors --> "" at "fd" and "string?"
function fd() : string? {
	// function may or may not leave with return statement;
	// return statements may or may not have an expression
	if(n>10) {
		// XPECT noerrors -->
		return "hello";
	}
	else if(n>0) {
		// XPECT noerrors -->
		return;
	}
	// XPECT noerrors -->
}


// function expression

// XPECT noerrors --> "" at "string?"
var fe = function() : string? {}


// function type expression

// XPECT noerrors --> "" at "string?"
var fte : {function():string?};


// methods (but not getters!)

class C {
	
	// note: not checking fields and setters here (different topic)
	
	// XPECT errors --> "The optional modifier isn't allowed here." at "string?"
	get g() : string? {}
	
	// XPECT noerrors --> "" at "string?"
	m() : string? {}
}


// object literal

var ol = {
	
	// XPECT errors --> "The optional modifier isn't allowed here." at "string?"
	get g() : string? {}
};


// with-clause in structural type refs

var obj : ~Object with {
	
	// XPECT errors --> "The optional modifier isn't allowed here." at "string?"
	get g() : string?
	
	// XPECT noerrors --> "" at "string?"
	m() : string?
	
};

