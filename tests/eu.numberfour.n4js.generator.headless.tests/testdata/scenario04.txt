# wsp1/A/src/packA/A.n4js
// Comment to the TESTER (YOU!): This File (scenario01.txt) assembles the content of many files
// The File are separated by a single HASH character. So this Character is off limits to use otherwise
// After the Hashmark up to the end of the line is the relative path of the file to create.
// all other characters till the next HASH are the content of this file.
export public class A {
	constructor() {
		console.log(" in class "+A)
	}
}

# wsp1/A/manifest.n4mf
ArtifactId: A
VendorId: eu.numberfour
ProjectName: "A"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# wsp1/notAproject
# nest/wsp2/B/src/packB/B.n4js
export public class B {
	constructor() {
		console.log(" in class "+B)
	}
}

# nest/wsp2/B/manifest.n4mf
ArtifactId: B
VendorId: eu.numberfour
ProjectName: "B"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# wsp3/C/src/packC/C.n4js
import { B } from "packB/B"
export public class C extends B {
	constructor() {
		console.log(" in class "+C)
	}
}

# wsp3/C/manifest.n4mf
ArtifactId: C
VendorId: eu.numberfour
ProjectName: "C"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
ProjectDependencies { B }
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# nest/wsp2/D/src/packD/D.n4js
import { A } from "packA/A"
export public class D extends A {
	constructor() {
		console.log(" in class "+D)
	}
}

# nest/wsp2/D/src/packD/D2.n4js
import { B } from "packB/B"
export public class D2 extends B {
	constructor() {
		console.log(" in class "+D2)
	}
}

# nest/wsp2/D/manifest.n4mf
ArtifactId: D
VendorId: eu.numberfour
ProjectName: "D"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
ProjectDependencies { A,B }
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# nest/nest/wsp4/E/src/packE/E.n4js
import { D } from "packD/D"
export public class E extends D {
	constructor() {
		console.log(" in class "+E)
	}
}

# nest/nest/wsp4/E/src/packE/E2.n4js
import { C } from "packC/C"
export public class E2 extends C {
	constructor() {
		console.log(" in class "+E2)
	}
}

# nest/nest/wsp4/E/manifest.n4mf
ArtifactId: E
VendorId: eu.numberfour
ProjectName: "E"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
ProjectDependencies { D,C }
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# nest/wsp5/F/src/packF/F.n4js
import { D } from "packD/D"
export public class F extends D {
	constructor() {
		console.log(" in class "+F)
	}
}

# nest/wsp5/F/manifest.n4mf
ArtifactId: F
VendorId: eu.numberfour
ProjectName: "F"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
ProjectDependencies { D }
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# wsp6/G/src/packG/G.n4js
import { F } from "packF/F"
export public class G extends F {
	constructor() {
		console.log(" in class "+G)
	}
}

# wsp6/G/manifest.n4mf
ArtifactId: G
VendorId: eu.numberfour
ProjectName: "G"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
ProjectDependencies { F }
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}

# nest/nest/wsp4/H/src/packH/H.n4js
import { G } from "packG/G"
export public class H extends G {
	constructor() {
		console.log(" in class "+H)
	}
}

# nest/nest/wsp4/H/manifest.n4mf
ArtifactId: H
VendorId: eu.numberfour
ProjectName: "H"
VendorName: "NumberFour AG"
ProjectType: library
ProjectVersion: 0.0.1-SNAPSHOT
ProjectDependencies { G }
Output: "src-gen"
Sources {
	source { 
		"src"
	}
}
