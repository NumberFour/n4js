/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */

// yield* can have 'null' as return, since 'null()' also is not validated.
function * g3a() {
// XPECT noerrors
	let x = yield * null;
	x;
}

function * g3b() {
// err
// yield has return of type any, error case
// XPECT errors --> "any is not a subtype of string." at "yield * g3b()"
	let x : string = yield * g3b(); 
	x;
}

// yield has return
// XPECT noerrors
function * g3c() : Generator<?,?,int> {
	let x = yield g3c(); 
	x;
}

// yield* has return of type TNext
// XPECT noerrors
function * g4() : Generator<?,?,string>{
	let x : string = yield * g4(); 
	x;
}

function g5() {
// err
// yield is only allowed in generators
/* XPECT errors ---
"Couldn't resolve reference to IdentifiableElement 'yield'." at "yield"
"no viable alternative at input ';'" at ";"
"yield is a reserved identifier." at "yield"
--- */
	yield *;
}
 
// yield * may not have a return value
// XPECT noerrors
function * g6() {
	yield *;
}

// yield can provide a return expression using the shorthand form
// XPECT noerrors
function * g7() : int {
	yield * g7();
}

// yield can provide a return expression using the explicit form
// XPECT noerrors
function * g8() : Generator<int, ?, ?> {
	yield  * g7();
}