/* XPECT_SETUP eu.numberfour.n4js.tests.N4JSXpectTest END_SETUP */

abstract class A0 {
	private x;

	private m() {

	}

	private abstract a();
}

export abstract class A1 {
	private x;

	private m() {

	}

// this is expected behavior! May be defined in this file! XPECT noerrors --> "Cannot define abstract method to be private as its implementors may not be able to override it due to visibility constraints." at "a"
	private abstract a();
}

var a1 : A1;
a1.x 

export public abstract class A {
	private x;

	private m() {

	}

// this is expected behavior! May be defined in this file! XPECT noerrors --> --> "Cannot define abstract method to be private as its implementors may not be able to override it due to visibility constraints." at "a"
	private abstract a();
}

class B extends A {
	// to be removed when privat members are rewritten XPECT errors --> "The field B.x overriding field A.x must be annotated with @Override." at "x"
	private x;

	//  to be removed when privat members are rewritten XPECT errors --> "The method B.m overriding method A.m must be annotated with @Override." at "m"
	private m() {

	}
	
	@Override
	// XPECT errors --> "The method B.a cannot override private method A.a." at "a"
	private a() {

	}
}
