/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */



async function foo() {
    return "World";
}
async function bar() {
	// XPECT nowarnings
    var s = await (foo());
    // XPECT warnings --> "Keyword await should only be used on expressions of type Promise<?,?>." at "await (7 + 2)"
    var i = await (7 + 2);
    return "Hello " + i;
}


function nf1(path : string, cb : {function(Error,string)}) : string {
	return null;
}
function nf2(path : string, cb : {function(Error,string)}) : Promise<any, any> {
	return null;
}
async function nfT() {
	// XPECT warnings --> "Keyword await should only be used on expressions of type Promise<?,?>." at "await nf1("", null)"
	await nf1("", null);
	// XPECT nowarnings
	await nf2("", null);
}


class G<T> {
	m(): T {
		return null;
	}
}
var g1: G<Promise<?,?>>;
async function f1() {
	// XPECT nowarnings
	await g1.m();
}
var g2: G<string>;
async function f2() {
	// XPECT warnings --> "Keyword await should only be used on expressions of type Promise<?,?>." at "await g2.m()"
	await g2.m();
}


function pf1(path : string, cb : {function(Error,string)}) : string {
	return null;
}
@Promisifiable
function pf2(path : string, cb : {function(Error,string)}) {
}
async function pfT() {
	// XPECT warnings --> "Keyword await should only be used on expressions of type Promise<?,?>." at "await pf1("", null)"
	await pf1("", null);
	await @Promisify pf2("");
}

class MyPromise extends Promise<any,any> {}
function mp() : MyPromise { return null; }
async function mpc() {
	// XPECT nowarnings
	await mp();
}
