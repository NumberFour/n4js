/* XPECT_SETUP eu.numberfour.n4js.spec.tests.N4JSSpecTest END_SETUP */


interface A {}
interface ASub extends A {}
interface B {}


class T1 {
	
	set s_onlyInT1(value : A) {};
	
	set s1(value : A) {};
	
	public set s2(value : A) {};
	
	set s3(value : A) {};
	
	set s4(value : A) {};
}


class T2 {
	
	set s_onlyInT2(value : A) {};
	
	set s1(value : A) {};
	
	private set s2(value : A) {};
	
	set s3(value : ASub) {};
	
	set s4(value : B) {};
}


var u : union{T1,T2};
var a : A;

// XPECT errors --> "Member s_onlyInT1 not present in all types of union; missing from: T2." at "s_onlyInT1"
u.s_onlyInT1 = null;
// XPECT errors --> "Member s_onlyInT2 not present in all types of union; missing from: T1." at "s_onlyInT2"
u.s_onlyInT2 = null;
// XPECT expectedType at 'null' --> A
u.s1 = null;
// private members are visible inside module XPECT noerrors
u.s2 = null;
// XPECT expectedType at 'null' --> intersection{A,ASub}
u.s3 = null;
// XPECT expectedType at 'null' --> intersection{A,B}
u.s4 = null;


// reading from a setter
// XPECT errors --> "The accessor s1 is write-only." at "s1"
u.s1;

